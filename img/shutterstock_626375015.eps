%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: bd_4_out-03.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: JurgisGreen
%%CreationDate: 4/23/2017
%%BoundingBox: 0 0 800 500
%%HiResBoundingBox: 0 0 800 500
%%CropBox: 0 0 800 500
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-04-23T18:44:56+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-04-23T18:44:57+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-04-23T18:44:57+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8yZt2xXtrdHq8zmOIbcg&#xA;ORLUqABtkSe5uxYwRcjwx+e/knmhaIbnUOcMKX9jb+m1y0rNDGA435kMjCm4qG7V6ZKUqDVDHxnh&#xA;vhsfV3efL7Op72aaX+UFzd2kE0Urz285DiaLj6JAJ2Zi3Zd606H55C8p5BGbtHs3CSMk/VGXnZjt&#xA;yqMh3g7jktufys1PTrNri7t3gRZgEnlkii4CoChJA5PLntQrTpkJHKBZFOTptd2ZnyHHDJ4nF9O0&#xA;xLz6Vy77vkPOGa9oF5p4ETxj04SauV4S1fcCQVPYfD2pkseYS2OxbtV2acVzhLjx9/d5V+L+Boim&#xA;haMK1QVcVBHj3HzGTtw5QoA9D+PsTnyB/wAp55b/AO2pZf8AUQmCf0lgX6TZqmt2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvy8FN9q16e2bdtTS1s3nmji4yC2hKC5l&#xA;iQyGPmwVmK1UV5HiKkV2FcEOVltzXxDHH6uQH9Lr9u2w5B7N5U0nR9N0d9fubZryS1kKQ287cFlu&#xA;GUln6MZuNaHag+LaqjI6aAo5D8Pc4HtRrdRlzQ7Nx0JGjOUdzKR7+79ddChtU1xZdUuIri/nm1WB&#xA;/QKxNLBBGGkQehxiHpyIXNQzUZiPiHTjPKckokg0Pt2Zdk6DS4Z44TxxycdcVmxHi/ivnxRHMbxH&#xA;Q2CidI16bm1vpeoNJcwxfWbvTb0tPFdhYl5Rh5gHQBfhT0wenxbZIGUPqNx73D1fZ+m1W8cfhZZS&#xA;qIjsBZNVXOXIkyMB/N3Q/nTQNOitTdW8Z+oaijPHE5aR1k5cpo+Yoq8R0ViWDA7bbY2pxiBE49Xd&#xA;+y3a2XVY5aTPvPFd8hxQ5EG97G0okV59x5DfiYtLazOJTbgiFxTcKSdiPFWJ336eGWiqBGzZlgRK&#xA;cJHiI3B93d747/AInyB/ynnlv/tqWX/UQmM+RcMv0mzVNbsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVfnLDD+Xsix2xmu4i9X+uuN1P++5FVWFKfyq2/7VOm09Xk3VG/&#xA;4v8AY/r395Mf6u25zph8ix6skhhu2lkl9A2btxBJavqs4bjSlNufXt3yFy4OlOacQ8fhvIJ8XP01&#xA;fUbb7+47d70rV5b+XS9Gm04xiymurlYvQQRFZSXdiwB4LGFjYb9utdzhlxnECKp1WgjosfamWGeO&#xA;WWYAfVITs7Vy9RkbFc9+nca+QLOw0+zu9Ua6nj1C6kt7S5SG1uLiHhBCkkLJxtl4kOyB678a0WtM&#xA;lkJNA0fs/SiHBXojKO5sSkJG+I3uAOv9qC86W8b69FrmnzzR6pfRPBdyXcEkCmOKeJY5Axt1RnkD&#xA;cnrxVBt0FQgy4CNgPx5s4eF4kPEhOfrFcBA7+lXLboCChw1uPK802tKgsJby5pA6NHOtxVxOV4mh&#xA;qysV4duvcZGYn4Y4qa9NLSntOUdL4onwVYMeAwA/V/OJs8t6Ly+6i/L2O7u4VmnlVy7pdxFjRSGI&#xA;SEOqVHHZvVWvhhPHW9fa7CAiSCDMS4T/ADK5G7omj3VKXcfJTycvkhvOnl1LVrlLiO+tWhkO6ySe&#xA;svATVB4typUIOP8Ald8EuKjdNEuDeuP48J+4jbzO/wDR6H6B5rWp2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvy7zbtib2NwyXVtKPijlqjpUDdgEk3OwJG9flkOGwR1&#xA;/FOfDP4c45DvA3Y+HDP4kb/EPY9F1q01GO80bVbr0Le5lSQ3Fs0RWOSOJh6jL8dYeMX2x9ll3Iru&#xA;NPk2MZcvxs6r2g7OMJ4tVpAZZIx3+qzG7E76E3sDR5x4fTSK1byxcJdyTPpQlurgLNPq0CRvbFgU&#xA;d5A8lWV+QI4x+JPxU2syY5iJEdwXD7L7c0eTLjyZZHGcRGw/i4fpBiB1oXI8V9QOapofldRfFxpw&#xA;0/0kSK4v7tEth6cvGORYBEOMhdOdCw5A7Et2nwSlvPl3OLqO2cOAGOmkck5S9J+o7G47EXGjV/zu&#xA;4ciS/mLrVhcoun2bSo2mwyQJByLGSNeKvLHGK0NEPUUCgnbKMs/EkIx+kfe7zsDs46DTzz5yPFzg&#xA;bXHijCR8+d2O889hVvIWaJbNn4kTMSgauxBoTQU7DY/PJysyro5MOEYia9R2+77hsf6yO8gf8p55&#xA;b/7all/1EJgnyLjF+k2aprdirsVdirsVdirsVdiqS+dfNEHlXyrqXmG4ge5h02EzvBGQrOAQKAnb&#xA;vkoxs0rwv/odTyv/ANS3e/8AI6LMj8qe9lwtj/nNPywf+mbvf+R0WP5U968Kon/OZnlt2Cr5avix&#xA;6ASxE/qw/lD3rGBJoblWj/5zB0KQN6flm9fgpZ+M8JKqOpanQDB+VPezOEju+YU2/wCcyPLi7/4b&#xA;vSB1ImhI/CuH8oe9Bxkfi1M/85oeWR/0zd7/AMjosfyh72FLP+h1PLH/AFLd9/yOiwflT3p4WUfl&#xA;t/zkzoXnvzda+W7TRbqznukldbiWSNkHoxmQ1C778chPAYi7QQ9myhDsVdirsVdirsVdir8z/wDC&#xA;vmj/AKs97/0jS/8ANObXiDYrW/l7zXDULpF8NwykW8wKsu6sDx6jAeEtuPMYcvf7iORCe6Za+dbU&#xA;C5j0m8WOAxptHIswc1bmgYFjyKHl8JXx7ZCWKJ3vdzIdrEeiQuJj5/E8W/PqDse7axJofMfne1lt&#xA;YbKw1NbRFT9ykDxqJCQZKIF4KG9vpO5wRjKtpV8WOf8AIylxZcMMgO5PDUj/AFjZOw/pc+VdAd55&#xA;j/MQgQx6dqUiREPH9biluGWUUq45Jx69Nq5ZKNneTiYZ6fHE+HhxxMhzGxr4VtXMd+7FzpnnIXJu&#xA;ZNKu53YlmWa1eVCxBFSjIVr9GTBiBQYZ5SykmR3l1/HLkl83lzzVJxB0e9AUcVAtpqf8R7nfI2O9&#xA;lLIZVfQJx5E8s+ZI/PHl2STSbxI01OzZ3a3lAAFwhJJK7AZGchRYF+ieaxrdirsVdirsVdirsVdi&#xA;rAvz4/8AJP8Amr/mCb/iS5Zh+oJD8+M2bNXgiLsAO/U+A7nCmMbNPQ/J/wCX93rSi6gHp2cnqRBV&#xA;UStMzKFKopWULT1KK7GvIfD8QrmNkzmI2+rzcuYxeKIS4vDI4iIEXQ4pWCZfSOEit+RG+71nS/yw&#xA;0K3sRJJo0FvKqtG1tdrV5GiUSg/vC3JeSgVHWtD45roayRkSeIxq/dW53HQjk066EQI44ZIcRI9Q&#xA;NCUJ+mPEK4ozjLhMokEWL5+lKfMf5P6LptlPPBEdOnjlCQXLerJDI4Cks1FeRUj3HKNVPI9+hlj1&#xA;ZkBGR3HO9vl7ut7Obp5y8bjwx44zFxjDhMo8N87MalPmIwlxCj5h415n8uTaVKIpY/TnArcQkgsh&#xA;IDAEr8BBUggjrmyw5TKwWGqw4zjjkxHiiefl+j7Be+wogRqRaHLiHXh6x/ziv/5OjSP+MF5/1DPm&#xA;PqPoRLk+6c17B2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVg/54RCX8&#xA;pvM0R50ezKn015vu6/ZWq8j4CuWYfqC79Ob4KuPK2rQXHplFIYBoWZ1iMiN0dElKSEdj8OxqDuDm&#xA;ysc7TCRkeHhlxd3CTXyTjTfJmpTCG3likgvrqRUijkULGyMaANI1FjdnWi1O9d+IoWRO+RHJtnLw&#xA;x6omr3PPbnsK6USfL4vfvLGm2OiaGbm2tooriOlvaRl3lRJWIX4gteZUIxO9VNKgmmaDV45ZZcEu&#xA;4yP3beR7vwdnp9bEGJhMyx3GFiIjxRPqHEDVSjxcIl/GL33kBLtN0Ly2rRzXnrfpe5k56kzxMziQ&#xA;ySBWAEdORVwe1evxfFxlGIA/Hn9hY6nLkkBYjwRFR5cvSaJ6mNDezw7kVsUFHZRWurNFPGGtXf0r&#xA;WzAdI2kZVLkfu+Q+MgFyD4gAhWFGbSccr68/f5d9NkO0vBwegEUYiUgPpF0OchG9zt163vfKPzY0&#xA;e7eb00sFaaK4NpLNzCA829RAnqMhNaScfh35kilQM3GjPELPPnfT4eTrpTjikOCVwIFwHrnUduKd&#xA;AiMjfQ3Eeg2bLym88oaxF61FjcW8npTPy9NA3s8vpo4qCKoSPvFc0zj3uPHi/my38j+L8ub0z/nG&#xA;Ly/qNn+bek3d2hhUx3iRoQxLAWz/ABhgCnHwPLftlGcgwRIyBrhPxFfe+1816HYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWCfnq7x/lF5okRirpZlkYbEEOpBGWYhcgyhI&#xA;g2Hwtb+ctQjtxFJBbzyqSyTyIahyKeoVUqjP7sKH9oE75sPCj3N51OYcpyEe7b9X7e6kx0XzNeTX&#xA;T3F9/pl4H9eORpJElkkJNFbgQrguwJ5b9ge2CcI1y/Y2abxjYx5JR5emz6hdEDuJ+XxfRHljU7bX&#xA;PLsttDci6mu2ie2CCSMTGMUm4oQOCqu5YKF+QoM1GozHEeKZ25Hu37gPt/FwhoBLJA44iIgePepy&#xA;jG6iZyP87/JxviocW5Jkn8vmp54ZCZ4RYKn75UimNVgmErbsx58HkahWlffjlcswugR9pdkezpAR&#xA;uMuI8P8ANH1bDbmCe48jz5rUmuroI800EUdjIZgzQtCIPXE0ju0nM/BLJSpU8iab0qC59QIRH848&#xA;uY53v3uGNP4txFyjdEDhlxcEoEx4aMeIc/VfeACLeVfmt5jlsrWERRWv1jU7lnaUj1HAiSjs3NnX&#xA;gGloKjsQw232Gjht6tzEdRvfv6+TTInxOHHOUcZ/myqPDI2PRQ4ZGuKdcpdQSQOQnzbrCTzfWZ2u&#xA;opWbnG7lgOXX02blT5UKnuDmb4Ue5E82QEiMq394+3p+Lelf842a/qOo/nRpCSyFbZYbvjbqSEqL&#xA;ZxyYd2/V0FBQZTniBHYNZyZCCJSlK+8l9r5gNTsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirAvz4/8AJP8Amr/mCb/iS5Zh+oJD8+M2bNFWsxjcMDQj6P1YeYZY5GMrD0ny&#xA;j59utKCRWqpLEX+PkGBUv/eemqugcPt8B7/ZHhgZcAI9QB7r/T+Pe7kxGaQMJyhdRlw8PeZem73s&#xA;2Ko2TwiQsDr1p+aXlrU0ns5J7J5kgWO3uZ2jt/3ckbBm4uE3UAfDxFB1G9Mwo6KcB9UqPy325dAL&#xA;dJnoZY5eAGV8VUTL0euPFPrKZH+bfU8TGvM/5tabOqTQLFJexvI0elghECKg9ZXmrGvx8TwXdi9V&#xA;4GoyWn0BkeKW98+Lej5b8i7TN/gUTixHh/hEoV6he3FDhlwzhLY8tt7G4eKa9qt1qNy19dzCW7n+&#xA;GUAAcAoAAFPEd/n75uICtvwXDyRjCI4a7q/m+XM8/wBYSKRq5Ilxg9X/AOcV/wDydGkf8YLz/qGf&#xA;MfUfQsuT7pzXsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUh8+eVv8&#xA;WeT9V8ufWvqX6TgMH1r0/V9OpB5cOUfLp/MMlCVG1D57/wChIv8Av9P+5Z/2d5k/mvJlxNj/AJwk&#xA;I/6bT/uWf9neH835LxK8P/OGE0LFo/OpViKEjTd6H/o7xOqB5hnjzSgbiaXn/nDIsav5vVj4/owj&#xA;/iN2MP5vy+39inLZsgH8eVOP/OGcvHivnIItKfDpgBIPYkXVT9Jwfm/L7U+NKqG3u/XzPxUG/wCc&#xA;KCf+mz/7ln/Z3h/OeTVan/0JH/3+n/cs/wCzvB+a8k8TLvyr/wCcYP8AAXnS08zf4l/SX1VJk+qf&#xA;UfQ5etG0dfU+sS0pyr9nK8mfiFUpL3TMdi7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+Z/+h2N&#xA;L/6lOf8A6TE/6o5l/lT3suFcP+c1dOKFx5RuOAIUt9cWlTUgV9H2x/KnvRTY/wCc09NP/TKT/wDS&#xA;Yn/VHD+UPetJlB/zlk89il7D5MuZIZHMacboEmgqW2goF9ycB0tdViLkIjmfd+Asm/5y7ghtTcye&#xA;U51jDcd7uhqelKwAYx0t9WeTGYGj7vcfPr+j7UGn/OZ1i/Ph5Snbgpdv9MTZR1P91idLXVMMMp3X&#xA;QX8FI/8AOa+mA0/wpN/0mJ/1Rx/KnvYcKN0H/nMTTdX1zTtKXyvNC2oXUNqJTdqwQzSCPlT0hWnK&#xA;uA6ahdrwvorMVi7FXYq7FXz/AOcP+ct9O8t+adV0B/LU1y+l3Utq1wt0qBzExXkFMTUrTxzJjprF&#xA;2y4Usj/5zR02SKWQeVZgIgCVN4tTyYLt+598P5bzZDESCRyHNav/ADmpph/6ZSf/AKTE/wCqOH8o&#xA;e9jQpGx/85haXKheLy2/wo8kiyXqRlQq8h1ioS/ReJO9PHE6TzRGEiCSKAr7ft+NUoD/AJzK04pI&#xA;/wDhaQenSqm+jDGpp8I9LfD+TPetb0pH/nNPTR/0yk//AEmJ/wBUcfyZ71pYf+c19LHXynP/ANJi&#xA;f9UcH5U97IRa/wCh2NL/AOpTn/6TE/6o4/lT3o4X0fpd8L/TLS+CemLuGOcRk14+ogalfauYpFMU&#xA;TgV2KuxV8669/wA5iabpGuajpTeV5pm0+6mtTKLtVDmGQx8qekaV41zKGmsXbLhQQ/5zY0s/9MpM&#xA;P+jxf+qOH8qe9eFFP/zmJElqt2/k65Fs5CrN9cQoWZeQXkIaV470xjpb6pyQ4JCJ5kcXwPVo/wDO&#xA;ZFmofn5SnQoFZle9RWo9CtFaIE1Brt23w/kz3sa2tWn/AOcvY4LSG7m8nXKW1xy9GU3ahWKNxYAm&#xA;HqD1GD8p5shH6he8avltffvYUZ/+cxraF+D+UZy3prN8F7G44OoYMSsRHQ7+HfE6SurHGDO+Her6&#xA;d3NRk/5zT0tEjb/C0rFwTxF6tVoafF+5wDTG+bbLFUQbBv7Pep/9DsaX/wBSnP8A9Jif9UcP5U97&#xA;XwvlWOOSVwkalnboo6nMsmm2EDI0BZTjRoJbiynhJYoHWaCIufTeaNSOJj+x9huRZqUVSK1NMBlW&#xA;yYaUz9dEipCxW1R4t73oV0eieSvy3sZkUX6vLdySDhEAJIV4hgPUoBXkWrTntT9qtMiZknhas+QY&#xA;oHMKMYA/V/F3kbbcPcRK+IfSzG80fRra2aeR+ctnwFysYRgpWQBWj5pxegYCp+EN4bDKpityd2zQ&#xA;ajJll4cMf7uYlwSO3EREnhl6qjcgTXplwgEmVcStB5esb2ylCwpFfzr6Uscwi5TVo4qfiWp5EKrA&#xA;DxG+GMLFg+pr1naPhZeGcf8ABb2lEco2QK5fTLckcR3lEE7l5r5r8i2NndpeWMUws1cvfWmxeMBq&#xA;lIwQf2aV5VC16kAkWwyg7HYt2TDkA44ATBqiK4enMd3F7vdEnhHP9Sj43s44GKkj/uzQFfiPw/DQ&#xA;be2TFUKY5RITImKle4HIHyTPyB/ynnlv/tqWX/UQmRn9JYF+k2aprdirsVdir87vzlBP5s+bABUn&#xA;VboAD/jKc2eL6QzHJiMEMkjFUQuwBJABJAUcmO3gAa5aApkBzZj5f8vR6tdXNrdWqWYtJI/WQM0U&#xA;8MRkZXVY2DtKxeQD4gWFAPbJG3FlmjCIIPFKdiI6GVbEy+kRFd45k31Zd5e/LqG+0yK5SSMSRytK&#xA;LponKurcQLeZH35I0VaoOjdyfhhknGqJRiz6nHmEhCwf4SY/wyBsX0P0+ruPQGxlt5KWHTPTmt11&#xA;GIsBcW6v6UMUQI9S7+EB+QVuICk9nYNwC5Tp84N25/b2kyRlHwwQR6RKogzNEiNd98V35RB9W0K8&#xA;02ViWk1C0k+saSS1sJViWIfW0VqBkHpPVh8fIg9eNWKnMkgkuDopCEQJRuZB5k1XeD3xsbcr35Fi&#xA;smkah6kkYgYvFCLmQChpCVDhzQ9OLjAQ3DNGrvma+KAklkkK82LFVCLXsq7AZACnInMyqzyFP0u8&#xA;q/8AKL6P/wAwNt/yZXNVLm0JpgV2KuxV+bPn/wD5TzzJ/wBtS9/6iHzaw+kNgS2MRRNbSWkjSTlK&#xA;zK8a0WQsw4ru/MceJqQNz0yRAI3ThyTjOwN726/YQyby35Rnv7Zp3leNVm9EwhVPPYlwH5VWnD4m&#xA;48R49sEp0NkiEY5BHIa7/Leq8yd6A3ZvMtpawWtveySyRwUcRqUaNPhVY1+PkxZqKrFaU2HbKDkP&#xA;v/Hyc3T9mxlc4iOMSlwxvmTZHWpWP4avrtuSKi0/SZI0t5GZ45W5ETUkRxtUFxV+B6VR9qD3qjIf&#xA;cPx8FyaMnikBGc+H1V/CD5bTMhYMfTH0jnuxfzT5QktWhubeQx2Lj05U5GT0owwLuqoBWMc6kCp5&#xA;V+eX48nFz5uHlx+GZeHcvdf+lkTW+3UVVbsSv7S+YTLykuLbTf3QkKvxjiaRivX7Cs7kgHu2Su+T&#xA;V4fASJDhmeY6/trb+xLMDJUSKcemyK37wlYyK7kUBAp88Gx2ZkSiBLkO/wC9lGheXJpFVmdHgu3W&#xA;ESRMH+FeUsi1qOLlYdg1Nj4ZCRsj4n8fNyMcuCOQR9U7jHyIO5IPd6QJEcreyRXdtbaU6TSK000b&#xA;eqJJGjRrZCwkiRwyOpb1Cq9lHUdTkBOvf/a4c9BPLIECXhj1kxjcuIiEjKtrjcYky/i/hPIGP6Jo&#xA;2p+ZbzVbN9dj0rSbGZYLFvSRoZ1E6nijhogxjSISGhPTeg3zJIjCNAXbTHJKeSOeQMcoo9fTL3Hl&#xA;TWoafNonmlNGvtWbUtNMEclu7cbaGdY4aMm5kEchCKAWNafaoxpgyRjkhZFENmj1OTSSJwj69jtx&#xA;EWfqrrw2TSf6ldW9zaxXKkS3IWaC9mchlDyczzAdCaBXkKVqemYnGCQR8fi5cdBkxxnhyjhgTCWM&#xA;deCHDdkS224YyPL1E8hY4fr8AW9rMriRgVcilQYZGiYkdzSOvUb5dj2BHd/b+lydaRklHIQfXH/c&#xA;kx+O0b5jdU8ixcPPvlohgyvqdky0IrT6yo+IAmh26YZHYuDkhw9dj+N+4+T9Is1bQ7FXYq7FX54/&#xA;m+7J+b3ml1kMLLq9wVlWoKESn4hTfbrtmzxfSGRFjvY3YxSXUyGR3WNpB9au+LyFPVNCW41LbAnx&#xA;OXDvWR9PDEWeg7/J6R5D0uOeSxjggjimmYvd3oLzRz2wKtJBMGJ9J29PlGwUbkDruK5TBBBP4/Yu&#xA;oxZccxOMfQeHhMT6okWOMUQeGR+oSGwFjlvP43vtS812+iW0hsdKMMj3+ppG9wbVERniST03QKjO&#xA;qxAfCC2wr0zGxwBiZH5X+OTsM+TwhGIAvn9NC9xxAd8vquRkaPnZZqtprPlcabLLeXGoW18yJcSX&#xA;kLwLBMHCoQ7NRfUrIUH7XFxSgrk5YxIEjamjTai5COQcXESLiBfq6ECJ4rqPdVCiEo88xW5uFMsJ&#xA;vEKyTW1oVCwSXUfIPLKVMQQLG68VU7nfpyBniz7epxf5IOwwDw5Ejv8ATGto8UjKyZ2On8W2wLxq&#xA;8tTJc3E/oFLV5DxMYDCPnV0FFoPsqdtuntl0jtYbsePhnwT+qun3gJPxqxFQNid/YVwFjEW/S7yr&#xA;/wAovo//ADA23/Jlc1MubUmmBXYq7FX5t/mAzHzz5jSp4jVb4gdqm4av6s2kBsPc28RquihohhWY&#xA;uI/VkihklQkEFZVFVI4tuF4g7/djk5b9aDmaMfvAY3cBKXLqAa77F0enV6hodp+htC5zQkNIptZ4&#xA;lDeopr6siCrr8TMQPcdspyG9rbdLEHIJAUYR46Bu9vTf1ddzH6vpOwpXsrXVtZ1eC30w2TJBaXEn&#xA;C6dtorYK55FC8gDBlZY5BxVgaDYNmaOCEe8cnnJxy5ckpZOLHMy4uRiBf833fzhuRVlX1vQ/MWga&#xA;tZWN/Lpgjkie4t7qGVifV9RY5KXE3oujiRqv6e4AI3K0DjlExru706mE/Elkhxmczyjvtv6eEDeN&#xA;ekA7dOqBnhsNV0dYEuCUiVkjb06OivUPwjqKK0hVvo+/CjLgsc6elz4ZZpwymPBLIKIvax/m7EAb&#xA;culeXOvMCyRpa8S0C3ECpdKZQ/N4HZA7qnQcQtARmRj2sef4+1wtXczGctzw91bch7/TV17ujHhK&#xA;6K8YPwyU5Cg7Go3xI3ao5CAQORWDrhYMu8rXuoTXNtaxq1w9u0RgtrdAXkQl1aMBBVnb6yRX7Xbs&#xA;Mqy8x8vx8nYaOMY48nEaArITzAABB57fxCxtyL2G10+11HSl9a2aW9XlRgo9MRujB3fcDgkiv7+J&#xA;yEYDrzHJw9T2llxzBhMDDkA4wDxSMpUKBq74eGPWqsc0Jo/mfzD5e0y/gj0+6gsX1Ce5X0BamJBI&#xA;4j9L05Lad+knA/FTemxzIqMxxdKcSUTjyxwSPHlNVvfHY2IPXi596nrGp6nr19Yfpazuhpul/WZp&#xA;5LxYZkVbyP1HaIw20Bb4ir8uTAbdBSsjEQB82rDlGb+7lRHXiEeR3HMc+Vc+eyM1mbTtCs40MAXi&#xA;WnukDUBdOdV35Ov7lX+GlfsjcbnE4QDQHLn9rssebLqBKcsgAmKx8Qv0jgPFyHEfoNjiAPFsLIHE&#xA;/M119ZeGd5EFxIrPPaoHCxmRjMCOVRQiWlK7Uy/GBuR3/s/Q26ucgIY5EnhgNz3yuXzAkGvIP/Ke&#xA;eXP+2pZf9RCYz5FxH6S5qmt2KuxV2Kvzv/OMqPza81ll5KNVuSVrSo9U7VzZ4/oHubYEAi9wx/Ty&#xA;bm9t42lZfUliioF9QhAQqniSofj2Un2y2LDNw8JIrbpy+16T5NvR9at+XpQTwyyRzRxxPDFHGeMT&#xA;yXNGEXKQcuKIePXuEXIZcNjZGHtI46E7MBEcPIGUgeKIuMeIgc7lxb8PSy9D9bVNF1S51nSoQ808&#xA;MSyRxNG0rMlaMJGjmQlmPEMlKcqN9rbHxyH0y2/H4+xy8sPEjxQkZ8x/NAqR2AJ4o8MeYkP4JkEg&#xA;IaTUdb1pZNOurWS001pla6aZ43Ekn1gzsCiwqXdmYmoNV5NQkE1nknEbA78vxuukwzjWQj+HiAsX&#xA;XebFCPnLuo0eRX5+1K0OnLaS3KWk9D9UniXmyXIUyvbTRj9hgqxrxXZx8XtPBjBjuHX59Vlw6kSx&#xA;Eyhsd6lE8MjGOSJN73xTs9Ds8O1CL0X9N1ZZlr6oagoRsQB7MCMvNuRxRlEEcygrr6v6x+rlzFRd&#xA;5AA3LiOWwJFOVae2QLGF1u/Svyr/AMovo/8AzA23/Jlc1MubFNMCuxV2Kvzc8/xv/jfzJLT4Bq16&#xA;tajr9Yc9M2kDsB5NwgeHi6clHTLuO4ukieFYy9s1rF6NI+UhQhHk2bkWbZulcOQ7X3N3Z8JeJwxP&#xA;18Q3/pDYDl1p6PoN/Hf6N6VzUhUEiqf72hKwuV/2fE7bUbKMsSBfxczSZYnNGAuPFHgvoKG1/Cvs&#xA;70+0XzndaJbT2Gm2WnEsRcvLeo7Mht29S3YrExLOOHxM441+yfiAzKEITAkDQeezDU4Mphn45zJA&#xA;G9/6W+ndW/eNl+oeb9Z1m2htri00prB5FmWUCSSSERRlBHH9YNWWkZqkdTvy25VJhjjXF5MdXknD&#xA;LLFEzGSMqHDY4ug3HQ2COKh8krmksrLTVYRxyC2Vzx9UktFBL6rj1CqSMWLKpp18AKUxYjiJI5O/&#xA;1M54hHHOUvF4RIyIsRmQBuLI24SeWxr6i8y8wS3lytm9y6g+lIQhdapydpuPGvJRxkHHl17ZfE2S&#xA;fP7nFywjjjCHXh4j75E1848P6UhmWNXoj+oKAk0I3IqRv4HEFhOIB2NrEClgGPFSRyIFSB8tsLAp&#xA;jZ3n1CeVraUyI8bR8h8BIcbVBr0NDgoSFEMwZYyJQlvX3iiN/IkX8Xo/kTzrc/WLSwuatfzqFsZk&#xA;KsXJJQI6/EOTkb8+tB0qWNeTEQbizhmxSxyhmN463scq32ltLYcqkK/pECLM9Zu9JkSQRyi3WsYm&#xA;YOixcDQLGkcwRkHNeQXu257ZVk9XIe/9IbeyY5MJjxTGwkYQkLlZ+jIeHaRoiJO+w4O9EW2p6Xps&#xA;EUsASe4iRUMpI9P4SOLFPhV2XcI+3w7VyeP013uF2linqpT4pcGEyJjGtxxX/FvQNcUo779I82B+&#xA;dPPkk8SafGGhhugJmuJVEiSKwVCwFPiTlArLWPt075YBKrZ4tPp/EkOIbHhsA0Pq63IiuM3V8XfR&#xA;LzHULye7uprm4f1J53aSWQ0HJ3NWO1O5yzkhNfIBH+OvLYpv+lbLfv8A70Jlc+RSTs/SXNW1OxV2&#xA;KuxV+d/5xo7/AJt+a0QFnbVbkKo6kmUgDNnjNQHubYRMiAOZYvYpO90lmvGOSVxCfV4qoLkL8bN9&#xA;kA+PTrlgIRMGNijfd19zL/LOqatDrUk0awxWVmIo9QWJ0WFY45EUSryL781VuaAnv3ywOu1cIygI&#xA;yJ3JMeZq+Yr3dDzZ7p/muCDTYzYvDNDIyRWttFIZHado15yyR0hdFL/CoVVXlUkAUrRmhEi+rf2c&#xA;NT+YEJE8PCLJ4fTDiqNE8Q9P8XEbEbAINkIRfmP+8S1uPR0uOGFp1aX/AEmO4/dsBCfTIZVZhyHA&#xA;0PTvuMOGIjVbuR2tPLPKckJEwmRy4RKN/wC6I33IsEg9I1CfMms6TdaPaxW78HSQSy2ZVi55hwzL&#xA;KY0VRxCUQLx35bsWAyKrk4mDxeImdyPISMrod3DZ6k730quTGtRu9O5O2nrNB6go0UjK6qrVJQNS&#xA;pA2oTkJCz5Odp5GGMgn1nbbkY/rv4JSaVNOmBX6YeVf+UX0f/mBtv+TK5qZc2pNMCuxV2Kvzb89h&#xA;D5+8xh24g6re/FStP9Jfc5tIcg2DkkscjoyuDRvtKVI2ofbpkwysggjmzfyv5yltvTs1SUyyzgmQ&#xA;fvKRsp5KqqvPiG+IoDxbv0BxljBGzWc0uPjyHihvtyF9/MC/lTM57/T7q0EiKHgr6rx29JIXRNwa&#xA;KAzOpG1Tse2+2NwEGhtbssepjIcUv3nD9PMTj6u87x6bRA4hKMeLbe7LU9J0mKO4SY27WxM0aTKS&#xA;VkHHizVLOF3Y8VFTsO2SEJWOv4+TXqs8ckZxIiDOPDKW/qHlylfSN2OG+Q9LCfMHmyK+dbO3YxKG&#xA;WM3shcKqqdiqBWdFU7mgqaVpXbLseMjm06jJA2Ygy/Tt5+d9w38mLTSXl9PPcyA3U1DcXUjElqA0&#xA;YsdutRkuTj5J8rPPb9Q+zatqS5iCxIFATsPDAyaxVta12xVFLXiOX8vwUp/N+1kgsr2ZZaf4q+sL&#xA;+i6el6LfVvS9b0OHoHnw9fvTnx5ftfY7ZGVX+Px8lwVwRurva/q+r+jtV/ztqvi2tbqP+KPq/wDu&#xA;Y9b9DfW0+telx9T1PS+Lj6n7z+7r1+HlXvkhXRx972/vKlV/bf45fFjlv6n1r/R/Tr6b/wC9Pp8f&#xA;7s8v7z4K9eHetKb4d23Lw116fo7ul/ZzQt9X1xX0vsr/AHP2en6/HKo8nK1H1fw8h9PLl9/f5pt5&#xA;A/5Tzy3/ANtSy/6iExn9JaC/SbNU1uxV2KuxV+d35y1/5Wz5sp1/St1T/kac2eL6Q2RYbvX3yxSr&#xA;r6ld6171yQU31ZDp/DhcfUvV/uk9H0+XP1+fw+rX4Kdf+FpvkY3R4m3U8Pi4/Brl/Fz63d7X7tuH&#xA;zQ7/AKf/AEK3qer+i+S8OfLh1NPT5bUr4f1ycuYtx8NXLhq69X03Vj4865fFA3Xr/Vbf1q14f6NT&#xA;jT0ub8uVPi5c605dvamR6t38G/FfTure6+Pdtd9Uuetd8BYBbir9MPKv/KL6P/zA23/Jlc1MubWm&#xA;mBXYq7FX5s+f/wDlPPMn/bUvf+oh82sPpDYEji4eqnqV9Oo58acuNd6V75JB5bMkj/Rfon6v69eb&#xA;+h69frHpeovofV/S25cOXqc/g68fipib6c/sRg5DxeHg4hxcNcV8Jv6v4brzurS+y9TjLXh6VF9T&#xA;nx5U5r/d8tuf8K5MpHF0/ZyPNsfWfrLfVOXL1l9Hlx9flyPClPi5ePHv9GKTxcEuOv6V159+9d/2&#xA;9FTVvrFB63o8vUPrceXr+v6Ufq+t6v7+vPrX4OfPjtjK3HwcN9ar4VZqq2/TVWkr1rvkC5AaxV//&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c1b26711-fa8a-6a4d-82c1-19a9ba7db1d7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c1b26711-fa8a-6a4d-82c1-19a9ba7db1d7</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5a30d8d3-613d-3f47-afe2-b9ee46b48825</stRef:instanceID>
            <stRef:documentID>xmp.did:5a30d8d3-613d-3f47-afe2-b9ee46b48825</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f4467da3-3fba-0b4f-bf4d-5cc084e8a22d</stEvt:instanceID>
                  <stEvt:when>2017-04-20T23:02:21+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c1b26711-fa8a-6a4d-82c1-19a9ba7db1d7</stEvt:instanceID>
                  <stEvt:when>2017-04-23T18:44:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=24 B=74 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>24</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=79 G=255 B=249 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>79</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=2 B=48 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>2</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=38 G=33 B=105 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>38</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>105</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
800 500 li
800 0 li
cp
clp
800 500 mo
.000200272 500 li
.000200272 .000400543 li
800 .000400543 li
800 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.14902 .129412 .411765 ]
/C1 [.0666667 .00784314 .188235 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
np
399.426 414.666 mo
398.684 414.666 li
398.684 404.423 li
399.426 404.423 li
399.426 414.666 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~2uin:s8OtVs#'iV2?3\5s8OqUs"scU1B7A0s8OkSs"XQR1&q8.s8ObPs"FEP0E;&)s8O_Os"=?O/H>`$
s8OYMs""-L/-#W"s8OSKs!n'K.f]Mss8OMIs![pI-ia2os8OJHs!@^F-3*uks8OAEs!7XE,ldlgs8O;C
s!%LC+ohQcs8O8Bru_:@+92?_s8O/?ruV4?*rl6[s8O)=ruD(=)uopWs8O&<ru1q;)ZTgUs8Nr9rtte9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
np
404.65 422.293 mo
403.753 396.631 li
404.495 396.605 li
405.33 420.518 li
405.262 420.521 405.194 420.523 405.125 420.525 cv
405.143 421.129 li
405.212 421.127 405.282 421.125 405.351 421.123 cv
405.391 422.267 li
404.65 422.293 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
410.518 420.69 mo
408.909 397.683 li
409.648 397.63 li
411.257 420.638 li
410.518 420.69 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
416.246 418.554 mo
414.178 398.883 li
414.917 398.805 li
416.985 418.476 li
416.246 418.554 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
421.879 416.51 mo
419.503 399.608 li
420.239 399.503 li
422.615 416.406 li
421.879 416.51 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
428.051 418.017 mo
424.24 396.397 li
424.969 396.269 li
428.781 417.889 li
428.051 418.017 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
434.809 421.43 mo
434.041 417.818 li
434.282 417.77 434.524 417.721 434.766 417.671 cv
435.533 421.277 li
434.809 421.43 li
433.915 417.227 mo
428.32 390.904 li
429.045 390.749 li
434.641 417.079 li
434.398 417.129 434.156 417.178 433.915 417.227 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
440.12 417.67 mo
433.771 392.205 li
434.489 392.026 li
440.838 417.491 li
440.12 417.67 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
445.919 416.215 mo
445.589 415.066 li
445.828 415 446.066 414.934 446.304 414.868 cv
446.631 416.009 li
445.919 416.215 li
445.422 414.485 mo
438.64 390.83 li
439.352 390.625 li
446.137 414.286 li
445.899 414.353 445.661 414.419 445.422 414.485 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
449.503 407.901 mo
445.619 395.942 li
446.323 395.713 li
450.207 407.671 li
449.503 407.901 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
453.616 402.43 mo
451.948 397.845 li
452.646 397.59 li
454.315 402.175 li
453.616 402.43 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
464.155 413.556 mo
462.491 409.436 li
462.721 409.346 462.95 409.255 463.18 409.164 cv
464.842 413.278 li
464.155 413.556 li
462.265 408.875 mo
451.725 382.785 li
452.411 382.507 li
462.954 408.603 li
462.724 408.695 462.494 408.785 462.265 408.875 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
468.595 408.537 mo
457.454 383.516 li
458.132 383.214 li
469.272 408.237 li
468.595 408.537 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
471.833 401.497 mo
464.232 385.914 li
464.899 385.589 li
472.499 401.173 li
471.833 401.497 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
475.859 396.673 mo
470.051 385.75 li
470.706 385.403 li
476.514 396.325 li
475.859 396.673 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
485.418 401.764 mo
470.157 375.331 li
470.801 374.96 li
486.061 401.393 li
485.418 401.764 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
488.413 395.139 mo
476.638 376.294 li
477.267 375.901 li
489.042 394.746 li
488.413 395.139 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
496.535 396.616 mo
477.788 368.826 li
478.403 368.411 li
497.149 396.202 li
496.535 396.616 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
493.745 382.396 mo
489.634 376.736 li
490.234 376.302 li
494.345 381.961 li
493.745 382.396 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
501.679 383.392 mo
490.529 369.12 li
491.114 368.663 li
502.264 382.935 li
501.679 383.392 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
504.861 378.108 mo
495.943 367.479 li
496.51 367 li
505.429 377.629 li
504.861 378.108 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
515.386 381.188 mo
513.028 378.569 li
513.213 378.406 513.398 378.243 513.583 378.079 cv
515.936 380.693 li
515.386 381.188 li
512.624 378.12 mo
493.766 357.175 li
494.316 356.68 li
513.178 377.63 li
512.994 377.793 512.809 377.957 512.624 378.12 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
519.708 376.909 mo
497.533 353.946 li
498.066 353.43 li
520.24 376.393 li
519.708 376.909 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
525.159 373.728 mo
521.7 370.387 li
521.786 370.3 521.872 370.213 521.957 370.126 cv
521.526 369.702 li
521.439 369.79 521.352 369.878 521.264 369.967 cv
499.905 349.34 li
500.421 348.807 li
525.674 373.195 li
525.159 373.728 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
521.738 362.397 mo
510.875 352.615 li
511.37 352.065 li
522.233 361.846 li
521.738 362.397 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
526.777 359.09 mo
513.093 347.61 li
513.571 347.041 li
527.254 358.523 li
526.777 359.09 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
532.962 356.527 mo
513.874 341.614 li
514.332 341.029 li
533.42 355.942 li
532.962 356.527 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
537.284 352.323 mo
516.217 337.017 li
516.651 336.417 li
537.207 351.351 li
537.203 351.357 537.199 351.362 537.195 351.367 cv
537.681 351.726 li
537.686 351.719 537.691 351.713 537.696 351.706 cv
537.718 351.723 li
537.284 352.323 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
541.087 347.683 mo
518.768 332.628 li
519.182 332.014 li
541.501 347.07 li
541.087 347.683 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
547.049 344.35 mo
544.06 342.482 li
544.193 342.274 544.327 342.066 544.459 341.857 cv
547.442 343.721 li
547.049 344.35 li
543.547 342.162 mo
518.837 326.721 li
519.231 326.092 li
543.947 341.537 li
543.814 341.745 543.681 341.954 543.547 342.162 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
549.524 338.736 mo
522.069 322.886 li
522.441 322.243 li
549.894 338.093 li
549.524 338.736 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
540.789 327.216 mo
536.179 324.764 li
536.526 324.11 li
541.136 326.562 li
540.789 327.216 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
553.311 327.083 mo
552.953 326.909 li
553.064 326.688 553.174 326.467 553.285 326.246 cv
553.635 326.416 li
553.311 327.083 li
552.41 326.644 mo
528.691 315.075 li
529.016 314.41 li
552.742 325.981 li
552.631 326.202 552.521 326.424 552.41 326.644 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
549.569 318.854 mo
537.12 313.311 li
537.421 312.633 li
549.87 318.176 li
549.569 318.854 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
558.005 316.054 mo
557.955 316.034 li
558.05 315.806 558.145 315.578 558.239 315.35 cv
558.283 315.367 li
558.005 316.054 li
557.395 315.807 mo
533.022 305.959 li
533.299 305.273 li
557.679 315.123 li
557.585 315.352 557.49 315.58 557.395 315.807 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
555.18 308.655 mo
539.823 303.066 li
540.078 302.368 li
555.435 307.956 li
555.18 308.655 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
564.439 305.56 mo
562.182 304.827 li
562.208 304.749 562.234 304.672 562.26 304.594 cv
561.688 304.403 li
561.662 304.482 561.635 304.561 561.608 304.64 cv
534.185 295.731 li
534.413 295.027 li
564.668 304.856 li
564.439 305.56 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
567.669 300.169 mo
563.999 299.117 li
564.069 298.88 564.139 298.643 564.209 298.405 cv
567.875 299.456 li
567.669 300.169 li
563.417 298.95 mo
534.205 290.575 li
534.411 289.862 li
563.628 298.239 li
563.558 298.476 563.488 298.714 563.417 298.95 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
555.124 290.73 mo
549.632 289.36 li
549.812 288.641 li
555.303 290.011 li
555.124 290.73 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
569.579 288.059 mo
567.02 287.515 li
567.074 287.274 567.127 287.033 567.18 286.792 cv
569.733 287.334 li
569.579 288.059 li
566.428 287.389 mo
537.687 281.281 li
537.84 280.557 li
566.588 286.666 li
566.536 286.907 566.482 287.148 566.428 287.389 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
564.012 280.897 mo
545.386 277.614 li
545.513 276.884 li
564.139 280.167 li
564.012 280.897 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
557.585 274.09 mo
553.563 273.525 li
553.667 272.789 li
557.689 273.355 li
557.585 274.09 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
570.285 269.805 mo
570.006 269.776 li
570.034 269.53 570.062 269.283 570.089 269.037 cv
570.363 269.066 li
570.285 269.805 li
569.405 269.713 mo
542.234 266.858 li
542.312 266.118 li
569.488 268.974 li
569.461 269.22 569.433 269.467 569.405 269.713 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
567.581 263.59 mo
545.927 262.077 li
545.98 261.338 li
567.633 262.851 li
567.581 263.59 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
563.227 257.539 mo
550.884 257.108 li
550.909 256.366 li
563.253 256.797 li
563.227 257.539 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
559.784 251.805 mo
554.546 251.805 li
554.546 251.064 li
559.784 251.064 li
559.784 251.805 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
554.245 246.386 mo
554.219 245.644 li
559.892 245.448 li
559.918 246.189 li
554.245 246.386 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
554.44 240.94 mo
554.388 240.199 li
559.118 239.868 li
559.171 240.61 li
554.44 240.94 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
538.821 237.116 mo
538.742 236.381 li
573.777 232.699 li
573.855 233.435 li
538.821 237.116 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
541.522 231.787 mo
541.417 231.051 li
569.732 227.072 li
569.836 227.807 li
541.522 231.787 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
540.923 226.796 mo
540.796 226.067 li
568.097 221.251 li
568.138 221.495 568.179 221.739 568.22 221.982 cv
540.923 226.796 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
545.452 220.696 mo
545.299 219.972 li
561.967 216.429 li
562.121 217.154 li
545.452 220.696 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
545.158 215.39 mo
544.979 214.671 li
559.779 210.981 li
559.958 211.7 li
545.158 215.39 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
544.806 210.025 mo
544.601 209.313 li
557.273 205.68 li
557.479 206.393 li
544.806 210.025 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
537.755 206.758 mo
537.526 206.051 li
561.098 198.392 li
561.327 199.099 li
537.755 206.758 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
537.713 201.362 mo
537.458 200.666 li
557.547 193.356 li
557.802 194.05 li
537.713 201.362 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
536.916 196.136 mo
536.638 195.447 li
554.388 188.275 li
554.666 188.964 li
536.916 196.136 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
540.34 188.935 mo
540.039 188.257 li
546.652 185.315 li
546.953 185.993 li
540.34 188.935 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
529.557 188.197 mo
529.233 187.531 li
552.768 176.051 li
553.092 176.717 li
529.557 188.197 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
525.776 184.474 mo
525.428 183.82 li
551.539 169.937 li
551.887 170.591 li
525.776 184.474 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
532.425 174.861 mo
532.054 174.217 li
539.54 169.896 li
539.911 170.539 li
532.425 174.861 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
527.191 171.805 mo
526.797 171.173 li
539.089 163.492 li
539.483 164.123 li
527.191 171.805 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
525.826 166.373 mo
525.412 165.76 li
534.441 159.668 li
534.855 160.283 li
525.826 166.373 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
523.79 161.27 mo
523.353 160.667 li
530.147 155.729 li
530.584 156.331 li
523.79 161.27 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
510.279 165.006 mo
509.821 164.421 li
537.014 143.178 li
537.472 143.763 li
510.279 165.006 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
509.821 158.976 mo
509.343 158.408 li
530.528 140.632 li
531.006 141.2 li
509.821 158.976 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
515.244 147.317 mo
514.749 146.767 li
517.864 143.96 li
518.359 144.51 li
515.244 147.317 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
507.417 147.306 mo
506.901 146.773 li
518.162 135.899 li
518.678 136.432 li
507.417 147.306 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
499 148.47 mo
498.467 147.955 li
518.377 127.339 li
518.555 127.51 518.732 127.682 518.91 127.854 cv
499 148.47 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
502.848 136.713 mo
502.298 136.214 li
506.853 131.158 li
507.403 131.656 li
502.848 136.713 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
497.444 134.754 mo
496.877 134.28 li
503.928 125.876 li
504.496 126.352 li
497.444 134.754 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
491.845 133.272 mo
491.26 132.814 li
500.948 120.413 li
501.533 120.871 li
491.845 133.272 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
486.43 131.803 mo
485.831 131.368 li
497.549 115.238 li
498.148 115.672 li
486.43 131.803 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
482.382 128.559 mo
481.768 128.142 li
492.555 112.153 li
493.169 112.57 li
482.382 128.559 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
480.43 121.906 mo
479.802 121.511 li
485.25 112.792 li
485.879 113.187 li
480.43 121.906 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
475.832 119.195 mo
475.189 118.824 li
480.388 109.818 li
481.031 110.189 li
475.832 119.195 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
469.595 119.556 mo
468.941 119.208 li
476.97 104.106 li
477.625 104.453 li
469.595 119.556 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
465.611 115.82 mo
464.945 115.495 li
471.12 102.831 li
471.787 103.156 li
465.611 115.82 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
456.679 122.919 mo
456.002 122.618 li
470.048 91.0687 li
470.726 91.3696 li
456.679 122.919 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
453.208 118.389 mo
452.522 118.111 li
463.21 91.6541 li
463.439 91.7456 463.668 91.8377 463.897 91.9304 cv
453.208 118.389 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
449.89 112.851 mo
449.192 112.596 li
456.373 92.8676 li
457.07 93.1223 li
449.89 112.851 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
445.686 109.119 mo
444.982 108.888 li
450.142 93.0062 li
450.846 93.2377 li
445.686 109.119 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
439.709 111 mo
438.996 110.797 li
445.563 87.8968 li
446.275 88.0989 li
439.709 111 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
436.165 104.123 mo
435.446 103.944 li
438.444 91.9173 li
439.162 92.0969 li
436.165 104.123 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
428.749 113.514 mo
428.025 113.358 li
434.469 83.0401 li
434.711 83.0897 434.952 83.14 435.194 83.1908 cv
428.749 113.514 li
435.32 82.5998 mo
435.078 82.549 434.836 82.4988 434.594 82.4493 cv
435.106 80.0442 li
435.83 80.2006 li
435.32 82.5998 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
424.469 109.433 mo
423.739 109.305 li
428.551 82.0199 li
429.281 82.1468 li
424.469 109.433 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
420.317 102.808 mo
419.582 102.705 li
421.8 86.9173 li
422.536 87.0219 li
420.317 102.808 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
414.807 105.117 mo
414.068 105.041 li
416.356 83.2622 li
417.095 83.3373 li
414.807 105.117 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
409.926 101.27 mo
409.187 101.218 li
410.241 86.1497 li
410.98 86.2025 li
409.926 101.27 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
404.395 109.134 mo
403.653 109.112 li
404.683 79.6186 li
404.929 79.6253 405.177 79.6326 405.425 79.6404 cv
404.395 109.134 li
405.446 79.036 mo
405.198 79.0282 404.951 79.021 404.704 79.0143 cv
404.75 77.7064 li
405.491 77.7299 li
405.446 79.036 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
399.426 100.67 mo
398.684 100.67 li
398.684 85.9758 li
399.426 85.9758 li
399.426 100.67 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
393.423 100.787 mo
392.91 86.0776 li
393.652 86.0549 li
394.164 100.763 li
393.423 100.787 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
388.052 99.4311 mo
387.256 88.0384 li
387.997 87.9868 li
388.794 99.3792 li
388.052 99.4311 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
383.754 109.407 mo
380.565 79.0482 li
381.3 78.9719 li
384.489 109.331 li
383.754 109.407 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
379.029 111.611 mo
374.334 78.2191 li
375.07 78.1146 li
379.765 111.507 li
379.029 111.611 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
373.793 110.299 mo
368.87 82.3902 li
369.113 82.3454 369.356 82.3012 369.599 82.2575 cv
374.523 110.171 li
373.793 110.299 li
368.765 81.7947 mo
368.675 81.2807 li
369.404 81.1537 li
369.494 81.6621 li
369.251 81.7057 369.008 81.7499 368.765 81.7947 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
368.428 109.134 mo
363.208 84.5803 li
363.933 84.4241 li
369.152 108.978 li
368.428 109.134 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
361.277 101.444 mo
359.614 94.7786 li
360.332 94.5989 li
361.995 101.264 li
361.277 101.444 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
356.005 102.646 mo
354.229 96.4534 li
354.941 96.2504 li
356.717 102.444 li
356.005 102.646 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
353.566 112.636 mo
346.119 89.7221 li
346.825 89.4896 li
354.273 112.405 li
353.566 112.636 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
345.983 106.702 mo
343.277 99.2747 li
343.972 99.0199 li
346.677 106.447 li
345.983 106.702 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
341.192 109.209 mo
337.771 100.743 li
338.46 100.465 li
341.881 108.932 li
341.192 109.209 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
340.044 119.811 mo
328.765 94.478 li
329.428 94.1829 li
329.66 94.6927 li
329.664 94.691 329.667 94.6893 329.671 94.6877 cv
340.722 119.51 li
340.044 119.811 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
333.405 117.679 mo
325.417 101.299 li
326.083 100.975 li
334.072 117.355 li
333.405 117.679 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
328.096 118.771 mo
320.901 105.242 li
321.556 104.894 li
328.751 118.424 li
328.096 118.771 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
323.279 120.932 mo
316.075 108.451 li
316.718 108.08 li
323.922 120.562 li
323.279 120.932 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
319.415 124.686 mo
310.491 110.406 li
311.122 110.012 li
320.047 124.292 li
319.415 124.686 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
311.704 122.598 mo
308.961 118.531 li
309.575 118.114 li
312.318 122.181 li
311.704 122.598 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
314.224 135.308 mo
298.203 113.26 li
298.402 113.111 298.601 112.964 298.8 112.817 cv
314.827 134.873 li
314.224 135.308 li
297.848 112.771 mo
297.41 112.167 li
298.012 111.733 li
298.445 112.328 li
298.246 112.475 298.047 112.623 297.848 112.771 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
306.798 133.955 mo
296.04 120.185 li
296.625 119.727 li
307.382 133.497 li
306.798 133.955 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
305.628 140.666 mo
288.651 120.437 li
288.926 120.207 li
289.163 120.485 li
289.259 120.403 289.354 120.321 289.451 120.239 cv
306.195 140.192 li
305.628 140.666 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
303.11 145.434 mo
284.433 124.69 li
284.615 124.522 284.797 124.355 284.98 124.188 cv
303.661 144.936 li
303.11 145.434 li
284.028 124.24 mo
282.855 122.937 li
283.405 122.439 li
284.575 123.739 li
284.393 123.905 284.211 124.073 284.028 124.24 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
293.491 142.654 mo
284.419 133.26 li
284.952 132.744 li
294.024 142.138 li
293.491 142.654 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
294.56 151.042 mo
275.952 133.074 li
276.122 132.894 276.292 132.715 276.462 132.535 cv
295.075 150.509 li
294.56 151.042 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
293.951 157.298 mo
271.939 137.478 li
271.96 137.455 271.98 137.432 272 137.409 cv
271.547 137.008 li
271.528 137.03 271.509 137.051 271.49 137.073 cv
268.661 134.526 li
269.159 133.976 li
294.449 156.748 li
293.951 157.298 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
290.261 160.63 mo
265.133 139.545 li
265.608 138.978 li
290.736 160.062 li
290.261 160.63 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
276.635 156.262 mo
271.83 152.508 li
272.288 151.922 li
277.093 155.676 li
276.635 156.262 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
273.84 160.919 mo
268.007 156.682 li
268.441 156.08 li
274.275 160.317 li
273.84 160.919 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
280.193 171.709 mo
257.492 156.398 li
257.628 156.191 257.764 155.985 257.901 155.779 cv
280.609 171.095 li
280.193 171.709 li
256.991 156.06 mo
255.34 154.947 li
255.757 154.332 li
257.4 155.441 li
257.263 155.647 257.127 155.853 256.991 156.06 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
277.635 176.002 mo
254.306 161.426 li
254.436 161.213 254.566 161.002 254.696 160.792 cv
278.029 175.371 li
277.635 176.002 li
253.793 161.105 mo
251.91 159.929 li
252.304 159.297 li
254.182 160.471 li
254.053 160.681 253.923 160.893 253.793 161.105 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
267.378 175.839 mo
256.505 169.563 li
256.875 168.919 li
267.749 175.197 li
267.378 175.839 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
270.457 183.478 mo
248.473 171.789 li
248.586 171.57 248.7 171.351 248.815 171.132 cv
270.805 182.824 li
270.457 183.478 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
269.501 188.66 mo
244.066 176.254 li
244.391 175.587 li
269.826 187.993 li
269.501 188.66 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
265.967 192.587 mo
242.957 182.342 li
243.16 181.886 li
243.579 182.069 li
243.611 181.996 243.643 181.923 243.675 181.85 cv
266.269 191.91 li
265.967 192.587 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
255.511 193.839 mo
249.127 191.261 li
249.405 190.572 li
255.789 193.15 li
255.511 193.839 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
262.463 202.115 mo
238.238 193.297 li
238.493 192.602 li
262.717 201.419 li
262.463 202.115 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
260.07 206.668 mo
237.186 199.232 li
237.26 198.996 237.334 198.759 237.409 198.522 cv
260.302 205.961 li
260.07 206.668 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
259.343 211.757 mo
235.52 204.927 li
235.526 204.904 235.533 204.881 235.539 204.859 cv
234.955 204.698 li
234.949 204.718 234.944 204.739 234.938 204.76 cv
234.592 204.66 li
234.795 203.949 li
259.546 211.044 li
259.343 211.757 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
250.149 214.692 mo
240.95 212.398 li
241.129 211.679 li
250.329 213.973 li
250.149 214.692 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
247.27 219.552 mo
241.37 218.297 li
241.526 217.574 li
247.426 218.827 li
247.27 219.552 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
258.535 227.034 mo
228.031 221.655 li
228.158 220.925 li
258.662 226.304 li
258.535 227.034 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
256.925 231.833 mo
230.871 228.173 li
230.903 227.928 230.935 227.682 230.967 227.436 cv
257.028 231.098 li
256.925 231.833 li
230.273 228.089 mo
227.938 227.761 li
228.043 227.025 li
230.369 227.352 li
230.336 227.598 230.304 227.844 230.273 228.089 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
257.014 236.876 mo
230.221 234.061 li
230.244 233.815 230.267 233.57 230.291 233.324 cv
257.09 236.141 li
257.014 236.876 li
229.619 233.998 mo
226.531 233.673 li
226.606 232.937 li
229.689 233.261 li
229.665 233.506 229.642 233.752 229.619 233.998 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
252.788 241.58 mo
229.818 239.973 li
229.87 239.231 li
252.84 240.839 li
252.788 241.58 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
255.826 246.803 mo
229.528 245.887 li
229.534 245.639 229.54 245.392 229.547 245.145 cv
255.85 246.061 li
255.826 246.803 li
228.924 245.866 mo
226.229 245.772 li
226.253 245.031 li
228.943 245.124 li
228.936 245.371 228.93 245.618 228.924 245.866 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
249.161 251.805 mo
232.726 251.805 li
232.726 251.064 li
249.161 251.064 li
249.161 251.805 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
237.193 257.458 mo
237.17 256.716 li
244.886 256.447 li
244.909 257.189 li
237.193 257.458 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
226.586 263.867 mo
226.533 263.128 li
229.349 262.931 li
229.367 263.177 229.386 263.423 229.405 263.669 cv
226.586 263.867 li
230.008 263.627 mo
229.989 263.381 229.97 263.135 229.952 262.889 cv
256.073 261.061 li
256.125 261.8 li
230.008 263.627 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
228.124 269.775 mo
228.049 269.036 li
255.496 266.149 li
255.572 266.888 li
228.124 269.775 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
231.342 275.38 mo
231.305 275.136 231.269 274.891 231.234 274.645 cv
254.178 271.421 li
254.283 272.157 li
231.342 275.38 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
226.273 282.278 mo
226.145 281.547 li
260.418 275.503 li
260.545 276.234 li
226.273 282.278 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
231.982 287.326 mo
231.825 286.602 li
256.814 281.289 li
256.971 282.014 li
231.982 287.326 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
231.97 293.476 mo
231.791 292.757 li
234.091 292.183 li
234.152 292.423 234.213 292.662 234.275 292.901 cv
231.97 293.476 li
234.861 292.755 mo
234.8 292.516 234.739 292.276 234.678 292.037 cv
259.311 285.895 li
259.491 286.614 li
234.861 292.755 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
233.769 299.215 mo
233.567 298.502 li
260.368 290.817 li
260.571 291.529 li
233.769 299.215 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
234.467 305.302 mo
234.236 304.598 li
237.399 303.57 li
237.476 303.805 237.554 304.04 237.632 304.274 cv
234.467 305.302 li
238.208 304.087 mo
238.129 303.853 238.052 303.618 237.974 303.383 cv
262.897 295.285 li
263.129 295.989 li
238.208 304.087 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
244.895 307.94 mo
244.64 307.242 li
256.064 303.083 li
256.319 303.781 li
244.895 307.94 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
246.503 313.469 mo
246.224 312.783 li
258.41 307.86 li
258.688 308.546 li
246.503 313.469 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
243.418 321.135 mo
243.116 320.457 li
243.828 320.141 li
243.929 320.366 244.031 320.592 244.133 320.816 cv
243.418 321.135 li
244.686 320.57 mo
244.583 320.346 244.482 320.121 244.38 319.895 cv
265.808 310.354 li
266.11 311.032 li
244.686 320.57 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
245.283 326.845 mo
244.959 326.179 li
268.606 314.647 li
268.931 315.313 li
245.283 326.845 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
253.231 329.39 mo
252.883 328.736 li
265.672 321.936 li
266.02 322.59 li
253.231 329.39 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
253.095 336.133 mo
252.724 335.491 li
271.158 324.847 li
271.529 325.49 li
253.095 336.133 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
262.732 337.054 mo
262.338 336.426 li
267.204 333.386 li
267.598 334.014 li
262.732 337.054 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
265.391 342.041 mo
264.974 341.427 li
270.559 337.657 li
270.976 338.271 li
265.391 342.041 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
268.177 346.981 mo
267.743 346.381 li
274.104 341.758 li
274.538 342.358 li
268.177 346.981 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
266.993 355.084 mo
266.535 354.499 li
281.93 342.471 li
282.388 343.056 li
266.993 355.084 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
269.886 360.302 mo
269.727 360.114 269.567 359.925 269.409 359.737 cv
286.368 345.506 li
286.843 346.074 li
269.886 360.302 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
270.312 367.854 mo
269.814 367.303 li
292.799 346.609 li
293.296 347.16 li
270.312 367.854 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
280.943 366.009 mo
280.427 365.476 li
289.696 356.527 li
290.211 357.06 li
280.943 366.009 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
280.485 374.749 mo
279.952 374.234 li
297.957 355.589 li
298.49 356.105 li
282.001 373.18 li
281.984 373.164 281.967 373.148 281.951 373.132 cv
281.533 373.57 li
281.549 373.585 281.565 373.6 281.58 373.615 cv
280.485 374.749 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
288.555 374.71 mo
288.005 374.214 li
297.96 363.157 li
298.51 363.653 li
288.555 374.71 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
292.964 378.447 mo
292.396 377.969 li
301.882 366.663 li
302.45 367.141 li
292.964 378.447 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
300.231 378.528 mo
299.646 378.07 li
303.194 373.527 li
303.78 373.985 li
300.231 378.528 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
300.338 387.936 mo
299.736 387.501 li
311.899 370.762 li
312.501 371.197 li
300.338 387.936 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
302.099 395.837 mo
301.485 395.423 li
319.18 369.191 li
319.795 369.605 li
304.922 391.653 li
304.762 391.546 304.603 391.438 304.444 391.33 cv
304.103 391.831 li
304.263 391.939 304.423 392.047 304.583 392.155 cv
302.099 395.837 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
306.375 400.453 mo
305.743 400.059 li
324.163 370.586 li
324.794 370.981 li
306.375 400.453 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
311.653 403.564 mo
311.01 403.194 li
313.981 398.047 li
314.195 398.171 314.409 398.295 314.623 398.419 cv
311.653 403.564 li
314.925 397.895 mo
314.711 397.772 314.497 397.648 314.283 397.523 cv
328.348 373.16 li
328.991 373.531 li
314.925 397.895 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
321.628 397.84 mo
320.973 397.492 li
328.024 384.236 li
328.678 384.583 li
321.628 397.84 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
326.703 400.624 mo
326.037 400.3 li
332.783 386.463 li
333.449 386.788 li
326.703 400.624 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
331.711 403.602 mo
331.033 403.3 li
337.779 388.15 li
338.457 388.452 li
331.711 403.602 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
334.376 412.51 mo
333.687 412.232 li
345.273 383.553 li
345.962 383.831 li
334.376 412.51 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
339.989 414.794 mo
339.294 414.539 li
340.708 410.654 li
340.94 410.74 341.172 410.825 341.404 410.91 cv
339.989 414.794 li
341.61 410.342 mo
341.379 410.257 341.147 410.172 340.915 410.086 cv
349.966 385.226 li
350.66 385.481 li
341.61 410.342 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
345.151 418.538 mo
344.444 418.309 li
355.24 385.076 li
355.946 385.304 li
345.151 418.538 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
352.436 415.358 mo
351.723 415.152 li
351.949 414.366 li
352.037 414.391 352.125 414.417 352.214 414.443 cv
352.381 413.862 li
352.293 413.836 352.204 413.81 352.115 413.785 cv
358.51 391.483 li
359.223 391.688 li
352.436 415.358 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
358.53 415.502 mo
357.812 415.323 li
363.078 394.196 li
363.797 394.374 li
358.53 415.502 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
364.746 414.618 mo
364.022 414.465 li
367.617 397.561 li
368.341 397.714 li
364.746 414.618 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
371.42 410.296 mo
370.69 410.168 li
371.78 403.99 li
372.509 404.117 li
371.42 410.296 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
376.524 414.42 mo
375.788 414.316 li
377.575 401.591 li
378.311 401.696 li
376.524 414.42 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
382.248 414.878 mo
381.512 414.8 li
382.807 402.481 li
383.542 402.559 li
382.248 414.878 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
387.725 418.768 mo
386.984 418.716 li
388.325 399.551 li
389.066 399.603 li
387.725 418.768 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
393.712 415.065 mo
392.971 415.039 li
393.362 403.832 li
394.103 403.858 li
393.712 415.065 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
np
526.756 251.087 mo
518.87 251.087 li
518.87 250.516 li
526.756 250.516 li
526.756 251.087 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s%RY99m$D.F8nmRs%.518T=]!E;rCGs$Uc)6u;liC]?_9s$(5t5A:'[BE(,,s#Xim4(\FOA,eMts#+<c
2IQP@?iMogs"RgZ0jO`3>5p6Zs"%=Q/6Mp%=8saNs!UnI-rg3m;u\.As!(A?,>eC`:]DS5ruOo7*_cSR
9E,u(ru"E.)+X]C7fO8nrtS!&'h&'76iRccrt%Kr&4$7*55u*UrsLsh$Tn@p49#UJrs(Ra#<;_d2ua"<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
np
512.872 247.185 mo
512.852 246.615 li
532.607 245.924 li
532.626 246.495 li
512.872 247.185 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
513.682 243.216 mo
513.642 242.648 li
531.352 241.41 li
531.392 241.978 li
513.682 243.216 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
514.606 239.16 mo
514.546 238.592 li
529.688 237 li
529.748 237.569 li
514.606 239.16 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
515.163 235.061 mo
515.083 234.495 li
528.094 232.666 li
528.175 233.233 li
515.163 235.061 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
512.692 231.415 mo
512.594 230.854 li
529.236 227.919 li
529.334 228.482 li
512.692 231.415 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
508.463 228.274 mo
508.345 227.716 li
531.844 222.722 li
531.962 223.28 li
508.463 228.274 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
509.466 224.078 mo
509.327 223.526 li
528.93 218.638 li
529.068 219.192 li
509.466 224.078 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
508.407 220.331 mo
508.249 219.783 li
527.789 214.179 li
527.947 214.728 li
508.407 220.331 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
512.341 214.958 mo
512.166 214.416 li
521.371 211.426 li
521.547 211.968 li
512.341 214.958 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
513.807 210.086 mo
513.611 209.549 li
517.14 208.265 li
517.336 208.802 li
513.807 210.086 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
502.215 210.258 mo
502.001 209.73 li
502.212 209.645 li
502.282 209.82 502.352 209.999 502.421 210.175 cv
502.215 210.258 li
502.751 210.041 mo
502.682 209.864 502.613 209.688 502.543 209.511 cv
525.687 200.161 li
525.901 200.69 li
502.751 210.041 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
502.776 205.848 mo
502.545 205.326 li
521.806 196.75 li
522.038 197.272 li
502.776 205.848 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
504.623 200.63 mo
504.373 200.117 li
516.369 194.267 li
516.618 194.78 li
504.623 200.63 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
504.496 196.151 mo
504.229 195.647 li
512.637 191.176 li
512.904 191.68 li
504.496 196.151 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
496.476 196.07 mo
496.191 195.575 li
516.538 183.828 li
516.823 184.323 li
496.476 196.07 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
497.218 191.08 mo
496.915 190.596 li
511.421 181.533 li
511.724 182.017 li
497.218 191.08 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
491.468 190.196 mo
491.15 189.723 li
491.616 189.408 li
491.723 189.569 491.824 189.723 491.93 189.884 cv
491.468 190.196 li
492.235 189.678 mo
492.131 189.52 492.026 189.361 491.921 189.203 cv
512.542 175.291 li
512.862 175.765 li
492.235 189.678 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
497.558 181.076 mo
497.223 180.616 li
501.58 177.451 li
501.915 177.912 li
497.558 181.076 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
491.696 180.388 mo
491.343 179.938 li
502.329 171.354 li
502.682 171.805 li
491.696 180.388 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
490.432 176.221 mo
490.064 175.783 li
498.245 168.918 li
498.613 169.355 li
490.432 176.221 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
482.501 177.896 mo
482.119 177.472 li
482.307 177.303 li
482.434 177.447 482.557 177.586 482.684 177.731 cv
482.501 177.896 li
482.948 177.493 mo
482.822 177.35 482.697 177.208 482.57 177.066 cv
500.603 160.83 li
500.985 161.253 li
482.948 177.493 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
480.014 174.996 mo
479.617 174.586 li
479.723 174.484 li
479.856 174.624 479.983 174.759 480.115 174.899 cv
480.014 174.996 li
480.369 174.654 mo
480.239 174.516 480.107 174.377 479.977 174.239 cv
497.294 157.517 li
497.69 157.927 li
480.369 174.654 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
476.469 173.17 mo
476.059 172.774 li
477.043 171.755 li
477.18 171.89 477.312 172.02 477.449 172.156 cv
476.469 173.17 li
477.693 171.903 mo
477.558 171.769 477.423 171.635 477.287 171.502 cv
494.832 153.333 li
495.242 153.731 li
477.693 171.903 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
478.99 164.726 mo
478.566 164.345 li
486.096 155.983 li
486.52 156.364 li
478.99 164.726 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
475.137 163.019 mo
474.7 162.651 li
483.537 152.118 li
483.974 152.486 li
475.137 163.019 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
470.522 162.417 mo
470.071 162.065 li
481.55 147.372 li
482.001 147.724 li
470.522 162.417 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
466.983 160.614 mo
466.521 160.28 li
478.303 144.063 li
478.765 144.397 li
466.983 160.614 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
463.605 158.651 mo
463.132 158.331 li
474.721 141.151 li
475.193 141.47 li
463.605 158.651 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
459.058 158.597 mo
458.574 158.293 li
459.106 157.442 li
459.266 157.544 459.427 157.648 459.586 157.751 cv
459.058 158.597 li
459.781 157.439 mo
459.621 157.335 459.462 157.233 459.301 157.129 cv
472.144 136.577 li
472.628 136.881 li
459.781 157.439 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
456.106 156.109 mo
455.61 155.824 li
455.838 155.429 li
456.002 155.526 456.166 155.624 456.329 155.722 cv
456.106 156.109 li
456.514 155.402 mo
456.35 155.304 456.187 155.206 456.023 155.109 cv
467.811 134.69 li
468.306 134.976 li
456.514 155.402 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
457.552 145.247 mo
457.047 144.98 li
458.935 141.432 li
459.439 141.7 li
457.552 145.247 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
450.093 151.011 mo
449.58 150.762 li
458.823 131.811 li
459.336 132.06 li
450.093 151.011 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
448.735 144.523 mo
448.213 144.291 li
452.48 134.709 li
453.002 134.941 li
448.735 144.523 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
443.076 147.678 mo
442.548 147.464 li
450.318 128.233 li
450.846 128.447 li
443.076 147.678 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
440.849 142.443 mo
440.311 142.246 li
444.613 130.425 li
445.15 130.62 li
440.849 142.443 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
435.202 146.783 mo
434.66 146.607 li
434.908 145.843 li
435.088 145.904 435.268 145.965 435.448 146.026 cv
435.202 146.783 li
435.555 145.694 mo
435.375 145.633 435.196 145.573 435.016 145.513 cv
442.227 123.318 li
442.768 123.494 li
435.555 145.694 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
431.233 146.767 mo
430.685 146.609 li
431.237 144.683 li
431.419 144.737 431.602 144.791 431.784 144.846 cv
431.233 146.767 li
431.878 144.518 mo
431.695 144.463 431.514 144.409 431.331 144.355 cv
438.07 120.849 li
438.619 121.007 li
431.878 144.518 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
430.298 134.892 mo
429.745 134.753 li
430.799 130.526 li
431.352 130.664 li
430.298 134.892 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
424.079 144.087 mo
423.522 143.969 li
423.78 142.753 li
423.964 142.794 424.153 142.836 424.336 142.877 cv
424.079 144.087 li
424.405 142.557 mo
424.218 142.515 424.035 142.474 423.848 142.433 cv
428.739 119.419 li
429.297 119.537 li
424.405 142.557 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
421.256 138.16 mo
420.695 138.063 li
423.222 123.724 li
423.784 123.823 li
421.256 138.16 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
418.109 131.866 mo
417.543 131.786 li
417.978 128.69 li
418.544 128.77 li
418.109 131.866 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
412.976 140.586 mo
412.408 140.527 li
414.676 118.934 li
415.245 118.994 li
412.976 140.586 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
409.296 137.743 mo
408.728 137.703 li
409.893 121.035 li
410.461 121.075 li
409.296 137.743 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
405.471 133.929 mo
404.9 133.908 li
405.233 124.407 li
405.803 124.427 li
405.471 133.929 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
401.39 131.11 mo
400.819 131.11 li
400.819 127.077 li
401.39 127.077 li
401.39 131.11 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
396.647 131.361 mo
396.495 126.994 li
397.066 126.974 li
397.218 131.341 li
396.647 131.361 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
392.455 131.231 mo
392.201 127.589 li
392.772 127.549 li
393.026 131.191 li
392.455 131.231 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
389.517 143.275 mo
389.245 140.685 li
389.432 140.666 389.623 140.648 389.811 140.631 cv
390.083 143.214 li
389.517 143.275 li
389.213 140.38 mo
386.683 116.306 li
387.249 116.246 li
389.779 140.326 li
389.59 140.344 389.401 140.361 389.213 140.38 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
385.414 141.215 mo
385.401 141.128 li
385.591 141.103 385.779 141.078 385.969 141.054 cv
385.98 141.135 li
385.414 141.215 li
385.358 140.82 mo
382.35 119.42 li
382.917 119.34 li
385.926 140.746 li
385.736 140.77 385.547 140.795 385.358 140.82 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
381.524 141.394 mo
377.802 120.289 li
378.363 120.192 li
382.087 141.301 li
381.899 141.332 381.712 141.362 381.524 141.394 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
376.885 138.228 mo
374.158 125.397 li
374.716 125.279 li
377.443 138.11 li
376.885 138.228 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
372.805 138.474 mo
369.965 127.081 li
370.517 126.943 li
373.358 138.335 li
372.805 138.474 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
368.68 138.765 mo
365.884 129.01 li
366.432 128.852 li
369.228 138.607 li
368.68 138.765 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
366.169 144.211 mo
360.274 126.066 li
360.818 125.889 li
366.713 144.035 li
366.169 144.211 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
362.025 144.263 mo
356.397 128.799 li
356.932 128.603 li
362.559 144.067 li
362.025 144.263 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
358.006 144.894 mo
352.486 131.231 li
353.016 131.017 li
358.537 144.68 li
358.006 144.894 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
352.472 142.277 mo
350.207 137.186 li
350.729 136.954 li
352.994 142.044 li
352.472 142.277 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
351.913 150.595 mo
343.076 132.478 li
343.589 132.229 li
352.426 150.345 li
351.913 150.595 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
349.056 153.524 mo
348.713 152.878 li
348.881 152.789 349.049 152.701 349.218 152.612 cv
349.56 153.256 li
349.056 153.524 li
348.54 152.553 mo
338.369 133.424 li
338.873 133.156 li
349.045 152.287 li
348.876 152.375 348.708 152.464 348.54 152.553 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
341.665 148.423 mo
338.338 142.661 li
338.833 142.374 li
342.16 148.137 li
341.665 148.423 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
339.322 152.47 mo
333.408 143.008 li
333.895 142.704 li
339.808 152.166 li
339.322 152.47 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
335.154 153.535 mo
330.465 146.585 li
330.938 146.267 li
335.627 153.217 li
335.154 153.535 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
331.235 155.12 mo
327.433 149.891 li
327.897 149.554 li
331.698 154.785 li
331.235 155.12 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
334.124 165.537 mo
332.465 163.413 li
332.614 163.297 332.767 163.178 332.917 163.063 cv
334.574 165.185 li
334.124 165.537 li
332.243 163.129 mo
317.772 144.605 li
318.222 144.252 li
332.694 162.777 li
332.543 162.894 332.393 163.011 332.243 163.129 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
329.495 165.905 mo
329.452 165.853 li
329.599 165.729 329.742 165.61 329.89 165.487 cv
329.932 165.537 li
329.495 165.905 li
329.222 165.579 mo
315.812 149.598 li
316.249 149.23 li
329.66 165.213 li
329.514 165.334 329.367 165.457 329.222 165.579 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
320.534 161.744 mo
318.374 159.346 li
318.797 158.965 li
320.958 161.363 li
320.534 161.744 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
320.539 167.785 mo
312.168 159.116 li
312.578 158.72 li
320.949 167.388 li
320.539 167.785 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
321.448 174.278 mo
320.943 173.789 li
321.074 173.653 321.208 173.514 321.34 173.379 cv
321.845 173.866 li
321.448 174.278 li
320.689 173.544 mo
305.263 158.646 li
305.66 158.236 li
321.087 173.134 li
320.954 173.27 320.821 173.407 320.689 173.544 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
312.411 171.328 mo
308.518 167.823 li
308.901 167.399 li
312.795 170.905 li
312.411 171.328 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
310.922 175.501 mo
304.453 170.074 li
304.819 169.636 li
311.288 175.065 li
310.922 175.501 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
309.794 179.825 mo
300.248 172.367 li
300.601 171.917 li
310.146 179.374 li
309.794 179.825 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
308.681 184.004 mo
296.264 174.984 li
296.598 174.523 li
309.015 183.543 li
308.681 184.004 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
306.197 187.131 mo
293.889 178.828 li
294.21 178.356 li
306.518 186.659 li
306.197 187.131 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
301.093 188.646 mo
294.382 184.451 li
294.685 183.968 li
301.397 188.161 li
301.093 188.646 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
299.024 192.197 mo
292.092 188.194 li
292.378 187.699 li
299.309 191.701 li
299.024 192.197 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
299.321 197.006 mo
287.695 190.825 li
287.963 190.321 li
299.589 196.502 li
299.321 197.006 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
296.462 200.081 mo
286.714 195.328 li
286.964 194.815 li
296.712 199.569 li
296.462 200.081 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
301.945 206.966 mo
299.388 205.828 li
299.465 205.653 299.542 205.48 299.62 205.305 cv
302.177 206.444 li
301.945 206.966 li
299.057 205.68 mo
277.659 196.153 li
277.891 195.631 li
299.289 205.158 li
299.211 205.331 299.134 205.506 299.057 205.68 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
298.476 209.645 mo
297.884 209.406 li
297.954 209.231 298.026 209.052 298.097 208.877 cv
298.69 209.116 li
298.476 209.645 li
297.552 209.272 mo
277.826 201.302 li
278.041 200.774 li
297.764 208.743 li
297.693 208.919 297.623 209.095 297.552 209.272 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
294.23 212.208 mo
279.044 206.68 li
279.24 206.143 li
294.426 211.67 li
294.23 212.208 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
291.376 215.449 mo
279.151 211.477 li
279.329 210.935 li
291.555 214.907 li
291.376 215.449 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
292.846 220.057 mo
275.217 215.001 li
275.374 214.454 li
293.002 219.508 li
292.846 220.057 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
287.57 222.789 mo
278.313 220.481 li
278.451 219.928 li
287.708 222.236 li
287.57 222.789 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
294.817 228.501 mo
292.319 227.97 li
292.357 227.782 292.395 227.6 292.435 227.412 cv
294.937 227.944 li
294.817 228.501 li
292.002 227.903 mo
269.173 223.051 li
269.293 222.493 li
292.117 227.344 li
292.079 227.53 292.04 227.717 292.002 227.903 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
291.698 231.8 mo
291.607 231.784 li
291.639 231.593 291.67 231.413 291.703 231.222 cv
291.796 231.239 li
291.698 231.8 li
291.295 231.729 mo
270.694 228.097 li
270.792 227.534 li
291.39 231.167 li
291.358 231.355 291.326 231.541 291.295 231.729 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
286.616 235.001 mo
274.464 233.293 li
274.544 232.727 li
286.696 234.435 li
286.616 235.001 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
288.415 239.245 mo
271.65 237.484 li
271.708 236.915 li
288.473 238.676 li
288.415 239.245 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
285.472 243.002 mo
273.873 242.191 li
273.913 241.622 li
285.512 242.434 li
285.472 243.002 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
291.548 247.262 mo
290.122 247.212 li
290.126 247.021 290.132 246.832 290.138 246.641 cv
291.566 246.691 li
291.548 247.262 li
289.821 247.202 mo
267.374 246.418 li
267.391 245.847 li
289.837 246.631 li
289.831 246.82 289.826 247.012 289.821 247.202 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
285.051 251.087 mo
273.739 251.087 li
273.739 250.516 li
285.051 250.516 li
285.051 251.087 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
273.817 255.532 mo
273.799 254.961 li
285.122 254.567 li
285.14 255.137 li
273.817 255.532 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
275.327 259.884 mo
275.287 259.314 li
284.056 258.701 li
284.096 259.272 li
275.327 259.884 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
268.406 265.035 mo
268.348 264.469 li
290.433 262.149 li
290.454 262.337 290.475 262.527 290.496 262.715 cv
268.406 265.035 li
290.803 262.683 mo
290.781 262.496 290.76 262.304 290.74 262.117 cv
291.718 262.014 li
291.776 262.58 li
290.803 262.683 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
267.768 269.831 mo
267.688 269.265 li
290.918 265.999 li
290.945 266.187 290.973 266.376 291.001 266.565 cv
267.768 269.831 li
291.312 266.521 mo
291.284 266.333 291.256 266.144 291.228 265.955 cv
293.392 265.651 li
293.472 266.217 li
291.312 266.521 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
270.125 274.188 mo
270.027 273.626 li
291.538 269.831 li
291.572 270.019 291.606 270.206 291.641 270.393 cv
270.125 274.188 li
291.956 270.338 mo
291.921 270.152 291.886 269.962 291.853 269.776 cv
292.364 269.686 li
292.462 270.248 li
291.956 270.338 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
272.665 278.396 mo
272.544 277.838 li
291.446 273.82 li
291.566 274.377 li
272.665 278.396 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
280.515 281.162 mo
280.377 280.61 li
285.508 279.329 li
285.646 279.882 li
280.515 281.162 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
281.804 285.308 mo
281.648 284.759 li
286.415 283.392 li
286.571 283.941 li
281.804 285.308 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
276.622 291.551 mo
276.444 291.006 li
294.083 285.274 li
294.261 285.818 li
276.622 291.551 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
283.976 293.738 mo
283.779 293.203 li
289.497 291.121 li
289.693 291.656 li
283.976 293.738 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
285.107 297.977 mo
284.892 297.446 li
291.41 294.813 li
291.624 295.343 li
285.107 297.977 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
280.283 304.908 mo
280.052 304.387 li
299.552 295.704 li
299.784 296.226 li
280.283 304.908 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
285.534 307.487 mo
285.285 306.973 li
297.894 300.823 li
298.143 301.337 li
285.534 307.487 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
288.569 310.962 mo
288.302 310.458 li
298.716 304.92 li
298.984 305.424 li
288.569 310.962 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
291.04 314.677 mo
290.754 314.182 li
300.362 308.637 li
300.647 309.132 li
291.04 314.677 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
292.545 318.976 mo
292.241 318.49 li
303.234 311.62 li
303.537 312.106 li
292.545 318.976 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
298.799 320.154 mo
298.478 319.681 li
301.609 317.569 li
301.929 318.041 li
298.799 320.154 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
293.901 329.045 mo
293.566 328.581 li
311.376 315.64 li
311.423 315.704 311.469 315.765 311.516 315.828 cv
311.713 316.102 li
293.901 329.045 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
300.072 330.1 mo
299.72 329.65 li
310.32 321.369 li
310.672 321.819 li
300.072 330.1 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
300.266 335.788 mo
299.901 335.351 li
315.473 322.283 li
315.838 322.72 li
300.266 335.788 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
302.19 340.249 mo
301.807 339.826 li
318.758 324.563 li
318.887 324.703 319.018 324.845 319.146 324.984 cv
302.19 340.249 li
319.41 324.747 mo
319.279 324.606 319.152 324.468 319.022 324.326 cv
319.125 324.234 li
319.508 324.658 li
319.41 324.747 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
310.137 339.045 mo
309.74 338.635 li
316.971 331.652 li
317.368 332.062 li
310.137 339.045 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
309.702 345.864 mo
309.292 345.467 li
323.415 330.842 li
323.825 331.24 li
309.702 345.864 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
311.111 351.175 mo
310.688 350.791 li
327.008 332.667 li
327.151 332.794 327.294 332.919 327.437 333.045 cv
311.111 351.175 li
327.675 332.78 mo
327.533 332.656 327.388 332.528 327.246 332.403 cv
328.217 331.324 li
328.641 331.707 li
327.675 332.78 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
314.975 353.891 mo
314.538 353.525 li
329.936 335.173 li
330.083 335.294 330.23 335.415 330.377 335.535 cv
314.975 353.891 li
330.608 335.26 mo
330.459 335.138 330.316 335.021 330.167 334.898 cv
330.768 334.182 li
331.205 334.548 li
330.608 335.26 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
324.953 348.736 mo
324.503 348.383 li
327.393 344.684 li
327.843 345.036 li
324.953 348.736 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
328.166 351.679 mo
327.702 351.344 li
330.965 346.854 li
331.428 347.189 li
328.166 351.679 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
326.831 361.429 mo
326.358 361.109 li
339.209 342.055 li
339.367 342.16 339.527 342.266 339.686 342.37 cv
326.831 361.429 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
330.666 364.07 mo
330.18 363.766 li
342.451 344.126 li
342.614 344.226 342.777 344.326 342.94 344.425 cv
330.666 364.07 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
338.082 360.533 mo
337.587 360.247 li
342.419 351.877 li
342.914 352.162 li
338.082 360.533 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
339.643 367.003 mo
339.139 366.736 li
348.289 349.525 li
348.793 349.792 li
339.643 367.003 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
343.232 370.108 mo
342.719 369.858 li
352.269 350.279 li
352.782 350.529 li
343.232 370.108 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
347.919 370.961 mo
347.398 370.73 li
355.284 353.017 li
355.806 353.248 li
347.919 370.961 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
354.784 366.212 mo
354.254 365.998 li
356.238 361.084 li
356.769 361.298 li
354.784 366.212 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
356.352 374.594 mo
355.816 374.397 li
362.604 355.75 li
363.139 355.947 li
356.352 374.594 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
360.889 375.498 mo
360.345 375.321 li
366.1 357.61 li
366.644 357.788 li
360.889 375.498 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
365.099 377.401 mo
364.551 377.244 li
370.013 358.192 li
370.562 358.348 li
365.099 377.401 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
371.054 372.506 mo
370.502 372.369 li
372.268 365.287 li
372.821 365.425 li
371.054 372.506 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
375.596 372.183 mo
375.039 372.063 li
376.004 367.521 li
376.562 367.641 li
375.596 372.183 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
378.181 382.45 mo
377.619 382.353 li
381.759 358.872 li
382.321 358.97 li
378.181 382.45 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
382.881 382.523 mo
382.315 382.442 li
385.449 360.129 li
386.016 360.209 li
382.881 382.523 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
387.432 383.606 mo
386.865 383.548 li
389.332 360.082 li
389.898 360.141 li
387.432 383.606 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
392.281 381.076 mo
391.711 381.036 li
392.948 363.354 li
393.519 363.394 li
392.281 381.076 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
396.745 383.838 mo
396.174 383.82 li
396.969 361.037 li
397.539 361.055 li
396.745 383.838 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
401.39 378.836 mo
400.819 378.836 li
400.819 366.186 li
401.39 366.186 li
401.39 378.836 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
405.17 375.416 mo
404.963 369.477 li
405.533 369.458 li
405.741 375.399 li
405.17 375.416 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
410.106 383.604 mo
408.515 360.866 li
409.083 360.826 li
410.674 383.564 li
410.106 383.604 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
414.653 382.438 mo
412.431 361.309 li
413 361.251 li
415.221 382.379 li
414.653 382.438 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
419.031 380.41 mo
416.489 362.324 li
417.055 362.243 li
419.597 380.33 li
419.031 380.41 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
424.284 383.903 mo
419.81 358.53 li
419.997 358.496 420.184 358.462 420.371 358.427 cv
424.846 383.804 li
424.284 383.903 li
419.755 358.215 mo
419.632 357.521 li
420.194 357.422 li
420.316 358.112 li
420.13 358.147 419.941 358.181 419.755 358.215 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
428.175 379.53 mo
424.086 360.294 li
424.643 360.174 li
428.733 379.41 li
428.175 379.53 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
432.913 379.557 mo
427.631 358.372 li
428.184 358.235 li
433.466 379.418 li
432.913 379.557 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
437.336 378.19 mo
431.419 357.559 li
431.968 357.403 li
437.884 378.033 li
437.336 378.19 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
442.028 377.675 mo
434.859 355.613 li
435.4 355.434 li
442.57 377.497 li
442.028 377.675 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
444.063 369.665 mo
440.862 360.872 li
441.4 360.676 li
444.6 369.47 li
444.063 369.665 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
448.328 368.447 mo
444.539 359.066 li
445.067 358.852 li
448.857 368.232 li
448.328 368.447 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
454.236 370.839 mo
446.459 353.371 li
446.98 353.139 li
454.758 370.607 li
454.236 370.839 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
458.641 369.42 mo
449.763 351.217 li
450.276 350.967 li
459.154 369.171 li
458.641 369.42 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
460.608 363.321 mo
455.374 353.476 li
455.878 353.208 li
461.112 363.053 li
460.608 363.321 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
465.808 363.443 mo
457.615 349.253 li
458.11 348.968 li
466.303 363.157 li
465.808 363.443 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
466.528 356.042 mo
464.188 352.296 li
464.672 351.993 li
467.012 355.74 li
466.528 356.042 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
470.378 354.013 mo
467.476 349.714 li
467.948 349.394 li
470.85 353.693 li
470.378 354.013 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
474.191 351.882 mo
470.633 346.986 li
471.094 346.651 li
474.653 351.547 li
474.191 351.882 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
480.44 352.812 mo
471.181 340.961 li
471.632 340.609 li
480.891 352.459 li
480.44 352.812 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
484.719 350.894 mo
473.518 337.545 li
473.955 337.179 li
485.156 350.529 li
484.719 350.894 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
490.297 350.287 mo
474.366 332.595 li
474.79 332.211 li
490.72 349.904 li
490.297 350.287 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
488.89 342.118 mo
482.001 334.983 li
482.411 334.586 li
489.3 341.721 li
488.89 342.118 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
495.631 342.484 mo
481.28 328.623 li
481.677 328.213 li
496.028 342.074 li
495.631 342.484 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
495.617 336.285 mo
487.105 328.621 li
487.486 328.198 li
495.998 335.862 li
495.617 336.285 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
498.506 332.905 mo
489.804 325.603 li
490.172 325.165 li
498.874 332.468 li
498.506 332.905 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
498.585 327.324 mo
495.087 324.592 li
495.44 324.142 li
498.937 326.873 li
498.585 327.324 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
505.844 327.255 mo
492.959 317.892 li
493.294 317.429 li
506.179 326.791 li
505.844 327.255 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
511.943 325.909 mo
491.749 312.286 li
492.068 311.814 li
512.261 325.435 li
511.943 325.909 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
515.511 322.63 mo
493.336 308.771 li
493.437 308.611 493.54 308.447 493.64 308.287 cv
515.815 322.144 li
515.511 322.63 li
493.023 308.576 mo
492.824 308.451 li
493.127 307.966 li
493.327 308.091 li
493.225 308.255 493.126 308.412 493.023 308.576 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
517.924 318.577 mo
495.31 305.521 li
495.406 305.356 495.502 305.192 495.597 305.027 cv
518.209 318.081 li
517.924 318.577 li
494.99 305.337 mo
494.805 305.23 li
495.09 304.735 li
495.277 304.842 li
495.182 305.007 495.086 305.172 494.99 305.337 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
513.536 310.907 mo
503.33 305.48 li
503.598 304.976 li
513.803 310.403 li
513.536 310.907 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
515.696 307.009 mo
505.045 301.816 li
505.295 301.303 li
515.946 306.496 li
515.696 307.009 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
518.006 303.163 mo
506.344 297.97 li
506.576 297.449 li
518.238 302.641 li
518.006 303.163 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
524.881 301.12 mo
502.805 292.201 li
503.019 291.671 li
525.095 300.59 li
524.881 301.12 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
526.657 296.804 mo
504.093 288.589 li
504.289 288.054 li
526.854 296.269 li
526.657 296.804 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
529.559 292.839 mo
504.677 284.757 li
504.737 284.576 504.796 284.395 504.855 284.214 cv
529.735 292.295 li
529.559 292.839 li
504.347 284.65 mo
503.977 284.53 li
504.153 283.986 li
504.526 284.107 li
504.467 284.287 504.407 284.47 504.347 284.65 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
527.129 287.236 mo
508.909 282.012 li
509.068 281.463 li
527.287 286.688 li
527.129 287.236 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
527.26 282.549 mo
510.997 278.495 li
511.135 277.943 li
527.399 281.996 li
527.26 282.549 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
526.601 277.769 mo
513.588 275.002 li
513.706 274.445 li
526.719 277.211 li
526.601 277.769 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
523.293 272.636 mo
518.537 271.798 li
518.635 271.236 li
523.391 272.074 li
523.293 272.636 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
526.486 268.712 mo
516.691 267.336 li
516.771 266.77 li
526.566 268.146 li
526.486 268.712 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
526.858 264.306 mo
517.375 263.309 li
517.435 262.742 li
526.919 263.74 li
526.858 264.306 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
529.873 260.094 mo
515.12 259.062 li
515.16 258.49 li
529.913 259.523 li
529.873 260.094 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
527.042 255.485 mo
518.415 255.184 li
518.436 254.614 li
527.062 254.914 li
527.042 255.485 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
556.086 94.8481 mo
555.231 93.9925 li
563.311 85.9126 li
564.166 86.7679 li
556.086 94.8481 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
243.915 94.8481 mo
235.835 86.7679 li
236.69 85.9126 li
244.769 93.9925 li
243.915 94.8481 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
236.69 414.244 mo
235.835 413.389 li
243.915 405.309 li
244.769 406.163 li
236.69 414.244 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
563.311 414.244 mo
555.231 406.163 li
556.086 405.309 li
564.166 413.389 li
563.311 414.244 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
659.192 249.528 mo
658.399 249.528 657.735 249.423 657.2 249.216 cv
656.666 249.008 656.271 248.704 656.014 248.307 cv
655.758 247.909 655.63 247.427 655.63 246.862 cv
655.63 246.576 655.666 246.311 655.737 246.068 cv
656.093 246.068 li
656.055 246.187 656.025 246.33 656.005 246.496 cv
655.983 246.662 655.973 246.79 655.973 246.878 cv
655.973 247.559 656.219 248.091 656.711 248.478 cv
657.203 248.864 657.92 249.079 658.862 249.122 cv
658.862 249.073 li
658.597 248.872 658.394 248.632 658.253 248.354 cv
658.11 248.076 658.04 247.785 658.04 247.483 cv
658.04 246.923 658.193 246.487 658.502 246.174 cv
658.811 245.861 659.249 245.705 659.817 245.705 cv
660.423 245.705 660.913 245.876 661.288 246.219 cv
661.663 246.563 661.85 247.007 661.85 247.556 cv
661.85 247.953 661.746 248.299 661.537 248.597 cv
661.329 248.895 661.024 249.124 660.622 249.286 cv
660.22 249.447 659.743 249.528 659.192 249.528 cv
659.842 246.127 mo
659.362 246.127 658.998 246.246 658.75 246.486 cv
658.502 246.726 658.379 247.069 658.379 247.516 cv
658.379 247.793 658.44 248.053 658.565 248.293 cv
658.688 248.535 658.853 248.727 659.058 248.868 cv
659.263 249.01 659.472 249.081 659.684 249.081 cv
660.007 249.081 660.308 249.017 660.589 248.889 cv
660.87 248.761 661.089 248.581 661.248 248.351 cv
661.407 248.121 661.486 247.857 661.486 247.556 cv
661.486 247.121 661.339 246.774 661.046 246.514 cv
660.752 246.255 660.351 246.127 659.842 246.127 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
658.75 254.435 mo
657.689 254.435 656.904 254.273 656.395 253.95 cv
655.885 253.626 655.63 253.136 655.63 252.481 cv
655.63 251.85 655.892 251.371 656.418 251.043 cv
656.942 250.715 657.72 250.551 658.75 250.551 cv
659.803 250.551 660.582 250.71 661.089 251.029 cv
661.596 251.346 661.85 251.83 661.85 252.481 cv
661.85 253.118 661.587 253.603 661.063 253.936 cv
660.537 254.269 659.767 254.435 658.75 254.435 cv
658.75 250.998 mo
657.814 250.998 657.121 251.12 656.674 251.366 cv
656.226 251.611 656.002 251.983 656.002 252.481 cv
656.002 253.001 656.234 253.38 656.696 253.619 cv
657.159 253.858 657.844 253.977 658.75 253.977 cv
659.643 253.977 660.32 253.858 660.783 253.619 cv
661.246 253.38 661.478 253.001 661.478 252.481 cv
661.478 251.96 661.246 251.582 660.783 251.349 cv
660.32 251.116 659.643 250.998 658.75 250.998 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
537.271 106.895 mo
537.001 106.624 li
539.938 103.687 li
540.204 103.421 540.493 103.156 540.801 102.89 cv
540.635 102.885 li
540.581 102.881 540.073 102.821 539.113 102.703 cv
539.152 102.35 li
541.067 102.625 li
541.304 102.863 li
537.271 106.895 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
541.469 110.432 mo
541.416 110.432 541.363 110.429 541.309 110.423 cv
540.845 110.372 540.373 110.108 539.891 109.625 cv
539.481 109.215 539.2 108.782 539.047 108.324 cv
539.319 108.051 li
539.394 108.286 539.503 108.522 539.65 108.761 cv
539.797 108.998 539.954 109.203 540.123 109.371 cv
540.529 109.778 540.917 110 541.286 110.04 cv
541.329 110.045 541.372 110.047 541.414 110.047 cv
541.732 110.047 542.024 109.915 542.288 109.651 cv
542.555 109.383 542.655 109.075 542.59 108.723 cv
542.524 108.37 542.29 107.992 541.885 107.587 cv
541.449 107.152 li
541.714 106.887 li
542.156 107.328 li
542.49 107.662 542.835 107.849 543.19 107.885 cv
543.232 107.889 543.273 107.892 543.314 107.892 cv
543.618 107.892 543.891 107.772 544.131 107.532 cv
544.355 107.308 544.455 107.048 544.431 106.754 cv
544.407 106.46 544.266 106.185 544.009 105.927 cv
543.808 105.727 543.598 105.572 543.376 105.461 cv
543.155 105.352 542.872 105.263 542.531 105.194 cv
542.58 104.873 li
542.868 104.899 543.159 104.985 543.457 105.128 cv
543.753 105.273 544.015 105.458 544.24 105.684 cv
544.612 106.056 544.811 106.431 544.838 106.809 cv
544.865 107.185 544.718 107.534 544.398 107.855 cv
544.148 108.105 543.859 108.237 543.53 108.251 cv
543.512 108.252 543.493 108.252 543.475 108.252 cv
543.166 108.252 542.865 108.151 542.569 107.946 cv
542.553 107.962 li
542.837 108.327 542.979 108.676 542.984 109.01 cv
542.986 109.346 542.849 109.653 542.569 109.932 cv
542.236 110.265 541.87 110.432 541.469 110.432 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
544.704 113.657 mo
544.673 113.657 544.642 113.656 544.61 113.655 cv
544.123 113.627 543.653 113.388 543.201 112.935 cv
543 112.735 542.83 112.524 542.689 112.305 cv
542.549 112.084 542.454 111.878 542.407 111.682 cv
542.69 111.399 li
542.789 111.699 542.895 111.945 543.009 112.139 cv
543.125 112.333 543.269 112.518 543.443 112.693 cv
543.797 113.045 544.174 113.235 544.572 113.262 cv
544.603 113.264 544.634 113.265 544.664 113.265 cv
545.028 113.265 545.357 113.118 545.65 112.824 cv
545.949 112.526 546.081 112.186 546.044 111.807 cv
546.008 111.428 545.811 111.061 545.454 110.704 cv
545.215 110.465 544.93 110.25 544.596 110.061 cv
544.538 109.788 li
546.544 108.103 li
548.485 110.044 li
548.221 110.31 li
546.538 108.627 li
544.991 109.926 li
545.331 110.159 545.582 110.358 545.744 110.52 cv
546.174 110.95 546.409 111.392 546.448 111.847 cv
546.488 112.302 546.325 112.712 545.962 113.076 cv
545.575 113.463 545.155 113.657 544.704 113.657 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
255.159 114.376 mo
254.916 114.133 li
254.871 111.94 li
254.859 111.326 254.832 110.875 254.788 110.588 cv
254.744 110.301 254.673 110.055 254.581 109.846 cv
254.486 109.639 254.358 109.451 254.193 109.286 cv
253.959 109.052 253.692 108.936 253.394 108.936 cv
253.385 108.936 253.377 108.936 253.368 108.936 cv
253.058 108.944 252.778 109.074 252.527 109.326 cv
252.19 109.662 251.99 110.107 251.926 110.659 cv
251.589 110.616 li
251.641 109.996 251.874 109.482 252.283 109.072 cv
252.634 108.721 253.004 108.538 253.393 108.525 cv
253.409 108.524 253.424 108.524 253.44 108.524 cv
253.811 108.524 254.155 108.681 254.47 108.997 cv
254.737 109.264 254.926 109.589 255.042 109.973 cv
255.155 110.359 255.215 110.912 255.222 111.638 cv
255.251 113.733 li
255.262 113.744 li
257.42 111.586 li
257.684 111.851 li
255.159 114.376 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
258.384 111.151 mo
258.141 110.908 li
258.095 108.716 li
258.084 108.101 258.055 107.651 258.011 107.365 cv
257.967 107.077 257.898 106.83 257.804 106.622 cv
257.711 106.415 257.581 106.228 257.416 106.063 cv
257.182 105.828 256.915 105.712 256.617 105.712 cv
256.609 105.712 256.6 105.712 256.591 105.712 cv
256.282 105.72 256.002 105.849 255.75 106.101 cv
255.413 106.438 255.214 106.881 255.152 107.433 cv
254.812 107.392 li
254.865 106.772 255.097 106.258 255.507 105.847 cv
255.859 105.497 256.228 105.314 256.617 105.3 cv
256.633 105.3 256.648 105.299 256.663 105.299 cv
257.034 105.299 257.378 105.458 257.694 105.774 cv
257.961 106.04 258.152 106.365 258.267 106.748 cv
258.38 107.134 258.439 107.689 258.447 108.413 cv
258.474 110.509 li
258.485 110.52 li
260.643 108.363 li
260.908 108.627 li
258.384 111.151 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
261.517 107.67 mo
261.234 107.386 li
261.533 107.289 261.78 107.183 261.975 107.068 cv
262.168 106.952 262.352 106.808 262.527 106.633 cv
262.881 106.28 263.069 105.905 263.096 105.503 cv
263.124 105.104 262.978 104.744 262.659 104.427 cv
262.393 104.16 262.094 104.026 261.765 104.026 cv
261.724 104.026 261.683 104.028 261.642 104.033 cv
261.263 104.069 260.895 104.266 260.538 104.622 cv
260.299 104.862 260.084 105.148 259.895 105.481 cv
259.622 105.538 li
257.938 103.533 li
259.88 101.591 li
260.144 101.857 li
258.462 103.538 li
259.761 105.086 li
259.994 104.746 260.192 104.495 260.353 104.333 cv
260.784 103.903 261.226 103.668 261.682 103.628 cv
261.727 103.624 261.771 103.622 261.815 103.622 cv
262.217 103.622 262.582 103.787 262.91 104.116 cv
263.323 104.53 263.516 104.98 263.489 105.466 cv
263.462 105.954 263.222 106.424 262.77 106.876 cv
262.569 107.076 262.359 107.247 262.138 107.388 cv
261.919 107.529 261.713 107.622 261.517 107.67 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
260.554 398.595 mo
260.266 398.57 259.974 398.484 259.677 398.34 cv
259.381 398.196 259.119 398.011 258.893 397.784 cv
258.522 397.413 258.323 397.038 258.296 396.661 cv
258.269 396.284 258.416 395.933 258.736 395.614 cv
258.985 395.364 259.275 395.232 259.603 395.218 cv
259.623 395.217 259.644 395.217 259.664 395.217 cv
259.971 395.217 260.27 395.32 260.564 395.522 cv
260.581 395.505 li
260.298 395.143 260.154 394.793 260.151 394.458 cv
260.147 394.122 260.284 393.817 260.564 393.536 cv
260.898 393.203 261.265 393.037 261.667 393.037 cv
261.719 393.037 261.772 393.04 261.826 393.045 cv
262.289 393.095 262.761 393.362 263.242 393.843 cv
263.652 394.252 263.935 394.686 264.086 395.145 cv
263.814 395.417 li
263.739 395.182 263.63 394.947 263.484 394.707 cv
263.337 394.471 263.18 394.266 263.01 394.097 cv
262.604 393.69 262.217 393.468 261.847 393.428 cv
261.805 393.424 261.763 393.421 261.721 393.421 cv
261.403 393.421 261.11 393.553 260.845 393.818 cv
260.579 394.084 260.479 394.394 260.544 394.747 cv
260.609 395.097 260.844 395.477 261.248 395.881 cv
261.684 396.318 li
261.419 396.583 li
260.977 396.141 li
260.643 395.807 260.299 395.621 259.945 395.583 cv
259.903 395.579 259.862 395.577 259.821 395.577 cv
259.515 395.577 259.242 395.696 259.003 395.936 cv
258.778 396.16 258.679 396.42 258.704 396.714 cv
258.726 397.01 258.867 397.285 259.125 397.541 cv
259.325 397.742 259.536 397.897 259.758 398.007 cv
259.979 398.115 260.261 398.206 260.604 398.275 cv
260.554 398.595 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
257.532 394.67 mo
255.619 394.395 li
255.381 394.158 li
259.414 390.125 li
259.684 390.395 li
256.746 393.333 li
256.481 393.599 256.193 393.864 255.885 394.129 cv
256.049 394.136 li
256.105 394.14 256.612 394.2 257.572 394.317 cv
257.532 394.67 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
253.365 392.142 mo
251.424 390.2 li
251.689 389.934 li
253.371 391.616 li
254.919 390.318 li
254.578 390.084 254.328 389.887 254.165 389.724 cv
253.736 389.295 253.501 388.852 253.462 388.397 cv
253.422 387.942 253.584 387.532 253.948 387.168 cv
254.335 386.78 254.753 386.587 255.204 386.587 cv
255.235 386.587 255.266 386.588 255.298 386.59 cv
255.786 386.617 256.256 386.857 256.709 387.31 cv
256.909 387.509 257.079 387.721 257.22 387.939 cv
257.361 388.16 257.456 388.365 257.503 388.562 cv
257.219 388.846 li
257.121 388.546 257.014 388.299 256.901 388.105 cv
256.784 387.911 256.64 387.726 256.466 387.552 cv
256.112 387.198 255.736 387.009 255.337 386.983 cv
255.306 386.981 255.275 386.98 255.245 386.98 cv
254.881 386.98 254.553 387.126 254.259 387.419 cv
253.96 387.718 253.827 388.058 253.865 388.437 cv
253.902 388.815 254.099 389.183 254.456 389.54 cv
254.695 389.78 254.98 389.994 255.313 390.183 cv
255.372 390.456 li
253.365 392.142 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
545.054 393.675 mo
542.265 390.887 li
541.57 391.582 li
541.333 391.345 li
542.029 390.65 li
541 389.62 li
541.259 389.362 li
542.288 390.391 li
544.362 388.316 li
544.547 388.501 li
545.387 393.341 li
545.054 393.675 li
544.271 388.882 mo
542.525 390.628 li
543.677 391.781 li
544.233 392.336 544.687 392.815 545.037 393.218 cv
545.059 393.196 li
545.028 393.09 544.969 392.804 544.88 392.337 cv
544.271 388.882 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
541.644 397.04 mo
541.38 396.776 li
543.063 395.093 li
541.763 393.545 li
541.53 393.887 541.332 394.137 541.171 394.299 cv
540.74 394.73 540.298 394.964 539.842 395.003 cv
539.797 395.007 539.753 395.009 539.709 395.009 cv
539.307 395.009 538.942 394.844 538.615 394.516 cv
538.2 394.102 538.007 393.652 538.034 393.166 cv
538.061 392.678 538.302 392.207 538.754 391.755 cv
538.954 391.555 539.164 391.385 539.385 391.244 cv
539.605 391.103 539.811 391.01 540.006 390.962 cv
540.29 391.245 li
539.991 391.343 539.744 391.449 539.55 391.565 cv
539.357 391.678 539.172 391.823 538.997 391.998 cv
538.644 392.352 538.455 392.728 538.427 393.127 cv
538.401 393.528 538.547 393.887 538.865 394.204 cv
539.134 394.473 539.434 394.606 539.765 394.606 cv
539.804 394.606 539.842 394.604 539.882 394.601 cv
540.26 394.563 540.63 394.366 540.985 394.01 cv
541.225 393.77 541.439 393.484 541.629 393.152 cv
541.902 393.094 li
543.586 395.099 li
541.644 397.04 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
144.288 256.858 mo
143.924 256.858 li
142.246 255.25 li
141.778 254.798 141.42 254.482 141.172 254.3 cv
140.924 254.119 140.687 253.985 140.461 253.899 cv
140.235 253.814 139.998 253.772 139.75 253.772 cv
139.39 253.772 139.096 253.889 138.871 254.126 cv
138.644 254.364 138.531 254.671 138.531 255.049 cv
138.531 255.552 138.715 256.035 139.081 256.495 cv
138.795 256.718 li
138.371 256.213 138.16 255.655 138.16 255.039 cv
138.16 254.514 138.299 254.1 138.58 253.798 cv
138.861 253.496 139.248 253.346 139.742 253.346 cv
140.141 253.346 140.528 253.447 140.902 253.65 cv
141.275 253.852 141.735 254.222 142.283 254.758 cv
143.875 256.309 li
143.891 256.309 li
143.891 253.078 li
144.288 253.078 li
144.288 256.858 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
138.643 252.043 mo
138.246 252.043 li
138.246 248.135 li
138.547 248.135 li
144.288 250.631 li
144.288 251.114 li
138.643 248.626 li
138.643 252.043 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
141.251 247.188 mo
140.198 247.188 139.419 247.029 138.911 246.709 cv
138.404 246.392 138.151 245.908 138.151 245.257 cv
138.151 244.62 138.414 244.136 138.938 243.803 cv
139.463 243.47 140.233 243.303 141.251 243.303 cv
142.311 243.303 143.096 243.465 143.605 243.789 cv
144.115 244.112 144.37 244.602 144.37 245.257 cv
144.37 245.888 144.108 246.368 143.583 246.696 cv
143.059 247.024 142.28 247.188 141.251 247.188 cv
141.251 243.761 mo
140.358 243.761 139.681 243.88 139.218 244.12 cv
138.755 244.358 138.524 244.737 138.524 245.257 cv
138.524 245.778 138.755 246.156 139.218 246.39 cv
139.681 246.623 140.358 246.742 141.251 246.742 cv
142.187 246.742 142.879 246.619 143.326 246.373 cv
143.775 246.127 143.998 245.755 143.998 245.257 cv
143.998 244.737 143.767 244.358 143.304 244.12 cv
142.841 243.88 142.156 243.761 141.251 243.761 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
400.004 421.205 mo
398.389 421.205 396.759 421.182 395.158 421.138 cv
395.175 420.534 li
396.77 420.578 398.393 420.6 400 420.6 cv
400.301 420.599 li
400.301 421.203 li
400.004 421.205 li
405.143 421.129 mo
405.125 420.525 li
405.194 420.523 405.262 420.521 405.33 420.518 cv
406.881 420.471 408.434 420.402 409.946 420.315 cv
409.98 420.919 li
408.463 421.006 406.907 421.075 405.351 421.123 cv
405.282 421.125 405.212 421.127 405.143 421.129 cv
390.322 420.936 mo
388.701 420.845 387.076 420.732 385.49 420.597 cv
385.543 419.994 li
387.121 420.128 388.741 420.242 390.355 420.331 cv
390.322 420.936 li
414.812 420.574 mo
414.76 419.971 li
416.347 419.835 417.963 419.674 419.561 419.491 cv
419.629 420.091 li
418.025 420.275 416.405 420.437 414.812 420.574 cv
380.671 420.124 mo
379.084 419.947 377.467 419.742 375.867 419.515 cv
375.952 418.916 li
377.547 419.142 379.157 419.347 380.74 419.525 cv
380.671 420.124 li
424.431 419.474 mo
424.345 418.876 li
425.947 418.647 427.551 418.394 429.112 418.125 cv
429.214 418.721 li
427.648 418.992 426.039 419.244 424.431 419.474 cv
371.084 418.772 mo
369.497 418.502 367.895 418.206 366.322 417.892 cv
366.44 417.299 li
368.008 417.612 369.604 417.908 371.185 418.176 cv
371.084 418.772 li
433.975 417.831 mo
433.856 417.239 li
433.875 417.235 433.895 417.231 433.915 417.227 cv
434.156 417.178 434.398 417.129 434.641 417.079 cv
435.939 416.812 437.258 416.524 438.571 416.22 cv
438.707 416.808 li
437.39 417.113 436.068 417.403 434.766 417.671 cv
434.524 417.721 434.282 417.77 434.041 417.818 cv
434.019 417.823 433.997 417.827 433.975 417.831 cv
361.586 416.876 mo
360.013 416.515 358.43 416.128 356.882 415.727 cv
357.033 415.141 li
358.576 415.541 360.154 415.927 361.721 416.287 cv
361.586 416.876 li
443.409 415.652 mo
443.256 415.067 li
443.978 414.878 444.701 414.684 445.422 414.485 cv
445.661 414.419 445.899 414.353 446.137 414.286 cv
446.73 414.12 447.321 413.951 447.906 413.78 cv
448.076 414.361 li
447.49 414.532 446.898 414.701 446.304 414.868 cv
446.066 414.934 445.828 415 445.589 415.066 cv
444.863 415.266 444.135 415.462 443.409 415.652 cv
352.214 414.443 mo
352.125 414.417 352.037 414.391 351.949 414.366 cv
350.493 413.941 349.025 413.492 347.582 413.028 cv
347.766 412.452 li
349.205 412.914 350.666 413.362 352.115 413.785 cv
352.204 413.81 352.293 413.836 352.381 413.862 cv
352.214 414.443 li
452.705 412.937 mo
452.518 412.361 li
454.058 411.862 455.596 411.34 457.088 410.811 cv
457.29 411.38 li
455.793 411.912 454.25 412.436 452.705 412.937 cv
342.979 411.475 mo
342.457 411.291 341.931 411.102 341.404 410.91 cv
341.172 410.825 340.94 410.74 340.708 410.654 cv
339.946 410.373 339.182 410.084 338.422 409.791 cv
338.639 409.227 li
339.396 409.519 340.156 409.806 340.915 410.086 cv
341.147 410.172 341.379 410.257 341.61 410.342 cv
342.136 410.533 342.659 410.722 343.18 410.906 cv
342.979 411.475 li
461.83 409.695 mo
461.611 409.13 li
461.829 409.046 462.046 408.961 462.265 408.875 cv
462.494 408.785 462.724 408.695 462.954 408.603 cv
463.993 408.19 465.037 407.763 466.069 407.328 cv
466.304 407.885 li
465.269 408.321 464.223 408.749 463.18 409.164 cv
462.95 409.255 462.721 409.346 462.491 409.436 cv
462.27 409.523 462.05 409.609 461.83 409.695 cv
333.917 407.979 mo
332.447 407.364 330.95 406.71 329.466 406.038 cv
329.716 405.489 li
331.193 406.157 332.686 406.807 334.151 407.421 cv
333.917 407.979 li
470.728 405.953 mo
470.477 405.403 li
471.926 404.743 473.39 404.053 474.829 403.349 cv
475.094 403.892 li
473.65 404.598 472.182 405.291 470.728 405.953 cv
325.075 403.974 mo
323.62 403.264 322.163 402.529 320.743 401.784 cv
321.024 401.248 li
322.439 401.991 323.891 402.723 325.34 403.431 cv
325.075 403.974 li
479.403 401.709 mo
479.122 401.173 li
480.526 400.436 481.95 399.664 483.352 398.876 cv
483.649 399.404 li
482.241 400.193 480.813 400.969 479.403 401.709 cv
316.48 399.474 mo
315.861 399.127 315.241 398.775 314.623 398.419 cv
314.409 398.295 314.195 398.171 313.981 398.047 cv
313.411 397.715 312.844 397.38 312.282 397.044 cv
312.591 396.525 li
313.151 396.859 313.716 397.193 314.283 397.523 cv
314.497 397.648 314.711 397.772 314.925 397.895 cv
315.541 398.251 316.159 398.602 316.775 398.948 cv
316.48 399.474 li
487.829 396.979 mo
487.518 396.459 li
488.88 395.644 490.258 394.791 491.615 393.926 cv
491.94 394.436 li
490.579 395.304 489.195 396.159 487.829 396.979 cv
308.155 394.494 mo
306.969 393.737 305.769 392.952 304.583 392.155 cv
304.423 392.047 304.263 391.939 304.103 391.831 cv
304.444 391.33 li
304.603 391.438 304.762 391.546 304.922 391.653 cv
306.103 392.449 307.298 393.231 308.481 393.985 cv
308.155 394.494 li
495.979 391.777 mo
495.639 391.277 li
496.969 390.373 498.298 389.444 499.588 388.515 cv
499.941 389.006 li
498.647 389.938 497.314 390.87 495.979 391.777 cv
300.13 389.057 mo
298.841 388.128 297.531 387.157 296.237 386.17 cv
296.604 385.688 li
297.893 386.673 299.198 387.641 300.485 388.566 cv
300.13 389.057 li
503.826 386.121 mo
503.459 385.642 li
504.739 384.662 506.013 383.659 507.247 382.66 cv
507.628 383.129 li
506.389 384.132 505.11 385.139 503.826 386.121 cv
292.428 383.174 mo
291.193 382.175 289.941 381.133 288.705 380.074 cv
289.098 379.616 li
290.33 380.67 291.578 381.709 292.809 382.704 cv
292.428 383.174 li
511.345 380.033 mo
510.952 379.575 li
511.509 379.096 512.068 378.61 512.624 378.12 cv
512.809 377.957 512.994 377.793 513.178 377.63 cv
513.645 377.215 514.108 376.799 514.567 376.382 cv
514.974 376.83 li
514.514 377.248 514.05 377.664 513.583 378.079 cv
513.398 378.243 513.213 378.406 513.028 378.569 cv
512.469 379.062 511.906 379.551 511.345 380.033 cv
285.074 376.873 mo
283.9 375.807 282.725 374.712 281.58 373.615 cv
281.565 373.6 281.549 373.585 281.533 373.57 cv
281.951 373.132 li
281.967 373.148 281.984 373.164 282.001 373.18 cv
283.141 374.273 284.311 375.364 285.48 376.424 cv
285.074 376.873 li
518.512 373.53 mo
518.093 373.092 li
519.162 372.065 520.227 371.016 521.264 369.967 cv
521.352 369.878 521.439 369.79 521.526 369.702 cv
521.957 370.126 li
521.872 370.213 521.786 370.3 521.7 370.387 cv
520.656 371.441 519.586 372.497 518.512 373.53 cv
278.087 370.166 mo
276.946 369.008 275.819 367.831 274.738 366.669 cv
275.18 366.258 li
276.258 367.415 277.38 368.588 278.516 369.742 cv
278.087 370.166 li
525.305 366.627 mo
524.862 366.216 li
525.966 365.029 527.056 363.824 528.1 362.636 cv
528.554 363.035 li
527.506 364.227 526.413 365.436 525.305 366.627 cv
271.489 363.082 mo
270.426 361.875 269.368 360.638 268.342 359.405 cv
268.807 359.017 li
269.007 359.257 269.207 359.497 269.409 359.737 cv
269.567 359.925 269.727 360.114 269.886 360.302 cv
270.565 361.102 271.253 361.899 271.942 362.683 cv
271.489 363.082 li
531.702 359.353 mo
531.236 358.965 li
532.254 357.741 533.274 356.476 534.268 355.208 cv
534.744 355.581 li
533.746 356.854 532.722 358.122 531.702 359.353 cv
265.303 355.64 mo
264.301 354.363 263.314 353.069 262.369 351.792 cv
262.855 351.434 li
263.796 352.703 264.78 353.994 265.778 355.267 cv
265.303 355.64 li
537.681 351.726 mo
537.195 351.367 li
537.199 351.362 537.203 351.357 537.207 351.351 cv
538.151 350.074 539.094 348.759 540.011 347.444 cv
540.507 347.788 li
539.588 349.109 538.642 350.427 537.696 351.706 cv
537.691 351.713 537.686 351.719 537.681 351.726 cv
259.546 347.866 mo
258.633 346.557 257.722 345.21 256.835 343.862 cv
257.341 343.529 li
258.223 344.873 259.133 346.216 260.042 347.521 cv
259.546 347.866 li
543.222 343.773 mo
542.717 343.443 li
542.995 343.017 543.272 342.59 543.547 342.162 cv
543.681 341.954 543.814 341.745 543.947 341.537 cv
544.409 340.811 544.864 340.085 545.308 339.365 cv
545.823 339.681 li
545.378 340.403 544.922 341.13 544.459 341.857 cv
544.327 342.066 544.193 342.274 544.06 342.482 cv
543.782 342.914 543.503 343.344 543.222 343.773 cv
254.241 339.784 mo
253.386 338.399 252.551 337.001 251.761 335.633 cv
252.286 335.331 li
253.072 336.695 253.903 338.085 254.756 339.467 cv
254.241 339.784 li
548.307 335.516 mo
547.784 335.214 li
548.582 333.831 549.374 332.412 550.14 330.993 cv
550.672 331.282 li
549.904 332.704 549.108 334.129 548.307 335.516 cv
249.404 331.418 mo
248.638 330.005 247.885 328.565 247.165 327.137 cv
247.703 326.866 li
248.423 328.287 249.173 329.721 249.935 331.13 cv
249.404 331.418 li
552.918 326.979 mo
552.378 326.707 li
552.389 326.686 552.399 326.665 552.41 326.644 cv
552.521 326.424 552.631 326.202 552.742 325.981 cv
553.34 324.779 553.927 323.563 554.491 322.358 cv
555.039 322.615 li
554.473 323.822 553.884 325.041 553.285 326.246 cv
553.174 326.467 553.064 326.688 552.953 326.909 cv
552.941 326.932 552.929 326.955 552.918 326.979 cv
245.048 322.796 mo
244.742 322.145 244.437 321.484 244.133 320.816 cv
244.031 320.592 243.929 320.366 243.828 320.141 cv
243.568 319.563 243.31 318.982 243.055 318.4 cv
243.61 318.157 li
243.864 318.738 244.121 319.319 244.38 319.895 cv
244.482 320.121 244.583 320.346 244.686 320.57 cv
244.988 321.235 245.292 321.892 245.596 322.539 cv
245.048 322.796 li
557.036 318.19 mo
556.482 317.949 li
556.789 317.242 557.094 316.527 557.395 315.807 cv
557.49 315.58 557.585 315.352 557.679 315.123 cv
557.904 314.578 558.127 314.031 558.345 313.485 cv
558.906 313.709 li
558.687 314.256 558.465 314.804 558.239 315.35 cv
558.145 315.578 558.05 315.806 557.955 316.034 cv
557.653 316.758 557.346 317.478 557.036 318.19 cv
241.191 313.948 mo
240.584 312.445 239.997 310.923 239.445 309.43 cv
240.012 309.22 li
240.563 310.708 241.147 312.223 241.75 313.722 cv
241.191 313.948 li
560.649 309.177 mo
560.082 308.969 li
560.607 307.54 561.12 306.085 561.608 304.64 cv
561.635 304.561 561.662 304.482 561.688 304.403 cv
562.26 304.594 li
562.234 304.672 562.208 304.749 562.182 304.827 cv
561.693 306.279 561.177 307.741 560.649 309.177 cv
237.83 304.866 mo
237.764 304.669 237.698 304.472 237.632 304.274 cv
237.554 304.04 237.476 303.805 237.399 303.57 cv
237.039 302.476 236.687 301.366 236.346 300.256 cv
236.925 300.078 li
237.264 301.186 237.615 302.292 237.974 303.383 cv
238.052 303.618 238.129 303.853 238.208 304.087 cv
238.273 304.282 238.338 304.477 238.404 304.671 cv
237.83 304.866 li
563.743 299.965 mo
563.165 299.788 li
563.249 299.51 563.334 299.23 563.417 298.95 cv
563.488 298.714 563.558 298.476 563.628 298.239 cv
563.929 297.213 564.222 296.181 564.503 295.154 cv
565.086 295.312 li
564.804 296.342 564.511 297.377 564.209 298.405 cv
564.139 298.643 564.069 298.88 563.999 299.117 cv
563.914 299.4 563.829 299.683 563.743 299.965 cv
234.995 295.605 mo
234.748 294.708 234.508 293.804 234.275 292.901 cv
234.213 292.662 234.152 292.423 234.091 292.183 cv
233.984 291.761 233.879 291.339 233.776 290.918 cv
234.364 290.775 li
234.467 291.194 234.571 291.615 234.678 292.037 cv
234.739 292.276 234.8 292.516 234.861 292.755 cv
235.093 293.653 235.333 294.552 235.579 295.445 cv
234.995 295.605 li
566.296 290.622 mo
565.708 290.481 li
565.957 289.456 566.198 288.421 566.428 287.389 cv
566.482 287.148 566.536 286.907 566.588 286.666 cv
566.653 286.369 566.717 286.073 566.78 285.777 cv
567.372 285.902 li
567.309 286.198 567.245 286.495 567.18 286.792 cv
567.127 287.033 567.074 287.274 567.02 287.515 cv
566.788 288.553 566.546 289.593 566.296 290.622 cv
232.692 286.199 mo
232.352 284.618 232.032 283.022 231.741 281.451 cv
232.337 281.341 li
232.626 282.907 232.944 284.498 233.282 286.072 cv
232.692 286.199 li
568.314 281.154 mo
567.719 281.044 li
568.007 279.475 568.277 277.874 568.522 276.286 cv
569.119 276.378 li
568.874 277.972 568.603 279.579 568.314 281.154 cv
230.928 276.677 mo
230.682 275.108 230.454 273.495 230.249 271.883 cv
230.849 271.808 li
230.969 272.756 231.098 273.705 231.234 274.645 cv
231.269 274.891 231.305 275.136 231.342 275.38 cv
231.402 275.784 231.463 276.186 231.525 276.585 cv
230.928 276.677 li
569.79 271.582 mo
569.19 271.507 li
569.265 270.912 569.336 270.313 569.405 269.713 cv
569.433 269.467 569.461 269.22 569.488 268.974 cv
569.571 268.219 569.649 267.462 569.722 266.71 cv
570.324 266.77 li
570.251 267.523 570.173 268.28 570.089 269.037 cv
570.062 269.283 570.034 269.53 570.006 269.776 cv
569.937 270.38 569.865 270.983 569.79 271.582 cv
229.707 267.072 mo
229.596 265.947 229.495 264.808 229.405 263.669 cv
229.386 263.423 229.367 263.177 229.349 262.931 cv
229.332 262.703 229.315 262.475 229.299 262.247 cv
229.902 262.205 li
229.918 262.433 229.935 262.661 229.952 262.889 cv
229.97 263.135 229.989 263.381 230.008 263.627 cv
230.098 264.76 230.198 265.894 230.309 267.013 cv
229.707 267.072 li
570.723 261.945 mo
570.12 261.904 li
570.23 260.298 570.318 258.677 570.382 257.085 cv
570.986 257.109 li
570.922 258.706 570.833 260.333 570.723 261.945 cv
229.027 257.412 mo
228.96 255.8 228.914 254.174 228.89 252.579 cv
229.494 252.57 li
229.518 254.16 229.564 255.781 229.632 257.387 cv
229.027 257.412 li
571.114 252.268 mo
570.509 252.261 li
570.529 250.657 570.529 249.042 570.503 247.437 cv
571.108 247.427 li
571.132 249.039 571.134 250.659 571.114 252.268 cv
229.493 247.744 mo
228.889 247.737 li
228.897 247.113 228.909 246.488 228.924 245.866 cv
228.93 245.618 228.936 245.371 228.943 245.124 cv
228.964 244.376 228.99 243.632 229.021 242.897 cv
229.626 242.922 li
229.595 243.656 229.569 244.398 229.547 245.145 cv
229.54 245.392 229.534 245.639 229.528 245.887 cv
229.513 246.505 229.502 247.125 229.493 247.744 cv
570.363 242.62 mo
570.295 241.03 570.203 239.409 570.088 237.802 cv
570.692 237.76 li
570.806 239.372 570.899 240.998 570.967 242.594 cv
570.363 242.62 li
229.891 238.104 mo
229.289 238.062 li
229.383 236.719 229.493 235.356 229.619 233.998 cv
229.642 233.752 229.665 233.506 229.689 233.261 cv
229.69 233.253 229.691 233.245 229.692 233.237 cv
230.294 233.295 li
230.293 233.305 230.292 233.315 230.291 233.324 cv
230.267 233.57 230.244 233.815 230.221 234.061 cv
230.095 235.412 229.984 236.769 229.891 238.104 cv
569.677 232.993 mo
569.521 231.416 569.339 229.803 569.133 228.201 cv
569.732 228.123 li
569.939 229.732 570.123 231.351 570.279 232.935 cv
569.677 232.993 li
230.83 228.5 mo
230.23 228.424 li
230.244 228.312 230.258 228.201 230.273 228.089 cv
230.304 227.844 230.336 227.598 230.369 227.352 cv
230.534 226.107 230.714 224.859 230.904 223.629 cv
231.502 223.722 li
231.311 224.949 231.132 226.193 230.967 227.436 cv
230.935 227.682 230.903 227.928 230.871 228.173 cv
230.857 228.282 230.844 228.391 230.83 228.5 cv
568.452 223.423 mo
568.377 222.945 568.299 222.465 568.22 221.982 cv
568.179 221.739 568.138 221.495 568.097 221.251 cv
567.951 220.392 567.797 219.529 567.637 218.668 cv
568.231 218.558 li
568.528 220.153 568.803 221.758 569.049 223.329 cv
568.452 223.423 li
232.311 218.965 mo
231.716 218.856 li
232.006 217.284 232.323 215.686 232.662 214.107 cv
233.253 214.233 li
232.916 215.807 232.599 217.399 232.311 218.965 cv
566.687 213.938 mo
566.348 212.373 565.984 210.791 565.601 209.237 cv
566.188 209.092 li
566.572 210.653 566.938 212.241 567.277 213.811 cv
566.687 213.938 li
234.328 209.529 mo
233.74 209.386 li
234.12 207.83 234.523 206.274 234.938 204.76 cv
234.944 204.739 234.949 204.718 234.955 204.698 cv
235.539 204.859 li
235.533 204.881 235.526 204.904 235.52 204.927 cv
235.106 206.433 234.705 207.981 234.328 209.529 cv
564.381 204.568 mo
563.955 203.022 563.5 201.463 563.032 199.935 cv
563.609 199.758 li
564.08 201.291 564.536 202.855 564.965 204.406 cv
564.381 204.568 li
236.881 200.223 mo
236.302 200.047 li
236.767 198.527 237.266 196.97 237.787 195.419 cv
238.361 195.613 li
238.033 196.584 237.715 197.557 237.409 198.522 cv
237.334 198.759 237.26 198.996 237.186 199.232 cv
237.083 199.564 236.981 199.894 236.881 200.223 cv
561.549 195.343 mo
561.038 193.833 560.495 192.303 559.936 190.796 cv
560.503 190.586 li
561.064 192.098 561.609 193.634 562.122 195.15 cv
561.549 195.343 li
239.972 191.047 mo
239.405 190.838 li
239.966 189.317 240.553 187.793 241.152 186.307 cv
241.712 186.533 li
241.116 188.013 240.531 189.533 239.972 191.047 cv
558.193 186.296 mo
557.599 184.82 556.971 183.329 556.331 181.862 cv
556.885 181.619 li
557.528 183.091 558.157 184.588 558.755 186.069 cv
558.193 186.296 li
243.579 182.069 mo
243.16 181.886 li
243.024 181.827 li
243.671 180.344 244.344 178.856 245.026 177.406 cv
245.573 177.662 li
244.927 179.036 244.289 180.444 243.675 181.85 cv
243.643 181.923 243.611 181.996 243.579 182.069 cv
554.343 177.481 mo
553.663 176.038 552.952 174.584 552.231 173.158 cv
552.77 172.885 li
553.494 174.316 554.208 175.776 554.889 177.224 cv
554.343 177.481 li
247.692 173.315 mo
247.152 173.042 li
247.873 171.616 248.63 170.169 249.401 168.744 cv
249.932 169.032 li
249.555 169.728 249.182 170.43 248.815 171.132 cv
248.7 171.351 248.586 171.57 248.473 171.789 cv
248.208 172.299 247.948 172.808 247.692 173.315 cv
549.995 168.894 mo
549.23 167.483 548.438 166.071 547.64 164.695 cv
548.163 164.391 li
548.963 165.772 549.758 167.19 550.526 168.606 cv
549.995 168.894 li
252.294 164.813 mo
251.77 164.511 li
252.434 163.362 253.113 162.22 253.793 161.105 cv
253.923 160.893 254.053 160.681 254.182 160.471 cv
254.208 160.429 254.233 160.388 254.259 160.347 cv
254.774 160.665 li
254.748 160.707 254.722 160.749 254.696 160.792 cv
254.566 161.002 254.436 161.213 254.306 161.426 cv
253.629 162.534 252.954 163.67 252.294 164.813 cv
545.165 160.562 mo
544.324 159.2 543.452 157.833 542.576 156.5 cv
543.081 156.168 li
543.961 157.506 544.835 158.877 545.68 160.244 cv
545.165 160.562 li
257.366 156.588 mo
256.861 156.257 li
256.904 156.191 256.947 156.126 256.991 156.06 cv
257.127 155.853 257.263 155.647 257.4 155.441 cv
258.118 154.361 258.849 153.289 259.579 152.244 cv
260.075 152.589 li
259.346 153.632 258.617 154.702 257.901 155.779 cv
257.764 155.985 257.628 156.191 257.492 156.398 cv
257.45 156.461 257.408 156.525 257.366 156.588 cv
539.872 152.512 mo
538.955 151.202 538.007 149.886 537.056 148.602 cv
537.541 148.242 li
538.497 149.531 539.447 150.851 540.368 152.166 cv
539.872 152.512 li
262.896 148.668 mo
262.409 148.308 li
263.382 146.995 264.37 145.699 265.35 144.454 cv
265.825 144.828 li
264.849 146.068 263.864 147.36 262.896 148.668 cv
534.129 144.769 mo
533.145 143.517 532.124 142.256 531.097 141.022 cv
531.561 140.635 li
532.593 141.873 533.617 143.139 534.605 144.396 cv
534.129 144.769 li
268.861 141.075 mo
268.395 140.689 li
269.405 139.475 270.446 138.259 271.49 137.073 cv
271.509 137.051 271.528 137.03 271.547 137.008 cv
272 137.409 li
271.98 137.432 271.96 137.455 271.939 137.478 cv
270.9 138.657 269.864 139.868 268.861 141.075 cv
527.959 137.36 mo
526.905 136.164 525.815 134.962 524.719 133.787 cv
525.161 133.375 li
526.261 134.554 527.354 135.76 528.412 136.96 cv
527.959 137.36 li
275.24 133.832 mo
274.799 133.42 li
275.887 132.252 277.014 131.076 278.15 129.925 cv
278.58 130.349 li
277.869 131.071 277.16 131.802 276.462 132.535 cv
276.292 132.715 276.122 132.894 275.952 133.074 cv
275.713 133.327 275.476 133.58 275.24 133.832 cv
521.378 130.306 mo
520.564 129.481 519.737 128.66 518.91 127.854 cv
518.732 127.682 518.555 127.51 518.377 127.339 cv
518.232 127.198 518.087 127.059 517.942 126.92 cv
518.36 126.483 li
519.512 127.587 520.673 128.731 521.808 129.881 cv
521.378 130.306 li
282.016 126.961 mo
281.598 126.525 li
282.397 125.76 283.21 124.995 284.028 124.24 cv
284.211 124.073 284.393 123.905 284.575 123.739 cv
284.763 123.567 284.951 123.396 285.139 123.226 cv
285.545 123.673 li
285.357 123.844 285.168 124.016 284.98 124.188 cv
284.797 124.355 284.615 124.522 284.433 124.69 cv
283.62 125.44 282.81 126.2 282.016 126.961 cv
514.411 123.632 mo
513.227 122.56 512.008 121.487 510.788 120.443 cv
511.181 119.983 li
512.406 121.031 513.629 122.108 514.817 123.184 cv
514.411 123.632 li
289.163 120.485 mo
288.926 120.207 li
288.771 120.026 li
290.005 118.969 291.256 117.928 292.49 116.931 cv
292.87 117.401 li
291.737 118.317 290.587 119.271 289.451 120.239 cv
289.354 120.321 289.259 120.403 289.163 120.485 cv
507.075 117.356 mo
505.832 116.353 504.555 115.35 503.277 114.375 cv
503.643 113.895 li
504.925 114.872 506.208 115.878 507.455 116.886 cv
507.075 117.356 li
296.661 114.422 mo
296.295 113.942 li
296.81 113.549 297.329 113.158 297.848 112.771 cv
298.047 112.623 298.246 112.475 298.445 112.328 cv
299.025 111.9 299.605 111.478 300.182 111.063 cv
300.534 111.554 li
299.958 111.968 299.379 112.39 298.8 112.817 cv
298.601 112.964 298.402 113.111 298.203 113.26 cv
297.687 113.644 297.173 114.032 296.661 114.422 cv
499.394 111.502 mo
498.092 110.567 496.76 109.637 495.433 108.74 cv
495.772 108.239 li
497.103 109.14 498.441 110.073 499.747 111.011 cv
499.394 111.502 li
304.486 108.795 mo
304.146 108.294 li
305.484 107.388 306.844 106.494 308.189 105.639 cv
308.512 106.15 li
307.173 107.002 305.817 107.892 304.486 108.795 cv
491.393 106.089 mo
490.048 105.233 488.664 104.38 487.28 103.554 cv
487.589 103.035 li
488.978 103.865 490.367 104.72 491.717 105.579 cv
491.393 106.089 li
312.61 103.62 mo
312.301 103.101 li
313.676 102.279 315.082 101.464 316.483 100.679 cv
316.778 101.207 li
315.382 101.989 313.98 102.8 312.61 103.62 cv
483.094 101.135 mo
481.689 100.349 480.258 99.5755 478.842 98.8363 cv
479.122 98.3012 li
480.543 99.0434 481.979 99.8196 483.389 100.608 cv
483.094 101.135 li
321.011 98.9134 mo
320.73 98.3773 li
322.154 97.6322 323.605 96.8988 325.041 96.1985 cv
325.305 96.7416 li
323.876 97.4398 322.43 98.1702 321.011 98.9134 cv
474.526 96.6585 mo
473.084 95.9584 471.612 95.267 470.147 94.6057 cv
470.396 94.054 li
471.865 94.7181 473.343 95.4124 474.79 96.1156 cv
474.526 96.6585 li
329.66 94.6927 mo
329.428 94.1829 li
329.409 94.1419 li
330.861 93.4838 332.351 92.8343 333.835 92.2113 cv
334.069 92.7689 li
332.593 93.3883 331.114 94.0341 329.671 94.6877 cv
329.667 94.6893 329.664 94.691 329.66 94.6927 cv
465.711 92.6761 mo
465.109 92.4245 464.503 92.1755 463.897 91.9304 cv
463.668 91.8377 463.439 91.7456 463.21 91.6541 cv
462.545 91.3885 461.881 91.1281 461.22 90.8743 cv
461.438 90.3099 li
462.931 90.8851 464.448 91.4925 465.944 92.1186 cv
465.711 92.6761 li
338.528 90.972 mo
338.311 90.4076 li
339.813 89.8265 341.34 89.2611 342.853 88.727 cv
343.053 89.2971 li
341.548 89.8295 340.025 90.3928 338.528 90.972 cv
456.678 89.1996 mo
455.161 88.6653 453.617 88.1468 452.09 87.6575 cv
452.274 87.0813 li
453.807 87.5726 455.357 88.0941 456.879 88.6292 cv
456.678 89.1996 li
347.625 87.7502 mo
347.439 87.1751 li
348.975 86.68 350.532 86.2025 352.069 85.7543 cv
352.238 86.3353 li
350.707 86.7805 349.155 87.2572 347.625 87.7502 cv
447.474 86.2514 mo
445.942 85.808 444.377 85.3792 442.821 84.9769 cv
442.971 84.3909 li
444.533 84.7952 446.105 85.226 447.642 85.6702 cv
447.474 86.2514 li
356.889 85.0522 mo
356.736 84.4682 li
358.31 84.057 359.892 83.6693 361.44 83.3138 cv
361.574 83.9036 li
360.033 84.2571 358.456 84.6438 356.889 85.0522 cv
438.131 83.8343 mo
437.158 83.6124 436.175 83.397 435.194 83.1908 cv
434.952 83.14 434.711 83.0897 434.469 83.0401 cv
434.116 82.9676 433.764 82.8963 433.413 82.8266 cv
433.531 82.2348 li
433.884 82.3048 434.239 82.3764 434.594 82.4493 cv
434.836 82.4988 435.078 82.549 435.32 82.5998 cv
436.304 82.8063 437.289 83.0225 438.266 83.2455 cv
438.131 83.8343 li
366.291 82.886 mo
366.173 82.2932 li
367.034 82.1207 367.9 81.9542 368.765 81.7947 cv
369.008 81.7499 369.251 81.7057 369.494 81.6621 cv
369.975 81.5755 370.456 81.4912 370.934 81.4094 cv
371.035 82.0052 li
370.558 82.0868 370.079 82.171 369.599 82.2575 cv
369.356 82.3012 369.113 82.3454 368.87 82.3902 cv
368.01 82.549 367.147 82.7148 366.291 82.886 cv
428.667 81.9554 mo
427.099 81.6898 425.495 81.4407 423.9 81.2172 cv
423.984 80.6186 li
425.585 80.8431 427.195 81.0922 428.769 81.3588 cv
428.667 81.9554 li
375.802 81.259 mo
375.716 80.6604 li
377.309 80.4339 378.924 80.2278 380.52 80.0472 cv
380.589 80.6478 li
378.999 80.8285 377.388 81.0335 375.802 81.259 cv
419.111 80.6146 mo
417.526 80.4379 415.91 80.2807 414.309 80.1477 cv
414.359 79.5453 li
415.966 79.6791 417.587 79.8363 419.178 80.0129 cv
419.111 80.6146 li
385.39 80.1722 mo
385.339 79.5697 li
386.95 79.433 388.574 79.3186 390.169 79.2289 cv
390.203 79.8323 li
388.615 79.9222 386.995 80.0364 385.39 80.1722 cv
409.496 79.8149 mo
408.14 79.7416 406.774 79.6828 405.425 79.6404 cv
405.177 79.6326 404.929 79.6253 404.683 79.6186 cv
404.68 79.6186 404.677 79.6185 404.675 79.6184 cv
404.691 79.014 li
404.695 79.0141 404.7 79.0142 404.704 79.0143 cv
404.951 79.021 405.198 79.0282 405.446 79.036 cv
406.799 79.0784 408.169 79.1371 409.529 79.2113 cv
409.496 79.8149 li
395.025 79.6262 mo
395.008 79.0218 li
396.602 78.9769 398.231 78.9525 399.85 78.9505 cv
399.851 79.5551 li
398.237 79.5569 396.614 79.5814 395.025 79.6262 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
400.271 462.25 mo
400 462.25 li
398.377 462.25 396.752 462.232 395.171 462.196 cv
395.178 461.893 li
396.757 461.93 398.379 461.948 400 461.948 cv
400.271 461.948 li
400.271 462.25 li
405.1 462.192 mo
405.093 461.89 li
406.733 461.85 408.354 461.793 409.914 461.721 cv
409.928 462.023 li
408.366 462.095 406.742 462.152 405.1 462.192 cv
390.344 462.034 mo
388.725 461.962 387.102 461.869 385.523 461.763 cv
385.544 461.461 li
387.121 461.569 388.741 461.659 390.359 461.732 cv
390.344 462.034 li
414.748 461.745 mo
414.728 461.444 li
416.31 461.336 417.927 461.206 419.535 461.06 cv
419.562 461.36 li
417.953 461.507 416.333 461.637 414.748 461.745 cv
380.709 461.384 mo
379.13 461.242 377.514 461.078 375.905 460.897 cv
375.939 460.597 li
377.545 460.778 379.159 460.942 380.737 461.084 cv
380.709 461.384 li
424.366 460.865 mo
424.331 460.565 li
425.925 460.383 427.535 460.18 429.116 459.963 cv
429.157 460.263 li
427.574 460.48 425.962 460.683 424.366 460.865 cv
371.113 460.3 mo
369.522 460.084 367.915 459.847 366.335 459.594 cv
366.382 459.297 li
367.96 459.547 369.565 459.785 371.153 460 cv
371.113 460.3 li
433.934 459.551 mo
433.885 459.253 li
435.45 459 437.049 458.725 438.638 458.433 cv
438.693 458.73 li
437.102 459.023 435.5 459.299 433.934 459.551 cv
361.577 458.78 mo
360.017 458.494 358.423 458.183 356.836 457.855 cv
356.898 457.56 li
358.482 457.887 360.073 458.198 361.631 458.482 cv
361.577 458.78 li
443.431 457.8 mo
443.37 457.504 li
444.921 457.181 446.506 456.832 448.08 456.468 cv
448.148 456.763 li
446.571 457.128 444.984 457.478 443.431 457.8 cv
352.117 456.825 mo
350.537 456.459 348.957 456.076 347.424 455.685 cv
347.499 455.392 li
349.03 455.783 350.607 456.165 352.185 456.53 cv
352.117 456.825 li
452.84 455.62 mo
452.764 455.327 li
454.352 454.917 455.919 454.496 457.422 454.075 cv
457.504 454.366 li
455.998 454.787 454.429 455.21 452.84 455.62 cv
342.76 454.438 mo
341.214 454.007 339.654 453.551 338.123 453.084 cv
338.211 452.796 li
339.74 453.261 341.298 453.717 342.84 454.148 cv
342.76 454.438 li
462.137 453.005 mo
462.048 452.717 li
463.599 452.243 465.145 451.749 466.644 451.254 cv
466.739 451.541 li
465.238 452.037 463.69 452.531 462.137 453.005 cv
333.502 451.621 mo
331.962 451.113 330.419 450.584 328.917 450.051 cv
329.019 449.765 li
330.518 450.298 332.059 450.826 333.596 451.333 cv
333.502 451.621 li
471.306 449.972 mo
471.205 449.686 li
472.699 449.154 474.221 448.591 475.728 448.013 cv
475.837 448.296 li
474.327 448.873 472.802 449.438 471.306 449.972 cv
324.369 448.374 mo
322.873 447.801 321.356 447.202 319.864 446.595 cv
319.977 446.314 li
321.468 446.923 322.983 447.521 324.478 448.091 cv
324.369 448.374 li
480.326 446.516 mo
480.212 446.237 li
481.674 445.637 483.163 445.008 484.638 444.366 cv
484.758 444.642 li
483.282 445.286 481.791 445.917 480.326 446.516 cv
315.401 444.711 mo
313.948 444.078 312.462 443.412 310.983 442.728 cv
311.111 442.454 li
312.587 443.136 314.071 443.803 315.522 444.436 cv
315.401 444.711 li
489.149 442.669 mo
489.021 442.395 li
490.477 441.72 491.937 441.023 493.36 440.323 cv
493.493 440.594 li
492.068 441.294 490.607 441.993 489.149 442.669 cv
306.616 440.647 mo
305.166 439.935 303.713 439.2 302.296 438.463 cv
302.435 438.194 li
303.849 438.931 305.3 439.665 306.748 440.375 cv
306.616 440.647 li
497.79 438.419 mo
497.651 438.151 li
499.071 437.411 500.498 436.649 501.892 435.882 cv
502.037 436.147 li
500.642 436.914 499.213 437.678 497.79 438.419 cv
298.027 436.183 mo
296.633 435.418 295.215 434.618 293.814 433.807 cv
293.965 433.544 li
295.365 434.356 296.78 435.154 298.174 435.919 cv
298.027 436.183 li
506.233 433.781 mo
506.082 433.519 li
507.477 432.709 508.868 431.881 510.218 431.058 cv
510.375 431.316 li
509.024 432.141 507.63 432.969 506.233 433.781 cv
289.654 431.333 mo
288.276 430.492 286.897 429.629 285.554 428.767 cv
285.717 428.512 li
287.059 429.373 288.435 430.235 289.812 431.076 cv
289.654 431.333 li
514.46 428.76 mo
514.297 428.505 li
515.646 427.639 517 426.748 518.32 425.858 cv
518.488 426.109 li
517.167 426.999 515.812 427.891 514.46 428.76 cv
281.516 426.111 mo
280.171 425.203 278.834 424.279 277.539 423.361 cv
277.714 423.116 li
279.006 424.031 280.343 424.953 281.686 425.861 cv
281.516 426.111 li
522.455 423.367 mo
522.281 423.121 li
523.582 422.199 524.894 421.247 526.18 420.292 cv
526.36 420.535 li
525.073 421.492 523.759 422.445 522.455 423.367 cv
273.626 420.525 mo
272.324 419.559 271.03 418.574 269.778 417.598 cv
269.964 417.36 li
271.215 418.334 272.506 419.319 273.805 420.282 cv
273.626 420.525 li
530.2 417.616 mo
530.015 417.377 li
531.283 416.389 532.551 415.379 533.783 414.374 cv
533.974 414.609 li
532.74 415.615 531.471 416.626 530.2 417.616 cv
265.998 414.587 mo
264.737 413.559 263.488 412.517 262.289 411.492 cv
262.484 411.262 li
263.683 412.286 264.93 413.325 266.19 414.353 cv
265.998 414.587 li
537.679 411.518 mo
537.483 411.289 li
538.69 410.259 539.911 409.193 541.112 408.119 cv
541.314 408.343 li
540.111 409.419 538.887 410.488 537.679 411.518 cv
258.653 408.313 mo
257.458 407.245 256.259 406.15 255.088 405.053 cv
255.294 404.833 li
256.464 405.926 257.661 407.022 258.854 408.088 cv
258.653 408.313 li
544.877 405.086 mo
544.67 404.866 li
545.853 403.76 547.026 402.638 548.155 401.535 cv
548.366 401.75 li
547.235 402.856 546.061 403.979 544.877 405.086 cv
251.597 401.714 mo
250.452 400.593 249.304 399.445 248.184 398.297 cv
248.401 398.087 li
249.518 399.231 250.666 400.379 251.81 401.499 cv
251.597 401.714 li
551.78 398.333 mo
551.563 398.123 li
552.69 396.97 553.81 395.796 554.894 394.635 cv
555.115 394.841 li
554.03 396.004 552.908 397.179 551.78 398.333 cv
244.853 394.807 mo
243.744 393.618 242.65 392.418 241.6 391.24 cv
241.827 391.039 li
242.874 392.215 243.968 393.414 245.075 394.601 cv
244.853 394.807 li
558.371 391.274 mo
558.145 391.074 li
559.215 389.873 560.282 388.651 561.316 387.438 cv
561.546 387.634 li
560.511 388.849 559.442 390.074 558.371 391.274 cv
238.429 387.603 mo
237.39 386.385 236.351 385.138 235.341 383.896 cv
235.575 383.704 li
236.585 384.946 237.621 386.191 238.658 387.408 cv
238.429 387.603 li
564.639 383.923 mo
564.403 383.732 li
565.417 382.486 566.428 381.215 567.408 379.953 cv
567.647 380.139 li
566.665 381.402 565.654 382.676 564.639 383.923 cv
232.338 380.118 mo
231.347 378.845 230.366 377.552 229.422 376.276 cv
229.665 376.096 li
230.608 377.37 231.588 378.66 232.576 379.932 cv
232.338 380.118 li
570.568 376.291 mo
570.325 376.112 li
571.279 374.824 572.231 373.508 573.155 372.2 cv
573.401 372.374 li
572.476 373.684 571.523 375.002 570.568 376.291 cv
226.596 372.369 mo
225.682 371.074 224.761 369.738 223.859 368.398 cv
224.11 368.23 li
225.01 369.567 225.93 370.901 226.844 372.194 cv
226.596 372.369 li
576.147 368.392 mo
575.897 368.224 li
576.804 366.873 577.695 365.516 578.546 364.188 cv
578.801 364.35 li
577.948 365.681 577.056 367.041 576.147 368.392 cv
221.21 364.368 mo
220.323 362.982 219.463 361.607 218.657 360.278 cv
218.914 360.122 li
219.721 361.449 220.579 362.822 221.464 364.205 cv
221.21 364.368 li
581.362 360.249 mo
581.104 360.091 li
581.937 358.726 582.766 357.328 583.568 355.938 cv
583.831 356.089 li
583.027 357.481 582.196 358.88 581.362 360.249 cv
216.197 356.136 mo
215.393 354.746 214.599 353.333 213.834 351.939 cv
214.098 351.792 li
214.862 353.187 215.657 354.597 216.46 355.985 cv
216.197 356.136 li
586.203 351.872 mo
585.939 351.726 li
586.698 350.342 587.463 348.908 588.212 347.463 cv
588.48 347.602 li
587.73 349.048 586.964 350.486 586.203 351.872 cv
211.566 347.689 mo
210.831 346.272 210.101 344.826 209.397 343.388 cv
209.668 343.256 li
210.372 344.689 211.1 346.134 211.835 347.549 cv
211.566 347.689 li
590.658 343.281 mo
590.387 343.149 li
591.092 341.709 591.791 340.241 592.464 338.783 cv
592.737 338.91 li
592.064 340.37 591.364 341.84 590.658 343.281 cv
207.324 339.042 mo
206.654 337.594 205.99 336.117 205.354 334.65 cv
205.63 334.53 li
206.267 335.993 206.929 337.469 207.598 338.914 cv
207.324 339.042 li
594.716 334.49 mo
594.439 334.368 li
595.07 332.917 595.7 331.418 596.314 329.911 cv
596.594 330.025 li
595.98 331.534 595.348 333.036 594.716 334.49 cv
203.485 330.216 mo
202.868 328.705 202.272 327.195 201.711 325.726 cv
201.995 325.618 li
202.553 327.083 203.15 328.593 203.766 330.103 cv
203.485 330.216 li
598.368 325.519 mo
598.086 325.41 li
598.659 323.907 599.22 322.378 599.755 320.868 cv
600.04 320.97 li
599.504 322.482 598.942 324.012 598.368 325.519 cv
200.039 321.193 mo
199.504 319.686 198.977 318.148 198.473 316.624 cv
198.761 316.53 li
199.262 318.051 199.789 319.586 200.325 321.092 cv
200.039 321.193 li
601.606 316.384 mo
601.319 316.289 li
601.821 314.761 602.312 313.208 602.777 311.673 cv
603.067 311.761 li
602.601 313.298 602.109 314.853 601.606 316.384 cv
197.014 312.022 mo
196.553 310.511 196.097 308.953 195.659 307.387 cv
195.949 307.305 li
196.387 308.869 196.843 310.426 197.302 311.934 cv
197.014 312.022 li
604.415 307.121 mo
604.123 307.041 li
604.55 305.511 604.967 303.943 605.364 302.381 cv
605.657 302.456 li
605.259 304.02 604.841 305.589 604.415 307.121 cv
194.41 302.721 mo
194.014 301.174 193.63 299.596 193.268 298.029 cv
193.563 297.96 li
193.924 299.525 194.308 301.103 194.703 302.646 cv
194.41 302.721 li
606.792 297.763 mo
606.497 297.695 li
606.858 296.126 607.202 294.541 607.523 292.983 cv
607.819 293.044 li
607.498 294.604 607.153 296.192 606.792 297.763 cv
192.237 293.311 mo
191.911 291.742 191.601 290.147 191.312 288.571 cv
191.609 288.516 li
191.897 290.09 192.208 291.683 192.532 293.249 cv
192.237 293.311 li
608.737 288.301 mo
608.44 288.246 li
608.725 286.684 608.997 285.085 609.249 283.494 cv
609.548 283.54 li
609.295 285.134 609.023 286.736 608.737 288.301 cv
190.496 283.811 mo
190.241 282.218 190.002 280.61 189.787 279.034 cv
190.087 278.993 li
190.301 280.568 190.54 282.172 190.793 283.764 cv
190.496 283.811 li
610.249 278.763 mo
609.949 278.723 li
610.162 277.15 610.362 275.54 610.542 273.938 cv
610.841 273.971 li
610.662 275.575 610.463 277.188 610.249 278.763 cv
189.19 274.242 mo
189.009 272.652 188.845 271.035 188.701 269.44 cv
189.001 269.41 li
189.146 271.007 189.31 272.621 189.49 274.209 cv
189.19 274.242 li
611.325 269.166 mo
611.023 269.141 li
611.165 267.556 611.291 265.939 611.398 264.331 cv
611.699 264.352 li
611.592 265.961 611.466 267.581 611.325 269.166 cv
188.318 264.624 mo
188.21 263.012 188.118 261.389 188.047 259.802 cv
188.349 259.788 li
188.42 261.374 188.511 262.994 188.621 264.603 cv
188.318 264.624 li
611.965 259.53 mo
611.663 259.516 li
611.733 257.913 611.786 256.291 611.82 254.696 cv
612.123 254.704 li
612.088 256.3 612.036 257.924 611.965 259.53 cv
187.884 254.976 mo
187.847 253.361 187.828 251.736 187.828 250.146 cv
188.131 250.146 li
188.131 251.734 188.15 253.356 188.186 254.969 cv
187.884 254.976 li
612.172 249.874 mo
611.87 249.874 li
611.868 248.271 611.849 246.648 611.812 245.052 cv
612.114 245.045 li
612.151 246.643 612.17 248.268 612.172 249.874 cv
188.183 245.325 mo
187.88 245.317 li
187.916 243.694 187.97 242.071 188.041 240.491 cv
188.344 240.504 li
188.273 242.082 188.218 243.703 188.183 245.325 cv
611.646 240.233 mo
611.571 238.621 611.48 237 611.372 235.417 cv
611.673 235.398 li
611.781 236.983 611.873 238.605 611.948 240.219 cv
611.646 240.233 li
188.612 235.69 mo
188.31 235.669 li
188.417 234.083 188.544 232.463 188.689 230.855 cv
188.989 230.881 li
188.845 232.488 188.718 234.106 188.612 235.69 cv
610.988 230.611 mo
610.842 229.013 610.676 227.399 610.496 225.814 cv
610.796 225.78 li
610.977 227.367 611.143 228.984 611.289 230.583 cv
610.988 230.611 li
189.473 226.084 mo
189.173 226.05 li
189.353 224.456 189.553 222.843 189.768 221.258 cv
190.068 221.298 li
189.854 222.882 189.653 224.493 189.473 226.084 cv
609.895 221.03 mo
609.678 219.442 609.439 217.836 609.185 216.259 cv
609.484 216.211 li
609.737 217.791 609.977 219.398 610.195 220.988 cv
609.895 221.03 li
190.772 216.528 mo
190.475 216.481 li
190.728 214.879 191.002 213.278 191.287 211.72 cv
191.584 211.774 li
191.3 213.329 191.026 214.928 190.772 216.528 cv
608.368 211.506 mo
608.079 209.938 607.767 208.346 607.441 206.774 cv
607.737 206.712 li
608.064 208.287 608.376 209.881 608.665 211.452 cv
608.368 211.506 li
192.504 207.04 mo
192.209 206.98 li
192.529 205.426 192.876 203.839 193.238 202.261 cv
193.534 202.328 li
193.171 203.905 192.825 205.49 192.504 207.04 cv
606.407 202.064 mo
606.048 200.513 605.663 198.937 605.264 197.379 cv
605.557 197.304 li
605.957 198.864 606.342 200.443 606.701 201.995 cv
606.407 202.064 li
194.67 197.642 mo
194.377 197.568 li
194.777 195.996 195.196 194.427 195.622 192.902 cv
195.913 192.983 li
195.488 194.506 195.07 196.074 194.67 197.642 cv
604.015 192.722 mo
603.58 191.173 603.124 189.616 602.658 188.093 cv
602.948 188.005 li
603.413 189.53 603.87 191.089 604.305 192.64 cv
604.015 192.722 li
197.262 188.353 mo
196.974 188.265 li
197.443 186.722 197.936 185.167 198.437 183.644 cv
198.725 183.738 li
198.224 185.259 197.731 186.812 197.262 188.353 cv
601.197 183.497 mo
600.691 181.969 600.164 180.435 599.63 178.937 cv
599.915 178.835 li
600.45 180.335 600.978 181.872 601.484 183.403 cv
601.197 183.497 li
200.292 179.159 mo
200.007 179.058 li
200.552 177.525 201.115 175.995 201.681 174.511 cv
201.964 174.618 li
201.399 176.1 200.835 177.627 200.292 179.159 cv
597.96 174.413 mo
597.39 172.925 596.793 171.416 596.185 169.929 cv
596.465 169.815 li
597.074 171.304 597.672 172.815 598.242 174.305 cv
597.96 174.413 li
203.738 170.12 mo
203.458 170.005 li
204.051 168.548 204.684 167.046 205.339 165.542 cv
205.615 165.663 li
204.963 167.164 204.331 168.664 203.738 170.12 cv
594.316 165.502 mo
593.681 164.046 593.019 162.572 592.345 161.12 cv
592.62 160.992 li
593.294 162.447 593.958 163.924 594.593 165.382 cv
594.316 165.502 li
207.593 161.25 mo
207.319 161.123 li
208.001 159.65 208.701 158.18 209.401 156.753 cv
209.673 156.886 li
208.974 158.312 208.275 159.78 207.593 161.25 cv
590.274 156.78 mo
589.575 155.357 588.845 153.912 588.105 152.488 cv
588.373 152.348 li
589.114 153.775 589.845 155.221 590.546 156.647 cv
590.274 156.78 li
211.852 152.573 mo
211.583 152.433 li
212.328 150.999 213.096 149.564 213.864 148.164 cv
214.128 148.31 li
213.361 149.707 212.595 151.142 211.852 152.573 cv
585.838 148.246 mo
585.073 146.852 584.277 145.442 583.474 144.054 cv
583.736 143.903 li
584.54 145.291 585.337 146.703 586.103 148.1 cv
585.838 148.246 li
216.501 144.102 mo
216.239 143.95 li
217.045 142.557 217.876 141.157 218.71 139.791 cv
218.967 139.949 li
218.136 141.313 217.306 142.709 216.501 144.102 cv
581.016 139.917 mo
580.178 138.543 579.319 137.17 578.464 135.836 cv
578.717 135.673 li
579.574 137.009 580.435 138.384 581.274 139.76 cv
581.016 139.917 li
221.529 135.855 mo
221.273 135.692 li
222.127 134.361 223.021 133.001 223.93 131.651 cv
224.18 131.82 li
223.272 133.168 222.381 134.526 221.529 135.855 cv
575.818 131.815 mo
574.925 130.49 574.005 129.157 573.082 127.853 cv
573.329 127.678 li
574.253 128.983 575.174 130.319 576.068 131.646 cv
575.818 131.815 li
226.923 127.847 mo
226.677 127.672 li
227.615 126.347 228.569 125.031 229.513 123.757 cv
229.756 123.938 li
228.813 125.208 227.859 126.524 226.923 127.847 cv
570.255 123.953 mo
569.31 122.679 568.329 121.388 567.341 120.118 cv
567.58 119.932 li
568.57 121.204 569.551 122.496 570.498 123.773 cv
570.255 123.953 li
232.676 120.096 mo
232.438 119.91 li
233.43 118.634 234.443 117.363 235.449 116.13 cv
235.683 116.322 li
234.679 117.552 233.667 118.822 232.676 120.096 cv
564.341 116.348 mo
563.339 115.117 562.3 113.871 561.255 112.647 cv
561.485 112.451 li
562.532 113.677 563.572 114.924 564.576 116.157 cv
564.341 116.348 li
238.772 112.615 mo
238.542 112.419 li
239.595 111.185 240.665 109.96 241.721 108.78 cv
241.945 108.982 li
240.892 110.159 239.823 111.382 238.772 112.615 cv
558.086 109.016 mo
557.02 107.823 555.926 106.625 554.835 105.457 cv
555.055 105.25 li
556.149 106.42 557.244 107.62 558.311 108.815 cv
558.086 109.016 li
245.199 105.421 mo
244.977 105.215 li
246.059 104.057 247.181 102.883 248.315 101.725 cv
248.532 101.936 li
247.4 103.093 246.279 104.266 245.199 105.421 cv
551.505 101.972 mo
550.386 100.828 549.238 99.681 548.094 98.5619 cv
548.306 98.346 li
549.451 99.4671 550.6 100.615 551.72 101.761 cv
551.505 101.972 li
251.941 98.5277 mo
251.731 98.3118 li
252.871 97.1967 254.046 96.0735 255.221 94.9768 cv
255.427 95.1975 li
254.254 96.2932 253.082 97.4144 251.941 98.5277 cv
544.608 95.2308 mo
543.429 94.1303 542.231 93.0354 541.046 91.978 cv
541.248 91.7523 li
542.434 92.8119 543.634 93.9076 544.815 95.0101 cv
544.608 95.2308 li
258.989 91.9475 mo
258.788 91.722 li
259.977 90.6606 261.201 89.5931 262.424 88.5491 cv
262.62 88.7786 li
261.399 89.8206 260.176 90.8871 258.989 91.9475 cv
537.411 88.8071 mo
536.184 87.7601 534.937 86.72 533.705 85.7171 cv
533.896 85.4828 li
535.129 86.4877 536.378 87.5287 537.607 88.5766 cv
537.411 88.8071 li
266.323 85.6947 mo
266.132 85.4603 li
267.381 84.4438 268.651 83.433 269.908 82.4565 cv
270.094 82.6956 li
268.839 83.6703 267.57 84.6801 266.323 85.6947 cv
529.93 82.7122 mo
528.671 81.7337 527.378 80.7523 526.086 79.7932 cv
526.266 79.5511 li
527.56 80.51 528.855 81.4936 530.115 82.4739 cv
529.93 82.7122 li
273.929 79.7836 mo
273.75 79.5403 li
275.043 78.5814 276.358 77.6303 277.657 76.7113 cv
277.832 76.9584 li
276.534 77.8752 275.221 78.8255 273.929 79.7836 cv
522.177 76.9622 mo
520.854 76.0267 519.517 75.1039 518.203 74.2201 cv
518.372 73.9691 li
519.687 74.8547 521.026 75.7786 522.352 76.7153 cv
522.177 76.9622 li
281.793 74.2231 mo
281.625 73.9719 li
282.943 73.0843 284.298 72.1937 285.654 71.3246 cv
285.817 71.5795 li
284.464 72.4467 283.11 73.3363 281.793 74.2231 cv
514.168 71.5687 mo
512.815 70.7015 511.437 69.8401 510.071 69.0092 cv
510.229 68.7503 li
511.596 69.5834 512.976 70.4456 514.33 71.3137 cv
514.168 71.5687 li
289.898 69.0286 mo
289.74 68.7699 li
291.111 67.934 292.506 67.1068 293.884 66.308 cv
294.035 66.5707 li
292.659 67.3666 291.267 68.1937 289.898 69.0286 cv
505.919 66.5443 mo
504.536 65.7436 503.119 64.9457 501.709 64.1723 cv
501.855 63.9075 li
503.267 64.6819 504.685 65.4808 506.07 66.2825 cv
505.919 66.5443 li
298.227 64.2073 mo
298.081 63.9437 li
299.475 63.1781 300.905 62.4155 302.331 61.6743 cv
302.47 61.9418 li
301.047 62.682 299.618 63.4447 298.227 64.2073 cv
497.446 61.8988 mo
496.027 61.1624 494.575 60.43 493.131 59.722 cv
493.264 59.4505 li
494.709 60.1596 496.164 60.893 497.585 61.6312 cv
497.446 61.8988 li
306.761 59.7747 mo
306.629 59.5023 li
308.054 58.8032 309.516 58.1058 310.974 57.4309 cv
311.101 57.7045 li
309.644 58.3792 308.185 59.0755 306.761 59.7747 cv
488.766 57.643 mo
487.296 56.9653 485.812 56.2992 484.354 55.6663 cv
484.474 55.3879 li
485.935 56.0228 487.422 56.6897 488.893 57.3694 cv
488.766 57.643 li
315.487 55.7366 mo
315.366 55.4592 li
316.836 54.8188 318.328 54.1897 319.801 53.5883 cv
319.914 53.8675 li
318.444 54.4681 316.955 55.0969 315.487 55.7366 cv
479.896 53.7904 mo
478.419 53.1878 476.905 52.5911 475.396 52.016 cv
475.504 51.7338 li
477.014 52.309 478.531 52.9066 480.011 53.5102 cv
479.896 53.7904 li
324.399 52.0951 mo
324.29 51.8129 li
325.775 51.2445 327.299 50.682 328.821 50.14 cv
328.923 50.4252 li
327.404 50.9661 325.882 51.5287 324.399 52.0951 cv
470.854 50.3461 mo
469.339 49.809 467.798 49.2817 466.275 48.7806 cv
466.369 48.4936 li
467.894 48.9955 469.437 49.5228 470.956 50.0619 cv
470.854 50.3461 li
333.484 48.8597 mo
333.389 48.5727 li
334.9 48.0746 336.447 47.5813 337.992 47.1107 cv
338.079 47.3997 li
336.539 47.8705 334.992 48.3616 333.484 48.8597 cv
461.661 47.3216 mo
460.129 46.8558 458.571 46.4027 457.03 45.973 cv
457.112 45.681 li
458.654 46.1118 460.215 46.5668 461.748 47.0326 cv
461.661 47.3216 li
342.709 46.0453 mo
342.626 45.7543 li
344.159 45.3245 345.729 44.9047 347.291 44.5042 cv
347.367 44.7972 li
345.806 45.1967 344.239 45.6165 342.709 46.0453 cv
452.37 44.7309 mo
450.835 44.3402 449.257 43.9584 447.684 43.5961 cv
447.751 43.3021 li
449.327 43.6644 450.906 44.0462 452.445 44.4379 cv
452.37 44.7309 li
352.052 43.6566 mo
351.983 43.3626 li
353.542 43.0023 355.129 42.6537 356.701 42.3274 cv
356.763 42.6234 li
355.192 42.9495 353.608 43.2971 352.052 43.6566 cv
442.971 42.5698 mo
441.415 42.2483 439.822 41.9389 438.238 41.6507 cv
438.292 41.3529 li
439.879 41.6419 441.474 41.9515 443.033 42.2737 cv
442.971 42.5698 li
361.495 41.6986 mo
361.441 41.4018 li
363.023 41.1116 364.624 40.8362 366.201 40.5833 cv
366.249 40.8823 li
364.675 41.1342 363.075 41.4086 361.495 41.6986 cv
433.484 40.8402 mo
431.9 40.5883 430.294 40.3519 428.713 40.1381 cv
428.754 39.8382 li
430.337 40.0531 431.944 40.2895 433.531 40.5414 cv
433.484 40.8402 li
371.018 40.1741 mo
370.977 39.8743 li
372.568 39.6566 374.179 39.4545 375.769 39.2739 cv
375.802 39.5745 li
374.216 39.7551 372.607 39.9564 371.018 40.1741 cv
423.927 39.5442 mo
422.332 39.3656 420.718 39.2026 419.129 39.0608 cv
419.156 38.7592 li
420.747 38.9018 422.363 39.0648 423.961 39.2444 cv
423.927 39.5442 li
380.6 39.0844 mo
380.572 38.7836 li
382.174 38.638 383.794 38.509 385.387 38.4007 cv
385.408 38.7025 li
383.817 38.8098 382.2 38.9388 380.6 39.0844 cv
414.321 38.6849 mo
412.721 38.5785 411.101 38.4896 409.507 38.4193 cv
409.52 38.1165 li
411.117 38.1868 412.739 38.2767 414.342 38.3841 cv
414.321 38.6849 li
390.222 38.4291 mo
390.208 38.1273 li
391.796 38.055 393.42 37.9993 395.035 37.9623 cv
395.043 38.2641 li
393.43 38.3022 391.807 38.3578 390.222 38.4291 cv
404.687 38.2591 mo
403.127 38.2259 401.55 38.2084 400 38.2084 cv
399.865 38.2084 li
399.865 37.9056 li
400.002 37.9066 li
401.552 37.9066 403.132 37.9232 404.694 37.9573 cv
404.687 38.2591 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
400 360.294 mo
379.563 360.294 359.974 354.768 342.94 344.425 cv
342.777 344.326 342.614 344.226 342.451 344.126 cv
341.521 343.555 340.6 342.97 339.686 342.37 cv
339.527 342.266 339.367 342.16 339.209 342.055 cv
336.172 340.039 333.225 337.865 330.377 335.535 cv
330.23 335.415 330.083 335.294 329.936 335.173 cv
329.094 334.477 328.261 333.768 327.437 333.045 cv
327.294 332.919 327.151 332.794 327.008 332.667 cv
325.322 331.172 323.672 329.62 322.065 328.013 cv
321.07 327.018 320.098 326.009 319.146 324.984 cv
319.018 324.845 318.887 324.703 318.758 324.563 cv
316.183 321.76 313.767 318.844 311.516 315.828 cv
311.469 315.765 311.423 315.704 311.376 315.64 cv
301.395 302.207 294.68 286.796 291.641 270.393 cv
291.606 270.206 291.572 270.019 291.538 269.831 cv
291.343 268.747 291.164 267.657 291.001 266.565 cv
290.973 266.376 290.945 266.187 290.918 265.999 cv
290.761 264.907 290.621 263.814 290.496 262.715 cv
290.475 262.527 290.454 262.337 290.433 262.149 cv
290.003 258.168 289.784 254.139 289.784 250.078 cv
289.784 249.117 289.797 248.159 289.821 247.202 cv
289.826 247.012 289.831 246.82 289.837 246.631 cv
289.99 241.597 290.48 236.621 291.295 231.729 cv
291.326 231.541 291.358 231.355 291.39 231.167 cv
291.578 230.074 291.782 228.988 292.002 227.903 cv
292.04 227.717 292.079 227.53 292.117 227.344 cv
293.409 221.153 295.228 215.109 297.552 209.272 cv
297.623 209.095 297.693 208.919 297.764 208.743 cv
298.18 207.714 298.61 206.696 299.057 205.68 cv
299.134 205.506 299.211 205.331 299.289 205.158 cv
304.453 193.591 311.649 182.904 320.689 173.544 cv
320.821 173.407 320.954 173.27 321.087 173.134 cv
321.411 172.802 321.736 172.473 322.065 172.144 cv
324.369 169.84 326.757 167.651 329.222 165.579 cv
329.367 165.457 329.514 165.334 329.66 165.213 cv
330.513 164.503 331.372 163.81 332.243 163.129 cv
332.393 163.011 332.543 162.894 332.694 162.777 cv
337.704 158.898 343.005 155.482 348.54 152.553 cv
348.708 152.464 348.876 152.375 349.045 152.287 cv
359.197 146.982 370.134 143.305 381.524 141.394 cv
381.712 141.362 381.899 141.332 382.087 141.301 cv
383.174 141.124 384.263 140.964 385.358 140.82 cv
385.547 140.795 385.736 140.77 385.926 140.746 cv
387.017 140.608 388.114 140.486 389.213 140.38 cv
389.401 140.361 389.59 140.344 389.779 140.326 cv
393.157 140.018 396.566 139.862 400 139.862 cv
408.118 139.862 416.105 140.734 423.848 142.433 cv
424.035 142.474 424.218 142.515 424.405 142.557 cv
426.735 143.081 429.047 143.682 431.331 144.355 cv
431.514 144.409 431.695 144.463 431.878 144.518 cv
432.929 144.834 433.976 145.166 435.016 145.513 cv
435.196 145.573 435.375 145.633 435.555 145.694 cv
442.678 148.113 449.531 151.264 456.023 155.109 cv
456.187 155.206 456.35 155.304 456.514 155.402 cv
457.45 155.963 458.381 156.54 459.301 157.129 cv
459.462 157.233 459.621 157.335 459.781 157.439 cv
466.012 161.478 471.877 166.177 477.287 171.502 cv
477.423 171.635 477.558 171.769 477.693 171.903 cv
477.773 171.983 477.855 172.064 477.935 172.144 cv
478.626 172.835 479.306 173.533 479.977 174.239 cv
480.107 174.377 480.239 174.516 480.369 174.654 cv
481.116 175.449 481.849 176.253 482.57 177.066 cv
482.697 177.208 482.822 177.35 482.948 177.493 cv
486.217 181.219 489.212 185.13 491.921 189.203 cv
492.026 189.361 492.131 189.52 492.235 189.678 cv
496.356 195.943 499.805 202.584 502.543 209.511 cv
502.613 209.688 502.682 209.864 502.751 210.041 cv
507.653 222.633 510.217 236.16 510.217 250.078 cv
510.217 261.848 508.385 273.333 504.855 284.214 cv
504.796 284.395 504.737 284.576 504.677 284.757 cv
502.352 291.8 499.312 298.588 495.597 305.027 cv
495.502 305.192 495.406 305.356 495.31 305.521 cv
494.767 306.451 494.211 307.372 493.64 308.287 cv
493.54 308.447 493.437 308.611 493.336 308.771 cv
488.985 315.66 483.837 322.111 477.935 328.013 cv
462.003 343.944 442.054 354.398 420.371 358.427 cv
420.184 358.462 419.997 358.496 419.81 358.53 cv
413.339 359.698 406.715 360.294 400 360.294 cv
330.608 335.26 mo
349.544 350.714 373.71 359.994 400 359.994 cv
406.744 359.994 413.343 359.384 419.755 358.215 cv
419.941 358.181 420.13 358.147 420.316 358.112 cv
450.86 352.38 476.996 333.968 493.023 308.576 cv
493.126 308.412 493.225 308.255 493.327 308.091 cv
493.893 307.183 494.45 306.262 494.99 305.337 cv
495.086 305.172 495.182 305.007 495.277 304.842 cv
498.948 298.481 501.997 291.728 504.347 284.65 cv
504.407 284.47 504.467 284.287 504.526 284.107 cv
508.023 273.389 509.916 261.949 509.916 250.078 cv
509.916 236.01 507.259 222.55 502.421 210.175 cv
502.352 209.999 502.282 209.82 502.212 209.645 cv
499.448 202.682 495.992 196.067 491.93 189.884 cv
491.824 189.723 491.723 189.569 491.616 189.408 cv
488.898 185.318 485.909 181.413 482.684 177.731 cv
482.557 177.586 482.434 177.447 482.307 177.303 cv
481.589 176.492 480.856 175.688 480.115 174.899 cv
479.983 174.759 479.856 174.624 479.723 174.484 cv
478.978 173.699 478.216 172.919 477.449 172.156 cv
477.312 172.02 477.18 171.89 477.043 171.755 cv
471.723 166.521 465.876 161.824 459.586 157.751 cv
459.427 157.648 459.266 157.544 459.106 157.442 cv
458.191 156.856 457.263 156.281 456.329 155.722 cv
456.166 155.624 456.002 155.526 455.838 155.429 cv
449.427 151.632 442.606 148.471 435.448 146.026 cv
435.268 145.965 435.088 145.904 434.908 145.843 cv
433.873 145.496 432.832 145.164 431.784 144.846 cv
431.602 144.791 431.419 144.737 431.237 144.683 cv
428.967 144.009 426.665 143.406 424.336 142.877 cv
424.153 142.836 423.964 142.794 423.78 142.753 cv
416.119 141.056 408.164 140.163 400 140.163 cv
396.564 140.163 393.168 140.321 389.811 140.631 cv
389.623 140.648 389.432 140.666 389.245 140.685 cv
388.148 140.792 387.056 140.915 385.969 141.054 cv
385.779 141.078 385.591 141.103 385.401 141.128 cv
372.506 142.847 360.307 146.811 349.218 152.612 cv
349.049 152.701 348.881 152.789 348.713 152.878 cv
343.147 155.827 337.866 159.238 332.917 163.063 cv
332.767 163.178 332.614 163.297 332.465 163.413 cv
331.597 164.091 330.737 164.784 329.89 165.487 cv
329.742 165.61 329.599 165.729 329.452 165.853 cv
326.623 168.226 323.917 170.737 321.34 173.379 cv
321.208 173.514 321.074 173.653 320.943 173.789 cv
312.127 182.921 304.874 193.573 299.62 205.305 cv
299.542 205.48 299.465 205.653 299.388 205.828 cv
298.942 206.837 298.513 207.852 298.097 208.877 cv
298.026 209.052 297.954 209.231 297.884 209.406 cv
295.574 215.183 293.741 221.203 292.435 227.412 cv
292.395 227.6 292.357 227.782 292.319 227.97 cv
292.098 229.046 291.892 230.136 291.703 231.222 cv
291.67 231.413 291.639 231.593 291.607 231.784 cv
290.791 236.635 290.293 241.599 290.138 246.641 cv
290.132 246.832 290.126 247.021 290.122 247.212 cv
290.097 248.165 290.085 249.12 290.085 250.078 cv
290.085 254.148 290.306 258.161 290.74 262.117 cv
290.76 262.304 290.781 262.496 290.803 262.683 cv
290.928 263.778 291.07 264.87 291.228 265.955 cv
291.256 266.144 291.284 266.333 291.312 266.521 cv
291.476 267.612 291.656 268.696 291.853 269.776 cv
291.886 269.962 291.921 270.152 291.956 270.338 cv
295.805 290.915 305.407 309.489 319.022 324.326 cv
319.152 324.468 319.279 324.606 319.41 324.747 cv
321.893 327.425 324.51 329.982 327.246 332.403 cv
327.388 332.528 327.533 332.656 327.675 332.78 cv
328.495 333.498 329.326 334.205 330.167 334.898 cv
330.316 335.021 330.459 335.138 330.608 335.26 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
610.668 376.06 mo
610.148 376.06 609.621 375.926 609.136 375.643 cv
608.131 375.056 607.567 373.979 607.567 372.871 cv
607.567 372.336 607.697 371.795 607.973 371.299 cv
628.367 334.53 639.146 292.612 639.146 250.075 cv
639.146 207.537 628.367 165.617 607.973 128.851 cv
607.126 127.319 607.646 125.375 609.136 124.505 cv
609.621 124.223 610.148 124.088 610.668 124.088 cv
611.748 124.088 612.797 124.667 613.369 125.699 cv
634.294 163.424 645.355 206.433 645.355 250.075 cv
645.355 293.716 634.294 336.724 613.369 374.45 cv
612.797 375.481 611.748 376.06 610.668 376.06 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
189.332 376.06 mo
188.252 376.06 187.203 375.481 186.631 374.45 cv
165.706 336.724 154.645 293.716 154.645 250.075 cv
154.645 206.433 165.706 163.424 186.631 125.699 cv
187.203 124.667 188.252 124.088 189.332 124.088 cv
189.852 124.088 190.38 124.223 190.864 124.505 cv
192.354 125.375 192.874 127.319 192.027 128.851 cv
171.633 165.617 160.854 207.537 160.854 250.075 cv
160.854 292.612 171.633 334.53 192.027 371.299 cv
192.302 371.795 192.433 372.336 192.433 372.871 cv
192.433 373.979 191.869 375.056 190.864 375.643 cv
190.38 375.926 189.852 376.06 189.332 376.06 cv
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
577.445 180.066 mo
558.024 130.809 519.266 92.0511 470.008 72.6293 cv
471.331 68.9964 li
521.657 88.8119 561.262 128.416 581.078 178.743 cv
577.445 180.066 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
328.669 431.153 mo
278.342 411.337 238.738 371.733 218.922 321.407 cv
222.555 320.083 li
241.976 369.34 280.734 408.098 329.992 427.52 cv
328.669 431.153 li
level3{
gsave
clp
[333.542 0 0 333.542 400 250 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
np
376.76 229.094 mo
380.85 229.094 382.032 228.257 382.032 224.463 cv
382.032 220.325 380.801 219.289 376.563 219.24 cv
371.045 219.24 li
371.045 229.094 li
376.76 229.094 li
cp
376.514 214.264 mo
380.16 214.264 381.293 213.377 381.293 209.879 cv
381.293 206.43 380.061 205.641 376.12 205.641 cv
371.045 205.592 li
371.045 214.264 li
376.514 214.264 li
cp
382.526 216.826 mo
387.748 217.269 389.57 220.472 389.57 225.892 cv
389.57 232.888 386.171 234.761 378.042 234.761 cv
371.538 234.761 367.99 234.711 363.703 234.367 cv
363.703 200.369 li
367.547 200.025 370.749 199.975 376.465 199.975 cv
385.334 199.975 388.487 201.848 388.487 208.844 cv
388.487 213.722 386.762 216.235 382.526 216.629 cv
382.526 216.826 li
cp
1 1 1 rgb
f
395.087 234.367 mo
395.087 200.369 li
402.576 200.369 li
402.576 234.367 li
395.087 234.367 li
cp
f
435.193 234.367 mo
429.675 234.367 li
428.986 230.967 li
427.211 232.789 423.862 235.007 419.18 235.007 cv
411.543 235.007 408.341 229.735 408.341 217.269 cv
408.341 203.819 412.381 199.729 423.565 199.729 cv
427.556 199.729 430.808 200.025 434.01 200.911 cv
433.42 206.43 li
430.069 206.282 426.768 206.184 423.811 206.184 cv
418.145 206.184 416.273 207.661 416.273 217.516 cv
416.273 225.991 417.604 228.602 421.841 228.602 cv
424.256 228.602 426.226 227.814 427.95 226.877 cv
427.95 214.756 li
435.193 214.756 li
435.193 234.367 li
cp
f
349.982 271.485 mo
351.706 271.485 353.628 271.534 355.697 271.534 cv
360.772 271.534 362.299 268.923 362.299 260.005 cv
362.299 251.086 360.772 248.426 355.697 248.426 cv
349.982 248.475 li
349.982 271.485 li
cp
342.492 243.006 mo
346.385 242.76 350.524 242.563 355.697 242.563 cv
366.389 242.563 370.183 246.554 370.183 260.005 cv
370.183 273.455 366.389 277.447 355.697 277.447 cv
350.573 277.447 346.385 277.249 342.492 277.003 cv
342.492 243.006 li
cp
f
389.594 251.874 mo
389.348 250.84 389.052 249.706 388.905 248.672 cv
387.575 248.672 li
387.329 249.706 387.082 250.84 386.836 251.874 cv
383.978 262.271 li
392.453 262.271 li
389.594 251.874 li
cp
382.402 268.085 mo
379.938 277.003 li
372.251 277.003 li
382.056 244.977 li
382.352 243.745 383.436 243.006 384.668 243.006 cv
391.762 243.006 li
393.044 243.006 394.078 243.745 394.375 244.977 cv
404.179 277.003 li
396.542 277.003 li
394.078 268.085 li
382.402 268.085 li
cp
f
419.944 249.116 mo
419.944 277.003 li
412.405 277.003 li
412.405 249.116 li
402.256 249.116 li
402.256 243.006 li
430.094 243.006 li
430.094 249.116 li
419.944 249.116 li
cp
f
445.515 251.874 mo
445.269 250.84 444.972 249.706 444.825 248.672 cv
443.495 248.672 li
443.249 249.706 443.002 250.84 442.756 251.874 cv
439.898 262.271 li
448.373 262.271 li
445.515 251.874 li
cp
438.321 268.085 mo
435.858 277.003 li
428.171 277.003 li
437.976 244.977 li
438.272 243.745 439.356 243.006 440.588 243.006 cv
447.683 243.006 li
448.964 243.006 449.999 243.745 450.295 244.977 cv
460.099 277.003 li
452.462 277.003 li
449.999 268.085 li
438.321 268.085 li
cp
f
346.013 299.721 mo
345.942 299.916 345.765 300.058 345.551 300.058 cv
344.255 300.058 li
344.041 300.058 343.845 299.916 343.792 299.721 cv
339.901 287.798 li
341.11 287.798 li
344.272 297.802 li
344.414 298.245 344.539 298.69 344.663 299.134 cv
345.143 299.134 li
345.267 298.69 345.392 298.245 345.534 297.802 cv
348.696 287.798 li
349.905 287.798 li
346.013 299.721 li
cp
f
351.91 300.058 mo
351.91 287.798 li
353.065 287.798 li
353.065 300.058 li
351.91 300.058 li
cp
f
358.163 294.106 mo
356.404 293.75 355.764 292.702 355.764 290.784 cv
355.764 287.905 356.99 287.567 359.638 287.603 cv
360.775 287.603 362.001 287.673 363.173 287.887 cv
363.085 288.741 li
362.036 288.687 360.81 288.633 359.691 288.633 cv
357.737 288.633 356.937 288.704 356.937 290.819 cv
356.937 292.329 357.434 292.845 358.625 293.076 cv
361.183 293.609 li
363.049 293.982 363.671 294.994 363.671 296.967 cv
363.671 299.827 362.391 300.253 359.691 300.253 cv
358.82 300.253 357.559 300.236 355.959 299.988 cv
356.03 299.117 li
357.861 299.205 358.607 299.223 359.727 299.223 cv
361.788 299.205 362.481 298.904 362.481 296.949 cv
362.481 295.35 361.983 294.888 360.775 294.657 cv
358.163 294.106 li
cp
f
374.933 295.421 mo
374.933 298.939 373.778 300.271 370.615 300.271 cv
367.382 300.271 366.209 298.939 366.209 295.421 cv
366.209 287.798 li
367.363 287.798 li
367.363 295.421 li
367.363 298.245 368.216 299.242 370.58 299.242 cv
372.907 299.242 373.76 298.245 373.76 295.421 cv
373.76 287.798 li
374.933 287.798 li
374.933 295.421 li
cp
f
382.481 289.717 mo
382.375 289.38 382.25 289.042 382.161 288.722 cv
381.664 288.722 li
381.326 289.717 li
379.568 294.994 li
384.24 294.994 li
382.481 289.717 li
cp
379.23 296.007 mo
377.879 300.058 li
376.671 300.058 li
380.775 288.136 li
380.846 287.922 381.024 287.798 381.237 287.798 cv
382.57 287.798 li
382.783 287.798 382.961 287.922 383.032 288.136 cv
387.136 300.058 li
385.928 300.058 li
384.578 296.007 li
379.23 296.007 li
cp
f
390.136 297.785 mo
390.136 298.637 390.58 299.081 391.416 299.081 cv
395.982 299.081 li
396.017 299.97 li
394.454 300.058 392.819 300.076 391.22 300.076 cv
389.674 300.076 388.964 299.17 388.964 297.944 cv
388.964 287.798 li
390.136 287.798 li
390.136 297.785 li
cp
f
398.093 300.058 mo
398.093 287.798 li
399.249 287.798 li
399.249 300.058 li
398.093 300.058 li
cp
f
404.346 294.106 mo
402.587 293.75 401.948 292.702 401.948 290.784 cv
401.948 287.905 403.174 287.567 405.821 287.603 cv
406.958 287.603 408.184 287.673 409.358 287.887 cv
409.269 288.741 li
408.22 288.687 406.994 288.633 405.875 288.633 cv
403.921 288.633 403.12 288.704 403.12 290.819 cv
403.12 292.329 403.618 292.845 404.809 293.076 cv
407.367 293.609 li
409.233 293.982 409.855 294.994 409.855 296.967 cv
409.855 299.827 408.576 300.253 405.875 300.253 cv
405.004 300.253 403.743 300.236 402.143 299.988 cv
402.215 299.117 li
404.045 299.205 404.79 299.223 405.91 299.223 cv
407.971 299.205 408.665 298.904 408.665 296.949 cv
408.665 295.35 408.167 294.888 406.958 294.657 cv
404.346 294.106 li
cp
f
416.87 289.717 mo
416.763 289.38 416.638 289.042 416.55 288.722 cv
416.053 288.722 li
415.715 289.717 li
413.956 294.994 li
418.629 294.994 li
416.87 289.717 li
cp
413.618 296.007 mo
412.268 300.058 li
411.06 300.058 li
415.165 288.136 li
415.235 287.922 415.413 287.798 415.626 287.798 cv
416.959 287.798 li
417.173 287.798 417.35 287.922 417.421 288.136 cv
421.525 300.058 li
420.317 300.058 li
418.966 296.007 li
413.618 296.007 li
cp
f
426.356 288.829 mo
426.356 300.058 li
425.183 300.058 li
425.183 288.829 li
421.114 288.829 li
421.114 287.798 li
430.443 287.798 li
430.443 288.829 li
426.356 288.829 li
cp
f
432.537 300.058 mo
432.537 287.798 li
433.692 287.798 li
433.692 300.058 li
432.537 300.058 li
cp
f
437.74 293.928 mo
437.74 297.909 438.63 299.242 441.259 299.242 cv
443.889 299.242 444.759 297.909 444.759 293.928 cv
444.759 289.948 443.889 288.616 441.259 288.616 cv
438.63 288.616 437.74 289.948 437.74 293.928 cv
cp
445.986 293.928 mo
445.986 298.672 444.759 300.271 441.259 300.271 cv
437.759 300.271 436.533 298.672 436.533 293.928 cv
436.533 289.185 437.759 287.584 441.259 287.584 cv
444.759 287.584 445.986 289.185 445.986 293.928 cv
cp
f
457.94 299.561 mo
457.94 299.899 457.78 300.058 457.461 300.058 cv
456.216 300.058 li
455.932 300.058 455.772 299.935 455.648 299.668 cv
450.975 290.357 li
450.762 289.912 450.442 289.345 450.282 288.882 cv
449.945 288.882 li
449.98 289.363 449.98 289.859 449.98 290.357 cv
449.98 300.058 li
448.825 300.058 li
448.825 288.296 li
448.825 287.958 448.986 287.798 449.304 287.798 cv
450.513 287.798 li
450.797 287.798 450.957 287.922 451.082 288.189 cv
455.648 297.286 li
455.897 297.785 456.199 298.388 456.466 298.939 cv
456.839 298.939 li
456.803 298.352 456.785 297.767 456.785 297.18 cv
456.785 287.798 li
457.94 287.798 li
457.94 299.561 li
cp
f
400 413.555 mo
408.221 413.555 416.943 416.708 425.378 419.758 cv
436.649 423.833 447.296 427.684 456.735 424.617 cv
466.677 421.389 473.444 411.322 479.987 401.587 cv
484.84 394.368 489.858 386.903 496.133 382.335 cv
502.513 377.693 511.244 375.184 519.688 372.758 cv
530.881 369.542 542.456 366.217 548.507 357.903 cv
554.479 349.696 554.088 337.727 553.709 326.152 cv
553.42 317.314 553.121 308.175 555.594 300.558 cv
557.938 293.339 563.416 286.36 568.713 279.611 cv
576.01 270.312 583.555 260.698 583.555 250 cv
583.555 239.303 576.01 229.688 568.713 220.389 cv
563.416 213.64 557.938 206.661 555.594 199.442 cv
553.121 191.825 553.42 182.686 553.709 173.848 cv
554.088 162.274 554.479 150.305 548.507 142.098 cv
542.455 133.784 530.881 130.457 519.687 127.242 cv
511.244 124.816 502.513 122.307 496.133 117.664 cv
489.858 113.098 484.84 105.632 479.987 98.4125 cv
473.443 88.6771 466.676 78.6107 456.735 75.3832 cv
447.292 72.3148 436.648 76.1664 425.378 80.2416 cv
416.943 83.2914 408.221 86.4447 400 86.4447 cv
391.779 86.4447 383.057 83.2914 374.622 80.2416 cv
363.352 76.1673 352.706 72.3167 343.265 75.3832 cv
333.323 78.6117 326.557 88.6781 320.013 98.4125 cv
315.16 105.632 310.142 113.097 303.866 117.664 cv
297.487 122.307 288.756 124.816 280.313 127.242 cv
269.119 130.457 257.545 133.784 251.493 142.098 cv
245.521 150.305 245.912 162.274 246.291 173.848 cv
246.58 182.686 246.879 191.825 244.405 199.442 cv
242.062 206.661 236.584 213.64 231.287 220.389 cv
223.99 229.688 216.445 239.303 216.445 250 cv
216.445 260.698 223.99 270.313 231.288 279.611 cv
236.585 286.361 242.062 293.339 244.406 300.558 cv
246.879 308.174 246.58 317.314 246.291 326.152 cv
245.912 337.727 245.521 349.696 251.493 357.903 cv
257.545 366.217 269.119 369.542 280.313 372.758 cv
288.756 375.184 297.487 377.693 303.867 382.335 cv
310.142 386.903 315.16 394.368 320.013 401.587 cv
326.557 411.323 333.323 421.389 343.265 424.617 cv
352.707 427.684 363.352 423.832 374.622 419.758 cv
383.057 416.708 391.779 413.555 400 413.555 cv
cp
449.448 426.701 mo
441.639 426.701 433.234 423.661 425.038 420.699 cv
416.684 417.678 408.046 414.555 400 414.555 cv
391.955 414.555 383.316 417.678 374.962 420.699 cv
364.029 424.651 352.724 428.739 342.957 425.568 cv
332.686 422.233 325.821 412.021 319.183 402.145 cv
314.379 394.997 309.411 387.607 303.278 383.144 cv
297.041 378.605 288.396 376.121 280.036 373.719 cv
268.68 370.456 256.938 367.083 250.685 358.491 cv
244.51 350.006 244.907 337.863 245.291 326.118 cv
245.578 317.367 245.874 308.317 243.455 300.867 cv
241.166 293.818 235.986 287.216 230.501 280.228 cv
223.099 270.796 215.445 261.043 215.445 250 cv
215.445 238.957 223.099 229.204 230.501 219.772 cv
235.985 212.784 241.165 206.183 243.454 199.133 cv
245.874 191.683 245.577 182.632 245.291 173.88 cv
244.907 162.137 244.51 149.994 250.685 141.51 cv
256.938 132.917 268.681 129.543 280.037 126.281 cv
288.397 123.878 297.041 121.395 303.278 116.856 cv
309.411 112.393 314.379 105.002 319.184 97.8539 cv
325.822 87.9789 332.686 77.7669 342.957 74.432 cv
352.722 71.2591 364.028 75.348 374.962 79.3011 cv
383.316 82.3216 391.955 85.4447 400 85.4447 cv
408.046 85.4447 416.684 82.3216 425.038 79.3011 cv
435.971 75.348 447.277 71.2611 457.043 74.432 cv
467.314 77.7669 474.178 87.9789 480.817 97.8548 cv
485.621 105.002 490.59 112.393 496.722 116.856 cv
502.959 121.395 511.603 123.878 519.963 126.281 cv
531.319 129.543 543.062 132.917 549.315 141.51 cv
555.489 149.994 555.092 162.137 554.709 173.88 cv
554.423 182.632 554.126 191.683 556.546 199.133 cv
558.835 206.183 564.015 212.784 569.499 219.772 cv
576.901 229.204 584.555 238.957 584.555 250 cv
584.555 261.043 576.902 270.796 569.499 280.228 cv
564.015 287.216 558.835 293.817 556.546 300.867 cv
554.126 308.317 554.423 317.368 554.709 326.119 cv
555.092 337.864 555.489 350.006 549.315 358.491 cv
543.062 367.083 531.32 370.456 519.964 373.719 cv
511.604 376.121 502.959 378.605 496.722 383.144 cv
490.59 387.607 485.622 394.997 480.817 402.145 cv
474.179 412.021 467.314 422.233 457.043 425.568 cv
454.598 426.362 452.056 426.701 449.448 426.701 cv
cp
.309804 1 .976471 rgb
f
374.96 403.61 mo
375.189 403.61 375.415 403.626 375.637 403.661 cv
380.229 404.383 383.895 413.265 387.777 422.668 cv
391.611 431.953 395.574 441.555 400 441.555 cv
404.426 441.555 408.389 431.953 412.222 422.668 cv
416.105 413.265 419.771 404.383 424.363 403.661 cv
429.144 402.932 435.474 410.375 442.192 418.275 cv
448.573 425.778 455.173 433.538 459.205 432.226 cv
463.357 430.878 464.146 420.584 464.91 410.628 cv
465.694 400.421 466.433 390.78 470.622 388.642 cv
474.875 386.469 483.179 391.569 491.973 396.964 cv
500.413 402.144 509.14 407.497 512.609 404.975 cv
516.105 402.431 513.686 392.443 511.347 382.782 cv
508.927 372.787 506.641 363.347 509.994 359.994 cv
513.347 356.643 522.786 358.929 532.781 361.347 cv
542.442 363.688 552.431 366.104 554.975 362.61 cv
557.5 359.141 552.144 350.413 546.965 341.974 cv
541.569 333.18 536.471 324.873 538.642 320.621 cv
540.78 316.433 550.421 315.694 560.628 314.91 cv
570.583 314.147 580.878 313.357 582.225 309.205 cv
583.536 305.169 575.778 298.572 568.274 292.192 cv
560.374 285.473 552.912 279.128 553.661 274.364 cv
554.383 269.771 563.265 266.104 572.669 262.222 cv
581.954 258.389 591.555 254.426 591.555 250 cv
591.555 245.575 581.954 241.611 572.668 237.778 cv
563.265 233.896 554.383 230.229 553.661 225.636 cv
552.912 220.872 560.374 214.528 568.274 207.81 cv
575.777 201.429 583.536 194.83 582.226 190.794 cv
580.878 186.644 570.584 185.854 560.629 185.09 cv
550.422 184.306 540.78 183.567 538.642 179.378 cv
536.471 175.126 541.569 166.821 546.965 158.028 cv
552.144 149.587 557.5 140.86 554.975 137.391 cv
552.432 133.896 542.442 136.314 532.781 138.654 cv
522.788 141.073 513.347 143.358 509.994 140.006 cv
506.642 136.654 508.927 127.213 511.347 117.219 cv
513.687 107.559 516.106 97.5697 512.61 95.0257 cv
509.141 92.5013 500.412 97.8558 491.972 103.036 cv
483.18 108.432 474.875 113.531 470.622 111.359 cv
466.433 109.22 465.694 99.5785 464.91 89.3714 cv
464.147 79.4164 463.357 69.1224 459.206 67.7748 cv
455.171 66.4701 448.572 74.223 442.191 81.7259 cv
435.473 89.6273 429.124 97.0951 424.363 96.3392 cv
419.771 95.6175 416.105 86.7357 412.223 77.3314 cv
408.389 68.0462 404.426 58.4447 400 58.4447 cv
395.574 58.4447 391.611 68.0462 387.778 77.3324 cv
383.895 86.7357 380.229 95.6175 375.637 96.3392 cv
370.877 97.0716 364.527 89.6263 357.809 81.7259 cv
351.428 74.223 344.834 66.4671 340.795 67.7748 cv
336.644 69.1224 335.854 79.4164 335.09 89.3714 cv
334.307 99.5785 333.567 109.22 329.379 111.358 cv
325.125 113.529 316.82 108.431 308.027 103.035 cv
299.587 97.8558 290.861 92.5023 287.391 95.0248 cv
283.895 97.5687 286.314 107.558 288.653 117.219 cv
291.073 127.213 293.359 136.653 290.006 140.005 cv
286.653 143.359 277.213 141.073 267.218 138.653 cv
257.558 136.313 247.57 133.895 245.025 137.39 cv
242.5 140.859 247.856 149.586 253.035 158.026 cv
258.432 166.82 263.529 175.126 261.359 179.378 cv
259.22 183.567 249.579 184.306 239.372 185.089 cv
229.417 185.853 219.122 186.643 217.775 190.794 cv
216.464 194.83 224.223 201.428 231.726 207.809 cv
239.626 214.527 247.088 220.872 246.339 225.636 cv
245.617 230.229 236.735 233.896 227.332 237.778 cv
218.046 241.611 208.445 245.575 208.445 250 cv
208.445 254.426 218.046 258.389 227.331 262.222 cv
236.735 266.104 245.617 269.771 246.339 274.364 cv
247.088 279.128 239.626 285.473 231.726 292.192 cv
224.222 298.572 216.464 305.169 217.775 309.205 cv
219.122 313.357 229.417 314.147 239.372 314.91 cv
249.579 315.694 259.22 316.433 261.358 320.621 cv
263.529 324.873 258.432 333.179 253.035 341.972 cv
247.856 350.412 242.5 359.14 245.025 362.61 cv
247.568 366.104 257.558 363.686 267.219 361.347 cv
277.213 358.926 286.653 356.64 290.006 359.993 cv
293.358 363.346 291.072 372.786 288.653 382.781 cv
286.313 392.442 283.895 402.431 287.39 404.975 cv
290.859 407.5 299.587 402.144 308.026 396.965 cv
316.819 391.568 325.125 386.47 329.378 388.642 cv
333.567 390.78 334.306 400.421 335.09 410.628 cv
335.853 420.583 336.643 430.878 340.795 432.226 cv
344.829 433.537 351.427 425.779 357.808 418.275 cv
364.213 410.743 370.279 403.61 374.96 403.61 cv
cp
400 442.555 mo
394.905 442.555 390.994 433.08 386.853 423.049 cv
383.247 414.315 379.519 405.284 375.482 404.65 cv
371.266 403.99 364.814 411.579 358.57 418.923 cv
351.673 427.034 345.152 434.702 340.486 433.177 cv
335.697 431.622 334.918 421.462 334.092 410.704 cv
333.364 401.222 332.612 391.415 328.923 389.533 cv
325.17 387.614 316.721 392.802 308.549 397.817 cv
299.427 403.413 290.815 408.702 286.801 405.784 cv
282.765 402.846 285.153 392.985 287.68 382.545 cv
289.929 373.259 292.254 363.657 289.299 360.701 cv
286.343 357.746 276.74 360.071 267.454 362.319 cv
257.013 364.846 247.153 367.234 244.216 363.198 cv
241.298 359.187 246.585 350.572 252.183 341.45 cv
257.197 333.278 262.383 324.828 260.467 321.077 cv
258.584 317.387 248.778 316.635 239.295 315.908 cv
228.538 315.082 218.378 314.303 216.823 309.514 cv
215.306 304.841 222.967 298.327 231.078 291.43 cv
238.42 285.186 246.012 278.729 245.351 274.518 cv
244.716 270.481 235.684 266.752 226.949 263.147 cv
216.919 259.006 207.445 255.095 207.445 250 cv
207.445 244.906 216.919 240.994 226.95 236.853 cv
235.685 233.247 244.716 229.519 245.351 225.481 cv
246.012 221.271 238.421 214.815 231.078 208.571 cv
222.967 201.673 215.306 195.159 216.823 190.486 cv
218.378 185.697 228.539 184.917 239.296 184.092 cv
248.778 183.365 258.585 182.613 260.468 178.923 cv
262.383 175.171 257.198 166.721 252.183 158.549 cv
246.585 149.427 241.298 140.812 244.216 136.802 cv
247.154 132.767 257.014 135.155 267.454 137.68 cv
276.74 139.93 286.343 142.254 289.299 139.298 cv
292.255 136.343 289.93 126.741 287.681 117.454 cv
285.154 107.015 282.766 97.1537 286.802 94.2162 cv
290.813 91.2962 299.428 96.5853 308.549 102.183 cv
316.721 107.198 325.175 112.385 328.924 110.467 cv
332.613 108.584 333.365 98.7777 334.093 89.2953 cv
334.918 78.5384 335.698 68.3783 340.486 66.8236 cv
345.158 65.2982 351.674 72.9681 358.571 81.0785 cv
364.815 88.4203 371.27 96.016 375.482 95.3509 cv
379.519 94.7171 383.247 85.6849 386.853 76.9505 cv
390.994 66.9193 394.905 57.4447 400 57.4447 cv
405.095 57.4447 409.006 66.9193 413.147 76.9505 cv
416.753 85.6849 420.481 94.7171 424.518 95.3509 cv
428.726 96.0257 435.185 88.4203 441.429 81.0785 cv
448.327 72.9662 454.846 65.3128 459.514 66.8236 cv
464.302 68.3783 465.082 78.5384 465.907 89.2953 cv
466.635 98.7787 467.387 108.584 471.077 110.468 cv
474.83 112.386 483.278 107.198 491.449 102.184 cv
500.572 96.5843 509.187 91.2982 513.198 94.2171 cv
517.235 97.1546 514.847 107.015 512.32 117.454 cv
510.071 126.741 507.746 136.343 510.701 139.299 cv
513.657 142.255 523.26 139.93 532.546 137.681 cv
542.986 135.154 552.846 132.766 555.784 136.803 cv
558.702 140.813 553.415 149.429 547.817 158.55 cv
542.802 166.722 537.617 175.171 539.532 178.923 cv
541.416 182.613 551.222 183.365 560.706 184.093 cv
571.462 184.918 581.622 185.698 583.177 190.486 cv
584.694 195.159 577.033 201.674 568.922 208.572 cv
561.579 214.815 553.987 221.271 554.649 225.482 cv
555.283 229.519 564.315 233.247 573.05 236.853 cv
583.081 240.994 592.555 244.906 592.555 250 cv
592.555 255.095 583.081 259.006 573.05 263.147 cv
564.316 266.752 555.283 270.481 554.649 274.518 cv
553.987 278.729 561.58 285.186 568.922 291.429 cv
577.033 298.327 584.694 304.841 583.176 309.514 cv
581.622 314.303 571.462 315.082 560.705 315.908 cv
551.221 316.635 541.416 317.387 539.532 321.077 cv
537.617 324.828 542.802 333.279 547.817 341.451 cv
553.415 350.573 558.702 359.188 555.783 363.198 cv
552.846 367.237 542.986 364.847 532.546 362.32 cv
523.259 360.071 513.656 357.746 510.701 360.702 cv
507.745 363.658 510.07 373.26 512.319 382.547 cv
514.846 392.986 517.234 402.846 513.197 405.784 cv
509.188 408.702 500.571 403.415 491.449 397.817 cv
483.279 392.803 474.829 387.622 471.077 389.533 cv
467.387 391.415 466.635 401.222 465.907 410.705 cv
465.082 421.462 464.302 431.622 459.514 433.177 cv
454.85 434.702 448.328 427.035 441.43 418.923 cv
435.186 411.58 428.728 403.993 424.518 404.65 cv
420.481 405.284 416.753 414.316 413.147 423.05 cv
409.006 433.08 405.095 442.555 400 442.555 cv
cp
1 .0941176 .290196 rgb
f
304.847 61.2875 mo
300.511 61.2875 296.466 62.2093 292.781 64.3412 cv
277.08 73.4251 276.474 99.0306 275.888 123.792 cv
275.446 142.459 274.989 161.761 268.006 173.83 cv
261.362 185.315 245.999 194.557 229.734 204.342 cv
208.054 217.385 185.636 230.871 185.636 250 cv
185.636 269.128 208.054 282.616 229.734 295.658 cv
245.999 305.443 261.362 314.685 268.006 326.169 cv
274.989 338.24 275.446 357.541 275.888 376.207 cv
276.474 400.969 277.08 426.575 292.782 435.66 cv
307.784 444.339 328.787 432.963 351.021 420.915 cv
367.854 411.795 385.261 402.364 400 402.364 cv
414.739 402.364 432.146 411.795 448.98 420.915 cv
471.213 432.962 492.216 444.341 507.218 435.66 cv
522.92 426.575 523.526 400.97 524.112 376.208 cv
524.554 357.541 525.01 338.24 531.994 326.169 cv
538.638 314.685 554.001 305.443 570.266 295.658 cv
591.946 282.616 614.364 269.128 614.364 250 cv
614.364 230.871 591.946 217.385 570.266 204.342 cv
554.001 194.557 538.638 185.315 531.994 173.83 cv
525.01 161.761 524.553 142.459 524.112 123.792 cv
523.526 99.0306 522.92 73.4251 507.218 64.3412 cv
492.212 55.6615 471.213 67.0384 448.979 79.0843 cv
432.146 88.2054 414.739 97.6361 400 97.6361 cv
385.261 97.6361 367.854 88.2054 351.021 79.0843 cv
334.246 69.9964 318.173 61.2875 304.847 61.2875 cv
cp
304.843 439.717 mo
300.345 439.718 296.136 438.755 292.281 436.525 cv
276.094 427.16 275.481 401.269 274.888 376.231 cv
274.449 357.691 273.996 338.519 267.141 326.669 cv
260.626 315.41 245.37 306.232 229.218 296.515 cv
207.3 283.328 184.636 269.694 184.636 250 cv
184.636 230.306 207.3 216.671 229.218 203.486 cv
245.37 193.769 260.625 184.591 267.141 173.33 cv
273.996 161.482 274.449 142.31 274.888 123.769 cv
275.481 98.7308 276.093 72.8412 292.28 63.4759 cv
307.77 54.5111 329.01 66.0209 351.497 78.2054 cv
368.221 87.266 385.514 96.6361 400 96.6361 cv
414.486 96.6361 431.779 87.266 448.503 78.2054 cv
470.99 66.0218 492.23 54.515 507.719 63.4759 cv
523.906 72.8412 524.519 98.7308 525.112 123.769 cv
525.55 142.31 526.004 161.482 532.859 173.33 cv
539.375 184.591 554.63 193.769 570.781 203.486 cv
592.7 216.671 615.364 230.306 615.364 250 cv
615.364 269.694 592.699 283.328 570.781 296.515 cv
554.631 306.232 539.375 315.41 532.86 326.669 cv
526.004 338.519 525.55 357.691 525.112 376.232 cv
524.519 401.269 523.906 427.16 507.719 436.525 cv
492.231 445.488 470.99 433.979 448.503 421.795 cv
431.779 412.734 414.486 403.364 400 403.364 cv
385.514 403.364 368.221 412.734 351.497 421.795 cv
334.607 430.946 318.418 439.716 304.843 439.717 cv
cp
f
400 430.161 mo
408.005 430.161 416.302 431.8 424.326 433.385 cv
437.041 435.895 449.049 438.268 460.014 434.706 cv
471.526 430.969 480.353 421.363 488.89 412.074 cv
494.246 406.244 499.784 400.218 505.896 395.77 cv
512.113 391.245 519.63 387.785 526.899 384.439 cv
538.295 379.194 550.078 373.769 557.09 364.135 cv
564.021 354.611 565.556 341.773 567.041 329.358 cv
567.997 321.365 568.985 313.1 571.391 305.69 cv
573.675 298.657 577.641 291.631 581.477 284.837 cv
587.713 273.792 594.161 262.371 594.161 250 cv
594.161 237.629 587.713 226.207 581.477 215.162 cv
577.641 208.369 573.675 201.343 571.391 194.31 cv
568.985 186.9 567.997 178.635 567.041 170.642 cv
565.556 158.227 564.021 145.389 557.09 135.866 cv
550.078 126.232 538.295 120.808 526.901 115.562 cv
519.631 112.215 512.113 108.754 505.896 104.23 cv
499.784 99.7816 494.245 93.7542 488.889 87.9261 cv
480.353 78.6371 471.526 69.0316 460.014 65.2933 cv
449.048 61.7328 437.04 64.1048 424.326 66.6156 cv
416.302 68.2005 408.005 69.8392 400 69.8392 cv
391.996 69.8392 383.698 68.2005 375.674 66.6156 cv
362.96 64.1048 350.952 61.7318 339.986 65.2933 cv
328.474 69.0316 319.647 78.6371 311.111 87.9261 cv
305.755 93.7542 300.216 99.7816 294.104 104.23 cv
287.887 108.754 280.369 112.215 273.1 115.562 cv
261.705 120.808 249.922 126.232 242.911 135.866 cv
235.98 145.39 234.444 158.228 232.959 170.643 cv
232.003 178.635 231.015 186.9 228.609 194.31 cv
226.325 201.343 222.359 208.369 218.522 215.163 cv
212.287 226.208 205.839 237.629 205.839 250 cv
205.839 262.371 212.287 273.792 218.522 284.836 cv
222.359 291.631 226.325 298.657 228.609 305.691 cv
231.015 313.101 232.003 321.365 232.959 329.357 cv
234.444 341.773 235.98 354.611 242.911 364.135 cv
249.922 373.769 261.706 379.194 273.101 384.439 cv
280.37 387.785 287.887 391.245 294.104 395.77 cv
300.216 400.218 305.754 406.244 311.11 412.073 cv
319.646 421.363 328.474 430.969 339.987 434.706 cv
350.952 438.268 362.96 435.896 375.674 433.385 cv
383.698 431.8 391.996 430.161 400 430.161 cv
cp
447.625 437.49 mo
439.953 437.49 431.958 435.911 424.133 434.366 cv
416.155 432.79 407.907 431.161 400 431.161 cv
392.093 431.161 383.845 432.79 375.867 434.366 cv
363.589 436.792 350.891 439.3 339.678 435.658 cv
327.915 431.839 318.997 422.134 310.373 412.749 cv
305.05 406.957 299.547 400.968 293.515 396.578 cv
287.379 392.113 279.908 388.673 272.683 385.348 cv
261.171 380.048 249.267 374.569 242.102 364.723 cv
235.017 354.989 233.466 342.018 231.966 329.476 cv
231.016 321.532 230.034 313.316 227.658 305.999 cv
225.405 299.061 221.639 292.391 217.652 285.328 cv
211.352 274.171 204.839 262.634 204.839 250 cv
204.839 237.367 211.352 225.829 217.652 214.672 cv
221.639 207.61 225.405 200.939 227.657 194.001 cv
230.033 186.684 231.016 178.469 231.966 170.524 cv
233.466 157.982 235.018 145.012 242.102 135.278 cv
249.267 125.433 261.17 119.952 272.681 114.654 cv
279.907 111.327 287.379 107.888 293.515 103.421 cv
299.547 99.0316 305.051 93.0414 310.375 87.2494 cv
318.998 77.8656 327.916 68.1615 339.677 64.3421 cv
350.89 60.7035 363.588 63.2103 375.867 65.6341 cv
383.844 67.2103 392.093 68.8392 400 68.8392 cv
407.906 68.8392 416.155 67.2103 424.133 65.6341 cv
436.413 63.2093 449.112 60.7005 460.322 64.3421 cv
472.084 68.1615 481.002 77.8656 489.625 87.2494 cv
494.948 93.0414 500.453 99.0316 506.485 103.421 cv
512.621 107.888 520.093 111.327 527.319 114.654 cv
538.83 119.952 550.733 125.433 557.898 135.278 cv
564.983 145.011 566.533 157.981 568.034 170.524 cv
568.984 178.468 569.966 186.684 572.342 194.001 cv
574.595 200.939 578.361 207.609 582.348 214.671 cv
588.648 225.828 595.161 237.367 595.161 250 cv
595.161 262.634 588.648 274.171 582.348 285.328 cv
578.361 292.391 574.595 299.061 572.342 305.998 cv
569.966 313.316 568.984 321.532 568.034 329.476 cv
566.533 342.019 564.983 354.989 557.898 364.723 cv
550.733 374.569 538.829 380.048 527.318 385.347 cv
520.092 388.673 512.621 392.113 506.485 396.578 cv
500.453 400.968 494.949 406.957 489.626 412.75 cv
481.003 422.134 472.085 431.839 460.322 435.658 cv
456.256 436.978 451.992 437.49 447.625 437.49 cv
cp
.309804 1 .976471 rgb
f
390.513 434.365 mo
391.058 434.365 391.598 434.375 392.137 434.398 cv
400.723 434.757 409.847 438.056 418.672 441.245 cv
430.883 445.66 443.51 450.223 454.877 447.068 cv
466.103 443.952 474.527 433.585 482.674 423.561 cv
488.63 416.232 494.789 408.653 502.055 403.83 cv
508.94 399.26 518.045 396.656 526.851 394.136 cv
539.508 390.515 552.597 386.77 560.222 377.163 cv
567.847 367.556 568.522 353.959 569.174 340.81 cv
569.629 331.662 570.098 322.202 572.985 314.461 cv
576.031 306.289 582.014 298.571 587.799 291.106 cv
595.712 280.896 603.895 270.338 604.381 258.698 cv
604.873 246.91 597.562 235.65 590.49 224.761 cv
585.38 216.891 580.096 208.754 577.797 200.473 cv
575.536 192.33 575.872 182.732 576.196 173.45 cv
576.653 160.385 577.125 146.875 570.493 136.885 cv
564.191 127.389 552.407 122.842 539.931 118.028 cv
530.99 114.578 521.744 111.011 514.73 105.445 cv
507.716 99.8773 502.143 91.683 496.753 83.7591 cv
489.232 72.7015 482.128 62.2582 471.448 58.2757 cv
460.213 54.0853 447.164 57.6126 434.545 61.0248 cv
425.578 63.4476 416.299 65.9466 407.863 65.6019 cv
399.277 65.2435 390.152 61.9447 381.327 58.7542 cv
369.117 54.3412 356.493 49.7777 345.123 52.932 cv
333.897 56.0482 325.473 66.4144 317.326 76.4388 cv
311.37 83.7679 305.211 91.347 297.945 96.1693 cv
291.061 100.74 281.955 103.344 273.149 105.864 cv
260.491 109.485 247.403 113.23 239.778 122.836 cv
232.153 132.444 231.478 146.04 230.825 159.19 cv
230.371 168.338 229.902 177.797 227.015 185.538 cv
223.968 193.71 217.986 201.43 212.2 208.895 cv
204.287 219.105 196.105 229.662 195.619 241.303 cv
195.127 253.091 202.438 264.351 209.509 275.24 cv
214.62 283.109 219.904 291.246 222.203 299.528 cv
224.464 307.67 224.129 317.269 223.804 326.552 cv
223.347 339.616 222.875 353.124 229.507 363.115 cv
235.809 372.611 247.592 377.158 260.068 381.971 cv
269.009 385.421 278.256 388.99 285.27 394.557 cv
292.284 400.123 297.858 408.318 303.248 416.243 cv
310.769 427.299 317.873 437.743 328.552 441.724 cv
339.788 445.914 352.837 442.386 365.457 438.975 cv
373.851 436.706 382.514 434.365 390.513 434.365 cv
cp
446.786 448.618 mo
437.592 448.618 427.924 445.122 418.502 441.716 cv
409.713 438.538 400.626 435.253 392.116 434.898 cv
383.746 434.538 374.516 437.045 365.587 439.458 cv
352.891 442.891 339.764 446.438 328.377 442.193 cv
317.549 438.156 310.402 427.648 302.835 416.523 cv
297.466 408.63 291.914 400.467 284.959 394.949 cv
278.005 389.428 268.795 385.874 259.888 382.438 cv
247.336 377.595 235.481 373.02 229.09 363.392 cv
222.37 353.267 222.845 339.677 223.304 326.535 cv
223.628 317.289 223.962 307.73 221.721 299.66 cv
219.443 291.454 214.18 283.35 209.09 275.512 cv
201.976 264.557 194.62 253.23 195.119 241.282 cv
195.612 229.482 203.844 218.861 211.805 208.588 cv
217.568 201.153 223.527 193.464 226.547 185.365 cv
229.406 177.695 229.853 168.695 230.326 159.165 cv
230.983 145.937 231.662 132.258 239.386 122.526 cv
247.111 112.793 260.278 109.026 273.011 105.383 cv
282.184 102.759 290.849 100.28 297.669 95.7533 cv
304.871 90.972 311.006 83.4232 316.939 76.1234 cv
325.134 66.0375 333.61 55.6087 344.989 52.4496 cv
356.51 49.2503 369.213 53.8431 381.497 58.2835 cv
390.286 61.4613 399.374 64.7464 407.883 65.1019 cv
416.25 65.4662 425.485 62.9554 434.415 60.5423 cv
447.11 57.1097 460.237 53.5609 471.623 57.807 cv
482.452 61.8451 489.599 72.3529 497.166 83.4779 cv
502.535 91.3705 508.087 99.5326 515.041 105.052 cv
521.995 110.572 531.205 114.125 540.111 117.562 cv
552.663 122.405 564.519 126.98 570.91 136.608 cv
577.63 146.733 577.155 160.324 576.696 173.467 cv
576.373 182.711 576.039 192.271 578.279 200.34 cv
580.557 208.546 585.82 216.651 590.91 224.489 cv
598.024 235.444 605.38 246.771 604.881 258.719 cv
604.387 270.518 596.155 281.14 588.195 291.412 cv
582.432 298.847 576.473 306.535 573.453 314.635 cv
570.593 322.305 570.147 331.305 569.674 340.834 cv
569.017 354.063 568.338 367.742 560.613 377.474 cv
552.889 387.206 539.722 390.974 526.989 394.617 cv
517.816 397.242 509.152 399.72 502.331 404.246 cv
495.129 409.028 488.994 416.576 483.062 423.876 cv
474.865 433.961 466.39 444.391 455.011 447.55 cv
452.327 448.295 449.578 448.618 446.786 448.618 cv
cp
f
363.959 422.986 mo
364.302 422.986 364.636 423.018 364.963 423.083 cv
370.01 424.101 373.831 433.229 377.876 442.892 cv
381.842 452.367 385.943 462.164 390.968 462.373 cv
391.135 462.377 li
396.138 462.377 401.007 453.031 405.716 443.989 cv
410.54 434.727 415.096 425.98 420.175 425.396 cv
425.268 424.809 431.679 432.296 438.479 440.219 cv
445.193 448.042 452.139 456.135 457.016 454.776 cv
461.862 453.431 463.632 442.958 465.343 432.831 cv
467.088 422.501 468.737 412.743 473.422 410.607 cv
478.033 408.5 486.418 413.613 495.294 419.024 cv
504.136 424.412 513.278 429.984 517.539 427.16 cv
521.685 424.407 520.124 413.958 518.615 403.854 cv
517.127 393.898 515.589 383.602 519.418 380.077 cv
523.104 376.683 532.597 378.932 542.649 381.313 cv
552.786 383.712 563.267 386.194 566.488 382.137 cv
569.709 378.078 564.911 368.434 560.272 359.107 cv
555.672 349.859 551.327 341.123 553.794 336.764 cv
556.358 332.235 566.734 331.395 576.768 330.583 cv
586.951 329.759 597.481 328.907 599.22 324.243 cv
601.007 319.452 593.503 311.814 586.246 304.427 cv
578.962 297.012 572.081 290.008 573.083 285.037 cv
574.1 279.99 583.228 276.169 592.893 272.123 cv
602.367 268.158 612.164 264.057 612.374 259.032 cv
612.586 253.97 603.131 249.045 593.988 244.284 cv
584.727 239.46 575.98 234.904 575.396 229.825 cv
574.811 224.745 582.296 218.322 590.22 211.521 cv
598.043 204.807 606.132 197.865 604.777 192.983 cv
603.431 188.137 592.959 186.368 582.831 184.657 cv
572.501 182.911 562.744 181.263 560.607 176.577 cv
558.503 171.965 563.613 163.581 569.024 154.706 cv
574.413 145.865 579.987 136.721 577.159 132.461 cv
574.407 128.315 563.959 129.876 553.854 131.385 cv
543.897 132.87 533.602 134.411 530.077 130.581 cv
526.684 126.897 528.932 117.403 531.313 107.352 cv
533.713 97.2142 536.195 86.7328 532.137 83.5121 cv
528.079 80.2875 518.434 85.0882 509.107 89.7279 cv
499.858 94.3275 491.122 98.6722 486.764 96.2064 cv
482.235 93.6429 481.395 83.2669 480.583 73.2318 cv
479.759 63.0482 478.906 52.5179 474.243 50.7796 cv
469.453 48.9906 461.814 56.4964 454.426 63.7542 cv
447.012 71.0365 440.017 77.9144 435.038 76.9173 cv
429.99 75.8998 426.169 66.7718 422.124 57.1068 cv
418.158 47.6332 414.057 37.8363 409.032 37.6263 cv
408.865 37.6224 li
403.862 37.6224 398.993 46.9691 394.283 56.0121 cv
389.46 65.2728 384.904 74.0199 379.825 74.6039 cv
374.733 75.1722 368.321 67.7044 361.521 59.7806 cv
354.808 51.9584 347.87 43.8617 342.984 45.224 cv
338.137 46.5687 336.368 57.0414 334.657 67.1683 cv
332.912 77.4994 331.263 87.2562 326.578 89.3929 cv
321.963 91.5003 313.581 86.3871 304.706 80.9759 cv
295.864 75.5873 286.722 70.014 282.461 72.8402 cv
278.315 75.5931 279.876 86.0414 281.385 96.1459 cv
282.873 106.103 284.411 116.399 280.582 119.923 cv
276.896 123.316 267.403 121.068 257.352 118.688 cv
247.214 116.286 236.733 113.804 233.512 117.863 cv
230.291 121.921 235.089 131.567 239.728 140.894 cv
244.328 150.142 248.673 158.876 246.206 163.236 cv
243.643 167.765 233.267 168.605 223.232 169.417 cv
213.049 170.241 202.519 171.093 200.78 175.756 cv
198.993 180.547 206.497 188.186 213.754 195.573 cv
221.038 202.989 227.919 209.993 226.917 214.963 cv
225.9 220.01 216.772 223.831 207.108 227.876 cv
197.633 231.842 187.836 235.943 187.626 240.968 cv
187.415 246.03 196.869 250.953 206.011 255.716 cv
215.273 260.539 224.02 265.096 224.605 270.176 cv
225.189 275.255 217.704 281.678 209.781 288.478 cv
201.958 295.193 193.868 302.135 195.223 307.017 cv
196.569 311.863 207.041 313.632 217.169 315.343 cv
227.499 317.088 237.257 318.737 239.393 323.422 cv
241.497 328.035 236.387 336.418 230.977 345.293 cv
225.587 354.135 220.013 363.279 222.841 367.538 cv
225.592 371.686 236.041 370.123 246.146 368.615 cv
256.101 367.127 266.398 365.587 269.924 369.418 cv
273.316 373.103 271.068 382.597 268.688 392.648 cv
266.287 402.785 263.805 413.267 267.863 416.488 cv
271.924 419.714 281.566 414.912 290.893 410.272 cv
300.14 405.672 308.877 401.329 313.236 403.794 cv
317.765 406.358 318.605 416.734 319.417 426.768 cv
320.241 436.952 321.093 447.482 325.757 449.22 cv
330.547 451.007 338.186 443.502 345.573 436.246 cv
352.502 429.44 359.072 422.986 363.959 422.986 cv
cp
391.141 462.877 mo
390.947 462.873 li
385.604 462.651 381.626 453.147 377.415 443.085 cv
373.598 433.967 369.652 424.538 364.864 423.574 cv
360.153 422.625 352.92 429.731 345.924 436.603 cv
338.424 443.969 330.67 451.584 325.582 449.689 cv
320.621 447.839 319.794 437.623 318.919 426.809 cv
318.117 416.904 317.288 406.662 312.989 404.23 cv
308.862 401.889 299.84 406.379 291.115 410.72 cv
281.649 415.429 271.859 420.295 267.552 416.88 cv
263.245 413.461 265.765 402.822 268.201 392.533 cv
270.446 383.051 272.768 373.246 269.555 369.756 cv
266.211 366.123 256.049 367.641 246.219 369.11 cv
235.489 370.712 225.353 372.227 222.424 367.816 cv
219.421 363.29 225.078 354.009 230.55 345.033 cv
235.654 336.66 240.932 328.001 238.938 323.629 cv
236.912 319.186 226.833 317.483 217.085 315.836 cv
206.331 314.019 196.172 312.303 194.742 307.15 cv
193.301 301.962 201.148 295.228 209.455 288.099 cv
216.931 281.683 224.662 275.048 224.108 270.233 cv
223.554 265.417 214.518 260.71 205.78 256.16 cv
196.072 251.103 186.902 246.327 187.126 240.947 cv
187.35 235.604 196.853 231.626 206.915 227.414 cv
216.033 223.598 225.462 219.652 226.427 214.864 cv
227.376 210.154 220.27 202.919 213.397 195.923 cv
206.031 188.425 198.414 180.67 200.311 175.582 cv
202.161 170.62 212.377 169.793 223.192 168.918 cv
233.096 168.117 243.338 167.288 245.771 162.99 cv
248.107 158.862 243.62 149.84 239.28 141.117 cv
234.571 131.65 229.702 121.86 233.12 117.552 cv
236.538 113.245 247.178 115.765 257.467 118.202 cv
266.948 120.447 276.754 122.767 280.243 119.556 cv
283.877 116.21 282.359 106.047 280.89 96.2191 cv
279.287 85.4876 277.773 75.3519 282.185 72.4242 cv
286.711 69.4164 295.991 75.0785 304.966 80.5492 cv
313.341 85.6527 321.997 90.93 326.371 88.9378 cv
330.815 86.9115 332.517 76.8324 334.164 67.0853 cv
335.981 56.3304 337.697 46.1722 342.85 44.7416 cv
348.039 43.2953 354.771 51.1478 361.901 59.4544 cv
368.317 66.931 374.955 74.6585 379.767 74.1078 cv
384.583 73.5531 389.289 64.5189 393.84 55.7816 cv
398.897 46.0726 403.693 36.9046 409.053 37.1263 cv
414.396 37.35 418.373 46.8529 422.585 56.9144 cv
426.402 66.0326 430.348 75.4623 435.136 76.4271 cv
439.845 77.3783 447.08 70.2699 454.076 63.3978 cv
461.575 56.0306 469.331 48.4105 474.418 50.3109 cv
479.379 52.1605 480.206 62.3763 481.081 73.1917 cv
481.883 83.096 482.712 93.3382 487.01 95.7709 cv
491.137 98.1087 500.159 93.6195 508.884 89.2806 cv
518.35 84.5716 528.141 79.7005 532.447 83.1205 cv
536.755 86.5384 534.236 97.1781 531.799 107.467 cv
529.554 116.949 527.232 126.753 530.445 130.244 cv
533.79 133.878 543.953 132.359 553.78 130.891 cv
564.511 129.286 574.647 127.775 577.576 132.184 cv
580.58 136.709 574.922 145.991 569.45 154.967 cv
564.346 163.34 559.068 171.998 561.062 176.37 cv
563.089 180.814 573.168 182.517 582.915 184.163 cv
593.67 185.981 603.828 187.697 605.258 192.85 cv
606.698 198.037 598.852 204.771 590.545 211.901 cv
583.069 218.317 575.339 224.952 575.893 229.768 cv
576.446 234.583 585.481 239.289 594.219 243.84 cv
603.928 248.897 613.098 253.673 612.874 259.053 cv
612.651 264.396 603.147 268.373 593.086 272.584 cv
583.967 276.402 574.538 280.349 573.573 285.137 cv
572.624 289.847 579.73 297.08 586.603 304.077 cv
593.969 311.576 601.586 319.329 599.689 324.417 cv
597.839 329.379 587.623 330.206 576.808 331.081 cv
566.904 331.883 556.662 332.711 554.23 337.01 cv
551.893 341.138 556.381 350.16 560.72 358.884 cv
565.429 368.351 570.298 378.141 566.88 382.448 cv
566.684 382.292 li
566.88 382.448 li
563.463 386.755 552.823 384.236 542.534 381.799 cv
533.051 379.553 523.246 377.234 519.757 380.445 cv
516.123 383.79 517.641 393.952 519.109 403.781 cv
520.713 414.511 522.227 424.648 517.815 427.576 cv
513.29 430.583 504.009 424.921 495.033 419.451 cv
486.659 414.346 477.997 409.066 473.63 411.062 cv
469.186 413.088 467.483 423.167 465.836 432.914 cv
464.019 443.669 462.303 453.827 457.15 455.258 cv
451.96 456.702 445.229 448.853 438.099 440.545 cv
431.684 433.069 425.048 425.335 420.233 425.892 cv
415.417 426.447 410.711 435.482 406.16 444.219 cv
401.164 453.811 396.441 462.876 391.141 462.877 cv
cp
1 .0941176 .290196 rgb
f
257.029 88.6507 mo
239.48 88.6507 223.831 91.4906 214.73 102.956 cv
201.112 120.115 209.638 147.177 217.882 173.348 cv
223.826 192.215 229.44 210.036 227.33 224.352 cv
225.111 239.403 213.849 256.09 202.958 272.229 cv
187.914 294.521 172.358 317.573 179.981 336.916 cv
187.274 355.421 212.562 361.296 239.335 367.516 cv
258.788 372.035 278.903 376.708 291.5 386.705 cv
304.097 396.703 313.216 415.233 322.034 433.152 cv
334.17 457.813 345.633 481.107 365.311 484.007 cv
385.872 487.037 404.798 466.656 423.092 446.942 cv
436.336 432.671 450.03 417.914 464.184 412.336 cv
477.646 407.031 496.278 408.452 516.001 409.956 cv
543.36 412.043 571.651 414.2 585.27 397.043 cv
598.887 379.885 590.362 352.824 582.117 326.653 cv
576.174 307.785 570.56 289.963 572.67 275.648 cv
574.888 260.597 586.151 243.91 597.042 227.771 cv
612.086 205.479 627.642 182.427 620.019 163.083 cv
612.726 144.578 587.438 138.704 560.666 132.485 cv
541.213 127.965 521.097 123.292 508.5 113.294 cv
495.903 103.296 486.784 84.7669 477.966 66.848 cv
465.83 42.1869 454.366 18.8929 434.689 15.9925 cv
414.126 12.9554 395.202 33.3441 376.908 53.057 cv
363.664 67.3285 349.969 82.0853 335.816 87.6634 cv
322.353 92.9691 303.722 91.5462 283.999 90.0433 cv
274.923 89.3519 265.741 88.6507 257.029 88.6507 cv
cp
369.433 484.809 mo
368.042 484.809 366.645 484.709 365.237 484.501 cv
345.3 481.563 333.781 458.155 321.585 433.372 cv
312.792 415.503 303.698 397.026 291.19 387.098 cv
278.68 377.169 258.621 372.509 239.222 368.002 cv
212.318 361.752 186.905 355.849 179.516 337.1 cv
171.796 317.511 187.427 294.349 202.544 271.95 cv
213.403 255.858 224.633 239.217 226.835 224.28 cv
228.929 210.077 223.332 192.31 217.405 173.498 cv
209.122 147.202 200.556 120.012 214.339 102.646 cv
228.122 85.2796 256.549 87.4505 284.037 89.5453 cv
303.703 91.0443 322.277 92.4613 335.633 87.1986 cv
349.68 81.6615 363.336 66.9476 376.542 52.7171 cv
394.924 32.9085 413.924 12.4232 434.762 15.4984 cv
454.699 18.4369 466.218 41.8451 478.415 66.6273 cv
487.209 84.4964 496.302 102.974 508.811 112.902 cv
521.32 122.83 541.38 127.491 560.779 131.997 cv
587.683 138.247 613.095 144.152 620.484 162.9 cv
628.204 182.489 612.573 205.651 597.456 228.05 cv
586.596 244.142 575.366 260.783 573.164 275.72 cv
571.071 289.922 576.669 307.691 582.594 326.502 cv
590.878 352.797 599.444 379.989 585.661 397.354 cv
571.879 414.719 543.451 412.553 515.963 410.454 cv
496.298 408.955 477.723 407.537 464.367 412.801 cv
450.32 418.337 436.664 433.052 423.459 447.283 cv
406.318 465.751 388.632 484.808 369.433 484.809 cv
cp
f
388.243 452.548 mo
389.291 452.548 390.331 452.568 391.363 452.611 cv
399.632 452.956 408.268 454.779 416.619 456.54 cv
430.546 459.479 444.944 462.517 458.16 458.847 cv
471.232 455.218 481.98 445.218 492.373 435.547 cv
498.655 429.702 505.152 423.657 512.135 419.023 cv
518.767 414.62 526.63 411.133 534.234 407.761 cv
547.371 401.934 560.955 395.91 569.799 384.765 cv
578.645 373.62 581.427 359.023 584.119 344.907 cv
585.677 336.736 587.288 328.285 590.069 320.828 cv
592.997 312.976 597.408 305.277 601.675 297.831 cv
608.734 285.513 616.032 272.775 616.599 259.22 cv
617.171 245.518 610.943 232.184 604.92 219.289 cv
601.307 211.556 597.572 203.559 595.358 195.584 cv
593.181 187.744 592.278 179.065 591.403 170.67 cv
589.922 156.441 588.389 141.728 580.687 130.123 cv
573.342 119.057 561.189 112.3 548.321 105.146 cv
540.695 100.906 532.809 96.5209 526.062 91.1664 cv
519.315 85.8119 513.255 79.1273 507.394 72.6634 cv
497.505 61.7562 488.164 51.4544 475.719 46.8138 cv
462.669 41.9466 447.993 43.7953 433.799 45.5834 cv
425.425 46.638 416.765 47.725 408.636 47.389 cv
400.367 47.0433 391.731 45.221 383.379 43.4593 cv
369.454 40.5218 355.056 37.4837 341.84 41.1527 cv
328.767 44.7816 318.019 54.7826 307.625 64.4544 cv
301.343 70.2992 294.847 76.3441 287.865 80.9779 cv
281.234 85.3802 273.37 88.8675 265.766 92.2396 cv
252.629 98.0658 239.045 104.09 230.2 115.235 cv
221.355 126.379 218.572 140.977 215.881 155.094 cv
214.323 163.265 212.712 171.714 209.931 179.172 cv
207.003 187.025 202.592 194.723 198.325 202.168 cv
191.267 214.487 183.967 227.225 183.402 240.78 cv
182.829 254.483 189.057 267.816 195.08 280.71 cv
198.693 288.444 202.428 296.441 204.642 304.415 cv
206.819 312.255 207.723 320.936 208.597 329.33 cv
210.079 343.559 211.611 358.273 219.314 369.876 cv
226.658 380.944 238.813 387.701 251.68 394.855 cv
259.306 399.095 267.192 403.48 273.938 408.834 cv
280.685 414.189 286.746 420.873 292.607 427.337 cv
302.496 438.244 311.836 448.546 324.281 453.187 cv
337.331 458.053 352.008 456.203 366.201 454.416 cv
373.512 453.496 381.041 452.548 388.243 452.548 cv
cp
444.824 461.034 mo
435.496 461.034 425.9 459.009 416.516 457.03 cv
408.185 455.272 399.57 453.454 391.343 453.111 cv
383.256 452.776 374.617 453.861 366.264 454.912 cv
352.011 456.709 337.271 458.563 324.106 453.656 cv
311.548 448.972 302.168 438.626 292.237 427.673 cv
286.389 421.224 280.342 414.555 273.628 409.226 cv
266.913 403.897 259.046 399.523 251.437 395.292 cv
238.515 388.108 226.309 381.322 218.897 370.154 cv
211.127 358.447 209.588 343.671 208.1 329.382 cv
207.228 321.008 206.326 312.349 204.16 304.548 cv
201.957 296.615 198.231 288.637 194.627 280.922 cv
188.579 267.973 182.324 254.583 182.902 240.758 cv
183.473 227.081 190.803 214.29 197.892 201.919 cv
202.148 194.492 206.549 186.812 209.463 178.998 cv
212.229 171.579 213.836 163.151 215.39 155 cv
218.092 140.824 220.887 126.165 229.809 114.924 cv
238.73 103.683 252.371 97.6332 265.563 91.7826 cv
273.149 88.4183 280.992 84.9398 287.589 80.5619 cv
294.537 75.9496 301.017 69.9193 307.285 64.0882 cv
317.723 54.3753 328.516 44.3324 341.706 40.6703 cv
355.038 36.9691 369.498 40.0199 383.482 42.9701 cv
391.814 44.7279 400.429 46.5453 408.657 46.889 cv
416.743 47.222 425.383 46.139 433.737 45.0873 cv
447.991 43.2923 462.728 41.4359 475.894 46.3451 cv
488.453 51.0287 497.833 61.3744 507.764 72.3275 cv
513.612 78.7767 519.658 85.4457 526.372 90.7738 cv
533.088 96.1039 540.956 100.479 548.565 104.709 cv
561.486 111.893 573.691 118.679 581.104 129.846 cv
588.874 141.553 590.412 156.328 591.901 170.618 cv
592.773 178.993 593.674 187.652 595.84 195.452 cv
598.043 203.385 601.769 211.363 605.373 219.078 cv
611.421 232.027 617.675 245.416 617.098 259.242 cv
616.527 272.917 609.197 285.709 602.109 298.079 cv
597.852 305.508 593.451 313.189 590.537 321.002 cv
587.771 328.421 586.164 336.849 584.61 345 cv
581.907 359.176 579.112 373.835 570.191 385.076 cv
569.995 384.92 li
570.191 385.076 li
561.27 396.317 547.629 402.367 534.436 408.218 cv
526.851 411.582 519.008 415.061 512.411 419.439 cv
505.463 424.051 498.982 430.081 492.714 435.913 cv
482.276 445.625 471.484 455.667 458.294 459.329 cv
453.908 460.547 449.397 461.034 444.824 461.034 cv
cp
.309804 1 .976471 rgb
f
393.019 391.664 mo
393.334 391.664 393.645 391.671 393.957 391.684 cv
400.934 391.976 408.461 395.597 415.74 399.1 cv
425.111 403.609 434.801 408.271 443.406 405.882 cv
451.899 403.524 457.762 394.589 463.432 385.949 cv
467.893 379.149 472.507 372.118 478.414 368.197 cv
484.009 364.484 492.043 363.044 499.813 361.653 cv
510.21 359.79 520.96 357.865 526.736 350.586 cv
532.512 343.309 531.947 332.402 531.4 321.854 cv
530.991 313.971 530.569 305.82 532.915 299.528 cv
535.392 292.884 541.192 286.795 546.8 280.907 cv
553.928 273.423 561.299 265.684 561.666 256.878 cv
562.039 247.953 555.299 239.577 548.78 231.474 cv
543.716 225.181 538.479 218.672 536.611 211.944 cv
534.774 205.326 535.898 197.128 536.986 189.201 cv
538.409 178.822 539.882 168.09 534.861 160.526 cv
530.093 153.343 520.35 150.684 510.035 147.869 cv
502.08 145.699 493.855 143.454 488.154 138.929 cv
482.452 134.405 478.399 126.903 474.478 119.649 cv
469.395 110.242 464.593 101.357 456.516 98.3451 cv
448.009 95.1703 437.891 99.0443 428.108 102.787 cv
420.973 105.517 413.606 108.334 406.981 108.335 cv
406.666 108.335 406.355 108.328 406.043 108.316 cv
399.066 108.024 391.539 104.403 384.26 100.9 cv
374.889 96.391 365.199 91.7318 356.593 94.1175 cv
348.101 96.4759 342.238 105.41 336.569 114.051 cv
332.107 120.85 327.493 127.881 321.586 131.803 cv
315.99 135.516 307.957 136.955 300.187 138.347 cv
289.79 140.209 279.04 142.135 273.264 149.413 cv
267.487 156.691 268.053 167.598 268.6 178.147 cv
269.008 186.03 269.431 194.18 267.085 200.472 cv
264.608 207.116 258.808 213.205 253.199 219.094 cv
246.071 226.577 238.701 234.316 238.334 243.121 cv
237.961 252.046 244.702 260.423 251.22 268.525 cv
256.284 274.819 261.521 281.327 263.389 288.056 cv
265.227 294.674 264.102 302.871 263.014 310.799 cv
261.591 321.178 260.118 331.91 265.139 339.475 cv
269.906 346.658 279.649 349.316 289.964 352.13 cv
297.919 354.301 306.145 356.545 311.846 361.071 cv
317.548 365.595 321.601 373.097 325.522 380.351 cv
330.605 389.757 335.407 398.643 343.484 401.655 cv
351.991 404.83 362.109 400.956 371.892 397.212 cv
379.027 394.483 386.394 391.664 393.019 391.664 cv
cp
438.462 406.781 mo
431.124 406.781 423.273 403.002 415.632 399.326 cv
408.376 395.833 400.872 392.223 393.946 391.934 cv
387.144 391.646 379.432 394.596 371.982 397.447 cv
362.154 401.206 351.992 405.095 343.397 401.889 cv
335.231 398.844 330.408 389.919 325.301 380.47 cv
321.393 373.238 317.352 365.759 311.691 361.266 cv
306.03 356.773 297.829 354.535 289.899 352.371 cv
279.537 349.544 269.75 346.873 264.931 339.614 cv
259.858 331.97 261.337 321.19 262.767 310.765 cv
263.851 302.863 264.972 294.692 263.148 288.122 cv
261.294 281.444 256.074 274.956 251.026 268.682 cv
244.478 260.544 237.707 252.129 238.084 243.112 cv
238.456 234.211 245.859 226.439 253.018 218.922 cv
258.61 213.051 264.391 206.981 266.851 200.384 cv
269.179 194.141 268.776 186.378 268.35 178.16 cv
267.801 167.565 267.233 156.61 273.068 149.257 cv
278.903 141.906 289.7 139.971 300.143 138.101 cv
308.244 136.65 315.896 135.28 321.447 131.594 cv
327.313 127.702 331.912 120.692 336.36 113.914 cv
342.054 105.235 347.944 96.2601 356.527 93.8773 cv
365.224 91.4593 374.956 96.1449 384.368 100.674 cv
391.625 104.166 399.128 107.777 406.054 108.066 cv
412.865 108.347 420.569 105.403 428.018 102.553 cv
437.845 98.7933 448.008 94.9046 456.603 98.1107 cv
464.768 101.156 469.591 110.08 474.698 119.53 cv
478.607 126.762 482.648 134.241 488.309 138.734 cv
493.97 143.226 502.171 145.464 510.101 147.628 cv
520.463 150.455 530.25 153.126 535.069 160.387 cv
540.142 168.031 538.663 178.81 537.233 189.235 cv
536.149 197.137 535.029 205.308 536.852 211.877 cv
538.706 218.556 543.926 225.043 548.974 231.318 cv
555.522 239.455 562.293 247.87 561.916 256.888 cv
561.545 265.788 554.141 273.562 546.981 281.078 cv
541.39 286.95 535.609 293.02 533.149 299.616 cv
530.821 305.859 531.224 313.621 531.65 321.841 cv
532.199 332.435 532.767 343.391 526.932 350.743 cv
526.932 350.743 li
521.097 358.094 510.299 360.029 499.857 361.899 cv
491.756 363.35 484.104 364.72 478.553 368.406 cv
472.688 372.298 468.089 379.307 463.641 386.085 cv
457.945 394.765 452.056 403.74 443.473 406.122 cv
441.837 406.577 440.163 406.781 438.462 406.781 cv
cp
f
372.846 381.115 mo
373.05 381.115 373.249 381.134 373.443 381.173 cv
377.371 381.964 380.13 390.983 383.051 400.532 cv
385.903 409.855 388.853 419.495 392.788 419.66 cv
392.891 419.661 li
396.817 419.661 400.543 410.352 404.148 401.345 cv
407.845 392.107 411.338 383.38 415.29 382.925 cv
419.234 382.467 424.625 390.177 430.324 398.334 cv
435.6 405.887 441.047 413.683 444.856 413.683 cv
445.092 413.683 445.322 413.653 445.546 413.591 cv
449.341 412.537 450.025 402.479 450.685 392.752 cv
451.362 382.789 452.002 373.379 455.647 371.717 cv
459.235 370.08 466.703 375.719 474.609 381.691 cv
482.453 387.615 490.568 393.741 493.898 391.526 cv
497.146 389.37 494.686 379.65 492.307 370.248 cv
489.953 360.946 487.519 351.327 490.499 348.584 cv
493.366 345.943 502.157 348.974 511.464 352.183 cv
520.813 355.406 530.481 358.737 533.003 355.56 cv
533.101 355.638 li
533.003 355.56 li
535.525 352.383 530.084 343.724 524.823 335.351 cv
519.586 327.015 514.638 319.142 516.558 315.75 cv
518.552 312.225 528.476 312.411 538.066 312.593 cv
547.764 312.771 557.789 312.963 559.15 309.311 cv
560.549 305.561 552.742 299.053 545.192 292.759 cv
537.582 286.416 530.394 280.424 531.173 276.557 cv
531.965 272.629 540.983 269.87 550.531 266.95 cv
559.854 264.097 569.495 261.148 569.659 257.212 cv
569.825 253.248 560.431 249.489 551.346 245.853 cv
542.107 242.155 533.38 238.661 532.925 234.71 cv
532.471 230.757 540.176 225.374 548.334 219.676 cv
556.357 214.072 564.652 208.277 563.591 204.453 cv
562.537 200.66 552.479 199.976 542.752 199.315 cv
532.79 198.638 523.38 197.998 521.717 194.353 cv
520.08 190.764 525.72 183.297 531.691 175.392 cv
537.614 167.548 543.74 159.437 541.527 156.102 cv
539.37 152.853 529.65 155.314 520.248 157.693 cv
510.946 160.046 501.327 162.479 498.584 159.501 cv
495.945 156.634 498.975 147.843 502.183 138.536 cv
505.405 129.187 508.738 119.519 505.561 116.997 cv
502.381 114.473 493.724 119.915 485.35 125.178 cv
477.014 130.414 469.143 135.364 465.751 133.442 cv
462.226 131.448 462.412 121.528 462.592 111.934 cv
462.775 102.238 462.963 92.2113 459.312 90.85 cv
455.555 89.4642 449.053 97.2582 442.759 104.809 cv
436.415 112.419 430.414 119.593 426.557 118.827 cv
422.629 118.035 419.87 109.017 416.949 99.4681 cv
414.097 90.1449 411.147 80.5042 407.212 80.3402 cv
407.109 80.3382 li
403.184 80.3382 399.458 89.6478 395.853 98.6537 cv
392.155 107.893 388.662 116.62 384.71 117.075 cv
380.764 117.517 375.375 109.824 369.675 101.665 cv
364.071 93.6429 358.273 85.3578 354.454 86.4085 cv
350.659 87.4632 349.976 97.5209 349.315 107.247 cv
348.638 117.21 347.999 126.62 344.353 128.283 cv
340.767 129.923 333.297 124.282 325.391 118.31 cv
317.548 112.385 309.436 106.257 306.102 108.474 cv
302.855 110.629 305.314 120.35 307.693 129.751 cv
310.047 139.053 312.481 148.672 309.501 151.415 cv
306.633 154.057 297.842 151.025 288.536 147.817 cv
279.187 144.595 269.518 141.263 266.998 144.44 cv
264.476 147.617 269.916 156.276 275.177 164.65 cv
280.415 172.986 285.361 180.859 283.442 184.249 cv
281.446 187.773 271.528 187.588 261.933 187.408 cv
252.238 187.225 242.212 187.036 240.85 190.689 cv
239.451 194.44 247.258 200.948 254.808 207.241 cv
262.418 213.584 269.606 219.576 268.827 223.443 cv
268.036 227.371 259.017 230.13 249.468 233.051 cv
240.145 235.904 230.505 238.853 230.34 242.787 cv
230.175 246.751 239.569 250.511 248.653 254.147 cv
257.893 257.845 266.62 261.338 267.074 265.29 cv
267.529 269.243 259.823 274.625 251.665 280.325 cv
243.643 285.929 235.348 291.724 236.409 295.546 cv
237.463 299.341 247.521 300.025 257.249 300.685 cv
267.211 301.363 276.62 302.001 278.283 305.647 cv
279.92 309.237 274.28 316.703 268.309 324.61 cv
262.385 332.452 256.26 340.563 258.473 343.898 cv
260.629 347.147 270.351 344.686 279.753 342.307 cv
289.054 339.953 298.673 337.518 301.416 340.498 cv
304.055 343.366 301.025 352.156 297.817 361.462 cv
294.594 370.813 291.262 380.481 294.44 383.003 cv
297.616 385.518 306.276 380.084 314.649 374.823 cv
322.986 369.586 330.86 364.639 334.249 366.558 cv
337.774 368.553 337.588 378.473 337.407 388.067 cv
337.225 397.762 337.037 407.788 340.689 409.15 cv
344.449 410.547 350.948 402.742 357.241 395.191 cv
363.267 387.962 368.975 381.115 372.846 381.115 cv
cp
392.894 419.911 mo
392.777 419.91 li
388.665 419.738 385.822 410.444 382.812 400.605 cv
380.041 391.546 377.175 382.18 373.393 381.417 cv
373.219 381.383 373.04 381.366 372.855 381.366 cv
369.091 381.366 363.169 388.47 357.433 395.351 cv
350.791 403.32 344.514 410.851 340.602 409.384 cv
336.784 407.961 336.965 398.295 337.157 388.062 cv
337.336 378.541 337.521 368.697 334.126 366.775 cv
330.865 364.932 322.689 370.068 314.782 375.035 cv
306.336 380.342 297.601 385.833 294.284 383.199 cv
290.968 380.567 294.33 370.814 297.581 361.381 cv
300.624 352.553 303.77 343.425 301.232 340.668 cv
298.589 337.797 289.045 340.214 279.814 342.549 cv
269.891 345.06 260.518 347.432 258.265 344.036 cv
255.953 340.554 261.858 332.736 268.109 324.459 cv
273.774 316.959 279.631 309.204 278.055 305.75 cv
276.455 302.241 266.682 301.577 257.232 300.935 cv
246.966 300.238 237.269 299.578 236.168 295.613 cv
235.06 291.619 243.056 286.034 251.522 280.119 cv
259.261 274.713 267.264 269.123 266.826 265.32 cv
266.388 261.515 257.325 257.887 248.56 254.379 cv
238.973 250.542 229.918 246.917 230.09 242.778 cv
230.262 238.665 239.556 235.823 249.395 232.812 cv
258.453 230.041 267.82 227.175 268.582 223.394 cv
269.332 219.672 261.867 213.451 254.648 207.433 cv
246.681 200.791 239.155 194.518 240.615 190.601 cv
242.039 186.784 251.702 186.965 261.938 187.158 cv
271.46 187.334 281.303 187.521 283.224 184.126 cv
285.07 180.865 279.933 172.69 274.966 164.783 cv
269.658 156.335 264.17 147.6 266.801 144.284 cv
269.433 140.969 279.186 144.33 288.617 147.58 cv
297.445 150.623 306.573 153.772 309.332 151.232 cv
312.202 148.589 309.786 139.044 307.451 129.813 cv
304.94 119.89 302.569 110.519 305.963 108.265 cv
309.447 105.954 317.264 111.859 325.542 118.11 cv
333.042 123.775 340.795 129.628 344.249 128.056 cv
347.759 126.454 348.423 116.682 349.066 107.231 cv
349.763 96.9652 350.422 87.2689 354.387 86.1683 cv
358.388 85.0531 363.966 93.057 369.881 101.522 cv
375.145 109.058 380.584 116.843 384.378 116.843 cv
384.48 116.843 384.581 116.838 384.681 116.827 cv
388.486 116.389 392.113 107.326 395.621 98.5609 cv
399.422 89.0638 403.014 80.0882 407.106 80.0882 cv
407.223 80.0902 li
411.335 80.2621 414.178 89.556 417.188 99.3949 cv
419.959 108.453 422.825 117.82 426.607 118.582 cv
430.324 119.32 436.549 111.869 442.567 104.649 cv
449.209 96.68 455.491 89.1566 459.399 90.6156 cv
463.216 92.0394 463.035 101.705 462.842 111.938 cv
462.664 121.458 462.479 131.303 465.874 133.225 cv
469.137 135.069 477.311 129.934 485.217 124.966 cv
493.665 119.658 502.4 114.168 505.716 116.802 cv
509.032 119.434 505.67 129.186 502.419 138.618 cv
499.376 147.446 496.23 156.575 498.768 159.331 cv
501.411 162.202 510.955 159.786 520.187 157.451 cv
530.11 154.94 539.482 152.571 541.735 155.963 cv
544.047 159.447 538.142 167.265 531.89 175.542 cv
526.226 183.041 520.369 190.796 521.945 194.249 cv
523.545 197.759 533.318 198.423 542.769 199.066 cv
553.034 199.763 562.731 200.421 563.832 204.387 cv
564.94 208.38 556.944 213.966 548.478 219.88 cv
540.738 225.286 532.736 230.877 533.174 234.681 cv
533.612 238.486 542.674 242.113 551.439 245.62 cv
561.026 249.457 570.082 253.082 569.909 257.222 cv
569.737 261.334 560.444 264.178 550.604 267.188 cv
541.546 269.959 532.18 272.825 531.418 276.606 cv
530.668 280.327 538.133 286.55 545.352 292.568 cv
553.32 299.209 560.845 305.482 559.384 309.399 cv
557.961 313.216 548.294 313.035 538.061 312.842 cv
528.54 312.664 518.696 312.478 516.776 315.873 cv
514.929 319.135 520.067 327.311 525.035 335.218 cv
530.342 343.665 535.83 352.4 533.199 355.716 cv
530.568 359.031 520.814 355.671 511.382 352.419 cv
502.554 349.376 493.427 346.231 490.668 348.768 cv
487.798 351.41 490.214 360.955 492.549 370.187 cv
495.06 380.109 497.431 389.481 494.037 391.735 cv
490.555 394.049 482.736 388.141 474.458 381.89 cv
466.959 376.225 459.204 370.37 455.751 371.944 cv
452.241 373.545 451.577 383.318 450.935 392.769 cv
450.237 403.035 449.578 412.731 445.612 413.831 cv
445.362 413.902 445.105 413.935 444.842 413.935 cv
440.917 413.935 435.663 406.412 430.119 398.478 cv
424.713 390.739 419.133 382.735 415.319 383.173 cv
411.515 383.612 407.888 392.674 404.38 401.438 cv
400.578 410.936 396.986 419.911 392.894 419.911 cv
cp
1 .0941176 .290196 rgb
f
273.146 122.545 mo
263.377 122.545 255.15 124.683 250.108 131.036 cv
239.785 144.042 249.705 166.053 259.298 187.34 cv
266.719 203.806 273.728 219.36 272.015 230.983 cv
270.214 243.202 258.205 257.094 246.592 270.529 cv
231.66 287.802 216.22 305.663 221.994 320.314 cv
227.511 334.312 249.381 336.69 272.534 339.206 cv
290.633 341.173 309.347 343.207 319.579 351.328 cv
329.811 359.449 336.041 377.212 342.066 394.391 cv
349.774 416.368 357.055 437.127 371.94 439.322 cv
387.526 441.614 401.408 422.526 414.841 404.062 cv
425.287 389.702 436.09 374.854 447.581 370.325 cv
458.512 366.017 475.251 369.312 492.971 372.799 cv
515.879 377.308 539.568 381.971 549.891 368.964 cv
560.215 355.957 550.295 333.946 540.702 312.66 cv
533.281 296.194 526.272 280.641 527.986 269.018 cv
529.787 256.797 541.795 242.906 553.408 229.471 cv
568.34 212.199 583.78 194.336 578.007 179.686 cv
572.489 165.688 550.62 163.31 527.466 160.793 cv
509.367 158.827 490.654 156.792 480.422 148.671 cv
470.19 140.551 463.96 122.787 457.934 105.609 cv
450.226 83.6312 442.945 62.8724 428.06 60.6781 cv
412.478 58.3812 398.591 77.473 385.159 95.9378 cv
374.713 110.298 363.91 125.147 352.419 129.676 cv
341.489 133.984 324.751 130.69 307.029 127.201 cv
295.308 124.893 283.381 122.545 273.146 122.545 cv
cp
374.51 439.761 mo
373.646 439.761 372.779 439.699 371.904 439.57 cv
365.148 438.574 359.309 433.568 354.054 424.265 cv
349.371 415.975 345.537 405.044 341.83 394.474 cv
335.817 377.328 329.599 359.6 319.424 351.524 cv
309.248 343.448 290.57 341.417 272.508 339.454 cv
261.371 338.244 249.855 336.993 240.718 334.314 cv
230.466 331.309 224.265 326.759 221.761 320.406 cv
215.932 305.615 231.423 287.695 246.403 270.365 cv
257.992 256.957 269.977 243.094 271.768 230.946 cv
273.47 219.396 266.476 203.874 259.07 187.443 cv
249.446 166.088 239.494 144.006 249.912 130.879 cv
260.331 117.753 284.095 122.431 307.078 126.955 cv
324.762 130.436 341.465 133.723 352.327 129.444 cv
363.751 124.941 374.532 110.122 384.957 95.7904 cv
398.433 77.266 412.376 58.1205 428.096 60.43 cv
434.853 61.4261 440.692 66.432 445.946 75.7347 cv
450.629 84.0248 454.463 94.9554 458.171 105.527 cv
464.184 122.671 470.402 140.4 480.577 148.476 cv
490.752 156.552 509.43 158.582 527.493 160.545 cv
538.629 161.755 550.145 163.007 559.282 165.686 cv
569.534 168.691 575.735 173.241 578.239 179.594 cv
584.069 194.386 568.578 212.305 553.598 229.635 cv
542.008 243.042 530.024 256.906 528.233 269.055 cv
526.53 280.605 533.525 296.125 540.93 312.557 cv
550.554 333.911 560.506 355.993 550.087 369.12 cv
539.67 382.246 515.905 377.569 492.923 373.045 cv
475.239 369.564 458.536 366.276 447.673 370.557 cv
436.249 375.06 425.468 389.878 415.043 404.209 cv
402.317 421.703 389.18 439.76 374.51 439.761 cv
cp
f
391.603 406.512 mo
392.182 406.512 392.756 406.524 393.326 406.547 cv
400.247 406.836 407.547 408.951 414.607 410.995 cv
425.089 414.032 435.931 417.172 445.79 414.433 cv
455.534 411.728 463.174 403.486 470.561 395.514 cv
475.589 390.09 480.788 384.481 486.641 380.595 cv
492.19 376.912 499.171 374.415 505.921 372 cv
516.323 368.28 527.081 364.432 533.689 356.105 cv
540.298 347.779 541.603 336.429 542.864 325.452 cv
543.683 318.33 544.53 310.965 546.857 304.725 cv
549.312 298.142 553.594 291.805 557.736 285.677 cv
563.821 276.673 570.113 267.362 570.535 257.259 cv
570.963 247.033 565.444 237.19 560.108 227.671 cv
556.513 221.26 552.797 214.63 550.943 207.954 cv
549.121 201.392 548.896 193.875 548.679 186.607 cv
548.35 175.63 548.01 164.281 542.26 155.618 cv
536.788 147.372 527.137 142.907 516.921 138.179 cv
510.104 135.026 503.055 131.764 497.402 127.277 cv
491.749 122.79 486.972 116.665 482.352 110.744 cv
475.428 101.867 468.888 93.4828 459.616 90.0248 cv
449.873 86.3929 438.745 88.639 427.979 90.8099 cv
420.851 92.2484 413.48 93.7367 406.674 93.4525 cv
399.752 93.1634 392.452 91.0492 385.391 89.0042 cv
374.91 85.9691 364.071 82.8314 354.21 85.5667 cv
344.466 88.2718 336.827 96.514 329.439 104.486 cv
324.411 109.91 319.213 115.519 313.359 119.405 cv
307.81 123.087 300.83 125.584 294.079 127.999 cv
283.676 131.72 272.92 135.568 266.311 143.895 cv
259.702 152.222 258.398 163.572 257.135 174.547 cv
256.317 181.67 255.469 189.035 253.143 195.276 cv
250.688 201.858 246.406 208.195 242.265 214.323 cv
236.179 223.327 229.887 232.639 229.465 242.742 cv
229.038 252.967 234.556 262.81 239.892 272.329 cv
243.487 278.741 247.204 285.37 249.057 292.045 cv
250.879 298.608 251.104 306.124 251.321 313.394 cv
251.65 324.37 251.989 335.72 257.739 344.383 cv
263.213 352.628 272.863 357.093 283.08 361.821 cv
289.897 364.975 296.945 368.237 302.598 372.723 cv
308.251 377.209 313.028 383.333 317.648 389.256 cv
324.571 398.133 331.112 406.517 340.383 409.975 cv
350.127 413.607 361.257 411.36 372.021 409.19 cv
378.551 407.871 385.287 406.512 391.603 406.512 cv
cp
437.612 415.734 mo
430.067 415.734 422.207 413.457 414.537 411.236 cv
407.492 409.196 400.207 407.085 393.316 406.797 cv
386.545 406.518 379.185 407.998 372.07 409.435 cv
361.272 411.613 350.105 413.867 340.297 410.209 cv
330.958 406.727 324.397 398.316 317.451 389.41 cv
312.84 383.499 308.072 377.387 302.443 372.918 cv
296.814 368.451 289.779 365.196 282.975 362.048 cv
272.725 357.305 263.043 352.826 257.531 344.522 cv
251.742 335.798 251.401 324.412 251.071 313.402 cv
250.854 306.147 250.63 298.646 248.816 292.112 cv
246.971 285.466 243.261 278.85 239.674 272.452 cv
234.321 262.902 228.785 253.028 229.215 242.732 cv
229.64 232.557 235.953 223.216 242.057 214.183 cv
246.191 208.067 250.465 201.743 252.908 195.188 cv
255.225 188.976 256.032 181.953 256.887 174.519 cv
258.153 163.508 259.463 152.122 266.115 143.739 cv
272.768 135.357 283.559 131.496 293.995 127.764 cv
301.041 125.244 307.697 122.863 313.22 119.196 cv
319.049 115.327 324.238 109.729 329.256 104.316 cv
336.667 96.3187 344.331 88.0501 354.143 85.3265 cv
364.072 82.5687 374.945 85.7171 385.461 88.764 cv
392.507 90.805 399.793 92.9144 406.685 93.2025 cv
413.46 93.4886 420.816 92.0013 427.93 90.5658 cv
438.728 88.3851 449.894 86.1312 459.703 89.7904 cv
469.042 93.2728 475.603 101.684 482.549 110.589 cv
487.16 116.5 491.927 122.613 497.557 127.081 cv
503.187 131.549 510.222 134.804 517.026 137.952 cv
527.276 142.696 536.957 147.175 542.468 155.479 cv
548.258 164.202 548.599 175.587 548.928 186.599 cv
549.146 193.853 549.37 201.354 551.184 207.888 cv
553.029 214.535 556.738 221.151 560.326 227.549 cv
565.679 237.098 571.215 246.973 570.785 257.269 cv
570.36 267.444 564.048 276.784 557.943 285.817 cv
553.81 291.933 549.536 298.257 547.091 304.813 cv
544.775 311.025 543.968 318.046 543.113 325.481 cv
541.847 336.493 540.538 347.878 533.885 356.261 cv
533.787 356.183 li
533.885 356.261 li
527.232 364.643 516.441 368.503 506.005 372.236 cv
498.959 374.756 492.303 377.137 486.779 380.804 cv
480.951 384.672 475.762 390.271 470.744 395.684 cv
463.333 403.681 455.669 411.95 445.857 414.673 cv
443.17 415.419 440.412 415.734 437.612 415.734 cv
cp
.309804 1 .976471 rgb
f
gsave
800 500 mo
.000200272 500 li
.000200272 .000400543 li
800 .000400543 li
800 500 li
clp
457.358 318.344 mo
457.544 318.673 li
457.873 318.487 li
457.687 318.158 li
457.358 318.344 li
cp
457.167 320.036 mo
455.994 317.967 li
458.064 316.794 li
459.236 318.864 li
457.167 320.036 li
cp
f
463.535 331.892 mo
465.687 334.543 li
468.339 332.391 li
466.186 329.74 li
463.535 331.892 li
cp
465.541 335.95 mo
462.129 331.745 li
466.333 328.333 li
469.745 332.537 li
465.541 335.95 li
cp
f
481.955 314.984 mo
483.75 316.593 li
485.359 314.798 li
483.565 313.19 li
481.955 314.984 li
cp
483.827 318.005 mo
480.543 315.06 li
483.487 311.778 li
486.771 314.722 li
483.827 318.005 li
cp
f
482.663 315.141 mo
485.438 316.697 li
486.994 313.921 li
484.219 312.366 li
482.663 315.141 li
cp
485.821 318.058 mo
481.302 315.524 li
483.836 311.004 li
488.356 313.538 li
485.821 318.058 li
cp
f
500.669 292.675 mo
502.266 293.291 li
502.883 291.694 li
501.285 291.077 li
500.669 292.675 li
cp
502.839 294.584 mo
499.376 293.247 li
500.713 289.785 li
504.176 291.121 li
502.839 294.584 li
cp
f
483.072 268.927 mo
483.828 269.052 li
483.953 268.296 li
483.197 268.171 li
483.072 268.927 li
cp
484.653 270.202 mo
481.923 269.751 li
482.373 267.021 li
485.103 267.472 li
484.653 270.202 li
cp
f
512.535 264.436 mo
512.538 264.727 li
512.829 264.724 li
512.826 264.433 li
512.535 264.436 li
cp
511.549 265.739 mo
511.523 263.448 li
513.815 263.421 li
513.841 265.712 li
511.549 265.739 li
cp
f
507.338 238.525 mo
507.444 239.231 li
508.148 239.125 li
508.042 238.419 li
507.338 238.525 li
cp
506.603 240.368 mo
506.201 237.685 li
508.883 237.283 li
509.285 239.965 li
506.603 240.368 li
cp
f
472.463 219.068 mo
473.468 221.848 li
476.249 220.843 li
475.242 218.063 li
472.463 219.068 li
cp
472.868 223.129 mo
471.182 218.468 li
475.843 216.782 li
477.529 221.443 li
472.868 223.129 li
cp
f
480.048 204.107 mo
480.093 204.185 li
480.172 204.139 li
480.126 204.061 li
480.048 204.107 li
cp
479.738 205.554 mo
478.679 203.751 li
480.482 202.692 li
481.54 204.494 li
479.738 205.554 li
cp
f
460.523 199.566 mo
461.716 201.033 li
463.182 199.84 li
461.989 198.373 li
460.523 199.566 li
cp
461.571 202.439 mo
459.117 199.421 li
462.134 196.967 li
464.588 199.985 li
461.571 202.439 li
cp
f
463.886 195.8 mo
466.294 197.915 li
468.409 195.508 li
466.001 193.392 li
463.886 195.8 li
cp
466.385 199.327 mo
462.475 195.892 li
465.91 191.98 li
469.82 195.416 li
466.385 199.327 li
cp
f
474.998 168.349 mo
473.809 167.677 li
474.479 166.49 li
475.668 167.159 li
474.998 168.349 li
cp
f
430.48 192.186 mo
429.294 191.762 li
429.715 190.578 li
430.9 190.997 li
430.48 192.186 li
cp
f
427.219 171.885 mo
429.459 172.265 li
429.838 170.026 li
427.599 169.646 li
427.219 171.885 li
cp
430.277 173.419 mo
426.066 172.703 li
426.781 168.494 li
430.991 169.207 li
430.277 173.419 li
cp
f
404.209 174.835 mo
404.473 174.838 li
404.477 174.575 li
404.213 174.571 li
404.209 174.835 li
cp
405.459 175.852 mo
403.195 175.822 li
403.227 173.557 li
405.49 173.588 li
405.459 175.852 li
cp
f
376.6 165.428 mo
376.92 167.11 li
378.602 166.79 li
378.282 165.109 li
376.6 165.428 li
cp
376.124 168.28 mo
375.431 164.633 li
379.078 163.939 li
379.771 167.585 li
376.124 168.28 li
cp
f
353.162 155.965 mo
353.829 157.989 li
355.852 157.322 li
355.185 155.298 li
353.162 155.965 li
cp
353.193 159.252 mo
351.899 155.328 li
355.821 154.035 li
357.115 157.958 li
353.193 159.252 li
cp
f
333.218 163.966 mo
332.442 162.578 li
333.829 161.802 li
334.606 163.19 li
333.218 163.966 li
cp
f
349.372 170.576 mo
350.339 171.816 li
351.579 170.85 li
350.612 169.61 li
349.372 170.576 li
cp
350.165 173.22 mo
347.968 170.402 li
350.786 168.205 li
352.983 171.024 li
350.165 173.22 li
cp
f
339.544 169.934 mo
341.473 171.641 li
343.18 169.712 li
341.252 168.005 li
339.544 169.934 li
cp
341.559 173.053 mo
338.132 170.02 li
341.166 166.593 li
344.591 169.626 li
341.559 173.053 li
cp
f
311.775 198.402 mo
313.928 199.71 li
315.237 197.557 li
313.085 196.248 li
311.775 198.402 li
cp
314.263 201.085 mo
310.401 198.736 li
312.75 194.873 li
316.612 197.223 li
314.263 201.085 li
cp
f
315.719 217.073 mo
316.804 217.485 li
317.217 216.401 li
316.133 215.989 li
315.719 217.073 li
cp
317.383 218.776 mo
314.429 217.651 li
315.553 214.698 li
318.507 215.823 li
317.383 218.776 li
cp
f
311.705 231.005 mo
314.818 231.651 li
315.463 228.537 li
312.351 227.892 li
311.705 231.005 li
cp
315.594 232.832 mo
310.523 231.781 li
311.574 226.71 li
316.646 227.762 li
315.594 232.832 li
cp
f
318.812 225.663 mo
318.915 225.665 li
318.918 225.563 li
318.814 225.56 li
318.812 225.663 li
cp
319.893 226.687 mo
317.79 226.642 li
317.836 224.538 li
319.939 224.584 li
319.893 226.687 li
cp
f
306.115 287.581 mo
305.949 286.477 li
307.061 286.305 li
307.222 287.42 li
306.115 287.581 li
cp
f
306.511 267.86 mo
307.536 270.691 li
310.367 269.666 li
309.342 266.835 li
306.511 267.86 li
cp
306.936 271.972 mo
305.23 267.26 li
309.942 265.554 li
311.647 270.266 li
306.936 271.972 li
cp
f
307.449 286.806 mo
308.65 288.902 li
310.745 287.701 li
309.544 285.605 li
307.449 286.806 li
cp
308.28 290.267 mo
306.084 286.437 li
309.914 284.24 li
312.111 288.07 li
308.28 290.267 li
cp
f
339.804 322.07 mo
338.77 320.755 li
340.085 319.722 li
341.118 321.036 li
339.804 322.07 li
cp
f
368.846 323.717 mo
370.074 324.726 li
371.084 323.497 li
369.856 322.489 li
368.846 323.717 li
cp
370.212 326.134 mo
367.439 323.854 li
369.718 321.08 li
372.491 323.361 li
370.212 326.134 li
cp
f
353.413 333.697 mo
353.745 333.888 li
353.936 333.556 li
353.604 333.365 li
353.413 333.697 li
cp
354.112 335.253 mo
352.048 334.064 li
353.237 331.999 li
355.301 333.189 li
354.112 335.253 li
cp
f
367.027 329.92 mo
365.58 329.333 li
366.166 327.886 li
367.613 328.473 li
367.027 329.92 li
cp
f
390.628 316.849 mo
392.868 317.263 li
393.283 315.022 li
391.042 314.608 li
390.628 316.849 li
cp
393.67 318.429 mo
389.463 317.65 li
390.24 313.442 li
394.448 314.221 li
393.67 318.429 li
cp
f
413.52 347.906 mo
414.762 347.918 li
414.775 346.676 li
413.532 346.663 li
413.52 347.906 li
cp
415.752 348.928 mo
412.51 348.896 li
412.543 345.654 li
415.785 345.686 li
415.752 348.928 li
cp
f
428.576 321.855 mo
429.026 324.473 li
431.643 324.023 li
431.194 321.405 li
428.576 321.855 li
cp
428.209 325.627 mo
427.422 321.038 li
432.01 320.25 li
432.798 324.839 li
428.209 325.627 li
cp
f
416.968 324.957 mo
416.495 323.534 li
417.919 323.062 li
418.391 324.486 li
416.968 324.957 li
cp
f
278.151 299.831 mo
279.589 304.056 li
283.814 302.618 li
282.376 298.395 li
278.151 299.831 li
cp
278.964 305.326 mo
276.883 299.206 li
283.001 297.125 li
285.082 303.243 li
278.964 305.326 li
cp
f
272.654 304.753 mo
274.237 307.343 li
276.827 305.76 li
275.245 303.17 li
272.654 304.753 li
cp
273.905 308.718 mo
271.279 304.421 li
275.577 301.795 li
278.202 306.092 li
273.905 308.718 li
cp
f
307.424 346.989 mo
311.303 349.075 li
313.388 345.195 li
309.509 343.109 li
307.424 346.989 li
cp
311.71 350.428 mo
306.069 347.395 li
309.102 341.755 li
314.743 344.786 li
311.71 350.428 li
cp
f
353.191 333.155 mo
357.428 334.543 li
358.817 330.306 li
354.579 328.917 li
353.191 333.155 li
cp
358.067 335.805 mo
351.929 333.793 li
353.941 327.656 li
360.078 329.667 li
358.067 335.805 li
cp
f
340.75 329.093 mo
343.497 329.708 li
344.112 326.962 li
341.365 326.347 li
340.75 329.093 li
cp
344.254 330.902 mo
339.556 329.851 li
340.608 325.152 li
345.306 326.204 li
344.254 330.902 li
cp
f
372.996 357.02 mo
377.521 358.681 li
379.182 354.155 li
374.657 352.494 li
372.996 357.02 li
cp
378.115 359.964 mo
371.713 357.614 li
374.063 351.211 li
380.466 353.561 li
378.115 359.964 li
cp
f
394.764 343.676 mo
395.649 347.547 li
399.52 346.662 li
398.635 342.791 li
394.764 343.676 li
cp
394.897 348.744 mo
393.567 342.924 li
399.387 341.594 li
400.717 347.414 li
394.897 348.744 li
cp
f
393.335 372.001 mo
394.246 374.706 li
396.951 373.795 li
396.04 371.091 li
393.335 372.001 li
cp
393.617 375.974 mo
392.068 371.372 li
396.669 369.824 li
398.218 374.424 li
393.617 375.974 li
cp
f
412.003 332.608 mo
413.418 335.306 li
416.117 333.891 li
414.702 331.192 li
412.003 332.608 li
cp
412.997 336.656 mo
410.653 332.186 li
415.123 329.842 li
417.466 334.313 li
412.997 336.656 li
cp
f
470.741 342.074 mo
472.326 345.79 li
476.043 344.205 li
474.458 340.49 li
470.741 342.074 li
cp
471.799 347.103 mo
469.429 341.546 li
474.986 339.177 li
477.355 344.733 li
471.799 347.103 li
cp
f
482.807 351.217 mo
486.196 354.544 li
489.523 351.157 li
486.134 347.828 li
482.807 351.217 li
cp
486.209 355.958 mo
481.393 351.231 li
486.122 346.414 li
490.937 351.143 li
486.209 355.958 li
cp
f
490.719 343.473 mo
492.971 344.761 li
494.26 342.509 li
492.008 341.221 li
490.719 343.473 li
cp
493.342 346.126 mo
489.354 343.844 li
491.637 339.856 li
495.624 342.138 li
493.342 346.126 li
cp
f
518.937 324.098 mo
523.164 326.257 li
525.323 322.031 li
521.096 319.871 li
518.937 324.098 li
cp
523.599 327.603 mo
517.591 324.534 li
520.661 318.526 li
526.669 321.595 li
523.599 327.603 li
cp
f
505.393 310.732 mo
509.687 311.837 li
510.792 307.542 li
506.498 306.437 li
505.393 310.732 li
cp
510.406 313.054 mo
504.175 311.451 li
505.779 305.22 li
512.009 306.824 li
510.406 313.054 li
cp
f
536.418 275.104 mo
539.467 275.201 li
539.564 272.152 li
536.514 272.055 li
536.418 275.104 li
cp
540.435 276.232 mo
535.387 276.073 li
535.547 271.024 li
540.595 271.183 li
540.435 276.232 li
cp
f
551.695 251.197 mo
552.555 255.009 li
556.368 254.149 li
555.508 250.336 li
551.695 251.197 li
cp
551.799 256.204 mo
550.5 250.441 li
556.263 249.141 li
557.563 254.905 li
551.799 256.204 li
cp
f
491.423 227.16 mo
492.926 231.121 li
496.888 229.618 li
495.385 225.656 li
491.423 227.16 li
cp
492.346 232.411 mo
490.133 226.579 li
495.965 224.367 li
498.178 230.198 li
492.346 232.411 li
cp
f
499.88 191.486 mo
501.035 195.841 li
505.392 194.685 li
504.236 190.329 li
499.88 191.486 li
cp
500.325 197.064 mo
498.657 190.775 li
504.946 189.107 li
506.614 195.396 li
500.325 197.064 li
cp
f
524.067 190.386 mo
526.555 194.157 li
530.325 191.667 li
527.837 187.897 li
524.067 190.386 li
cp
526.272 195.541 mo
522.681 190.103 li
528.12 186.512 li
531.711 191.951 li
526.272 195.541 li
cp
f
503.641 133.244 mo
504.859 135.26 li
506.876 134.042 li
505.658 132.025 li
503.641 133.244 li
cp
504.519 136.633 mo
502.268 132.904 li
505.997 130.652 li
508.249 134.382 li
504.519 136.633 li
cp
f
447.251 147.205 mo
450.91 150.212 li
453.916 146.554 li
450.257 143.547 li
447.251 147.205 li
cp
451.048 151.62 mo
445.843 147.344 li
450.119 142.139 li
455.323 146.415 li
451.048 151.62 li
cp
f
461.218 129.418 mo
465.528 131.226 li
467.335 126.916 li
463.026 125.109 li
461.218 129.418 li
cp
466.063 132.535 mo
459.909 129.953 li
462.49 123.8 li
468.644 126.381 li
466.063 132.535 li
cp
f
447.803 105.412 mo
451.685 107.03 li
453.301 103.149 li
449.42 101.532 li
447.803 105.412 li
cp
452.223 108.336 mo
446.496 105.952 li
448.882 100.223 li
454.609 102.61 li
452.223 108.336 li
cp
f
416.957 133.393 mo
421.548 135.354 li
423.508 130.764 li
418.917 128.802 li
416.957 133.393 li
cp
422.074 136.666 mo
415.644 133.92 li
418.391 127.49 li
424.82 130.237 li
422.074 136.666 li
cp
f
405.279 112.755 mo
405.664 115.16 li
408.069 114.776 li
407.683 112.37 li
405.279 112.755 li
cp
404.835 116.307 mo
404.133 111.927 li
408.512 111.224 li
409.215 115.604 li
404.835 116.307 li
cp
f
405.177 109.703 mo
405.719 112.011 li
408.026 111.469 li
407.484 109.161 li
405.177 109.703 li
cp
404.974 113.212 mo
403.975 108.959 li
408.229 107.958 li
409.228 112.213 li
404.974 113.212 li
cp
f
370.032 138.869 mo
370.752 141.512 li
373.395 140.792 li
372.674 138.151 li
370.032 138.869 li
cp
370.05 142.741 mo
368.804 138.168 li
373.377 136.922 li
374.622 141.494 li
370.05 142.741 li
cp
f
318.945 162.083 mo
321.115 165.943 li
324.974 163.771 li
322.803 159.912 li
318.945 162.083 li
cp
320.735 167.304 mo
317.583 161.702 li
323.184 158.551 li
326.337 164.152 li
320.735 167.304 li
cp
f
302.562 173.74 mo
304.418 175.669 li
306.348 173.813 li
304.491 171.883 li
302.562 173.74 li
cp
304.391 177.083 mo
301.148 173.712 li
304.519 170.469 li
307.762 173.84 li
304.391 177.083 li
cp
f
302.502 184.189 mo
304.214 185.577 li
305.603 183.865 li
303.89 182.476 li
302.502 184.189 li
cp
304.361 186.984 mo
301.095 184.335 li
303.744 181.07 li
307.009 183.718 li
304.361 186.984 li
cp
f
262.692 181.159 mo
266.709 183.049 li
268.599 179.032 li
264.582 177.141 li
262.692 181.159 li
cp
267.187 184.379 mo
261.361 181.637 li
264.104 175.811 li
269.93 178.553 li
267.187 184.379 li
cp
f
269.938 226.803 mo
273.397 228.846 li
275.44 225.387 li
271.98 223.344 li
269.938 226.803 li
cp
273.75 230.215 mo
268.569 227.157 li
271.628 221.975 li
276.809 225.034 li
273.75 230.215 li
cp
f
288.181 184.001 mo
291.156 184.59 li
291.746 181.616 li
288.771 181.027 li
288.181 184.001 li
cp
291.943 185.766 mo
287.007 184.788 li
287.984 179.851 li
292.921 180.828 li
291.943 185.766 li
cp
f
285.824 222.674 mo
287.867 222.823 li
288.016 220.78 li
285.974 220.631 li
285.824 222.674 li
cp
288.792 223.893 mo
284.754 223.598 li
285.049 219.561 li
289.086 219.856 li
288.792 223.893 li
cp
f
266.807 233.462 mo
268.08 236.635 li
271.252 235.363 li
269.979 232.19 li
266.807 233.462 li
cp
267.524 237.936 mo
265.506 232.908 li
270.535 230.889 li
272.553 235.917 li
267.524 237.936 li
cp
f
276.907 288.164 mo
277.921 291.981 li
281.737 290.967 li
280.722 287.151 li
276.907 288.164 li
cp
277.211 293.203 mo
275.684 287.455 li
281.432 285.928 li
282.96 291.676 li
277.211 293.203 li
cp
f
510.542 423.13 mo
511.038 424.01 li
511.917 423.514 li
511.421 422.635 li
510.542 423.13 li
cp
510.657 425.371 mo
509.18 422.749 li
511.802 421.274 li
513.279 423.895 li
510.657 425.371 li
cp
1 .0941176 .290196 rgb
f
470.941 433.464 mo
469.96 432.27 li
471.154 431.289 li
472.133 432.484 li
470.941 433.464 li
cp
f
533.893 346.359 mo
538.304 350.14 li
542.084 345.729 li
537.674 341.949 li
533.893 346.359 li
cp
538.412 351.55 mo
532.483 346.468 li
537.565 340.538 li
543.494 345.619 li
538.412 351.55 li
cp
f
548.963 323.79 mo
555.545 327.684 li
559.439 321.101 li
552.856 317.207 li
548.963 323.79 li
cp
555.897 329.053 mo
547.592 324.142 li
552.504 315.838 li
560.809 320.749 li
555.897 329.053 li
cp
f
572.632 370.388 mo
571.328 369.897 li
571.818 368.592 li
573.121 369.083 li
572.632 370.388 li
cp
f
590.163 321.418 mo
598.284 322.939 li
599.804 314.817 li
591.683 313.296 li
590.163 321.418 li
cp
599.083 324.105 mo
588.996 322.217 li
590.884 312.13 li
600.971 314.018 li
599.083 324.105 li
cp
f
622.132 257.979 mo
626.773 258.029 li
626.821 253.387 li
622.18 253.338 li
622.132 257.979 li
cp
627.762 259.038 mo
621.121 258.969 li
621.191 252.328 li
627.832 252.397 li
627.762 259.038 li
cp
f
575.716 265.864 mo
576.98 273.497 li
584.614 272.234 li
583.35 264.6 li
575.716 265.864 li
cp
576.156 274.648 mo
574.567 265.041 li
584.174 263.45 li
585.764 273.058 li
576.156 274.648 li
cp
f
581.838 146.318 mo
581.371 144.994 li
582.697 144.527 li
583.163 145.854 li
581.838 146.318 li
cp
f
573.363 201.55 mo
574.548 203.652 li
576.649 202.467 li
575.465 200.366 li
573.363 201.55 li
cp
574.167 205.013 mo
572.001 201.169 li
575.845 199.004 li
578.011 202.848 li
574.167 205.013 li
cp
f
569.718 145.662 mo
572.797 149.41 li
576.545 146.331 li
573.466 142.584 li
569.718 145.662 li
cp
572.659 150.818 mo
568.311 145.524 li
573.604 141.176 li
577.952 146.47 li
572.659 150.818 li
cp
f
546.254 137.508 mo
546.26 137.513 li
546.265 137.507 li
546.259 137.502 li
546.254 137.508 li
cp
546.368 138.923 mo
544.844 137.618 li
546.151 136.092 li
547.675 137.4 li
546.368 138.923 li
cp
f
503.469 109.09 mo
504.45 109.67 li
505.029 108.689 li
504.049 108.109 li
503.469 109.09 li
cp
504.801 111.039 mo
502.099 109.442 li
503.697 106.74 li
506.4 108.337 li
504.801 111.039 li
cp
f
434.462 57.7826 mo
440.956 60.224 li
443.398 53.7298 li
436.903 51.2875 li
434.462 57.7826 li
cp
441.54 61.5111 mo
433.174 58.3666 li
436.319 50.0003 li
444.686 53.1459 li
441.54 61.5111 li
cp
f
442.326 77.9906 mo
442.825 78.0843 li
442.918 77.5843 li
442.419 77.4906 li
442.326 77.9906 li
cp
443.624 79.2503 mo
441.159 78.7894 li
441.62 76.3246 li
444.085 76.7855 li
443.624 79.2503 li
cp
f
434.858 73.0287 mo
433.417 73.015 li
433.431 71.5726 li
434.873 71.5892 li
434.858 73.0287 li
cp
f
329.162 86.2621 mo
329.621 89.0345 li
332.394 88.5755 li
331.935 85.8031 li
329.162 86.2621 li
cp
328.798 90.1849 mo
328.013 85.4378 li
332.758 84.6527 li
333.544 89.3998 li
328.798 90.1849 li
cp
f
342.505 26.222 mo
344.64 32.2865 li
350.705 30.1507 li
348.57 24.0863 li
342.505 26.222 li
cp
344.029 33.5619 mo
341.229 25.6107 li
349.181 22.8109 li
351.981 30.7621 li
344.029 33.5619 li
cp
f
319.244 95.2806 mo
319.513 95.7582 li
319.991 95.4886 li
319.722 95.0111 li
319.244 95.2806 li
cp
319.133 97.1214 mo
317.882 94.8998 li
320.102 93.6478 li
321.354 95.8695 li
319.133 97.1214 li
cp
f
251.928 107.689 mo
257.012 113.879 li
263.204 108.794 li
258.119 102.604 li
251.928 107.689 li
cp
256.875 115.287 mo
250.521 107.55 li
258.257 101.196 li
264.611 108.933 li
256.875 115.287 li
cp
f
269.837 145.302 mo
274.507 149.306 li
278.51 144.636 li
273.84 140.632 li
269.837 145.302 li
cp
274.615 150.716 mo
268.426 145.411 li
273.732 139.222 li
279.92 144.527 li
274.615 150.716 li
cp
f
173.359 166.14 mo
174.074 166.563 li
174.497 165.847 li
173.781 165.424 li
173.359 166.14 li
cp
174.425 167.932 mo
171.988 166.492 li
173.43 164.055 li
175.867 165.495 li
174.425 167.932 li
cp
f
245.463 213.052 mo
247.315 213.748 li
248.01 211.896 li
246.159 211.2 li
245.463 213.052 li
cp
247.899 215.036 mo
244.174 213.636 li
245.575 209.912 li
249.299 211.312 li
247.899 215.036 li
cp
f
182.265 265.8 mo
188.54 266.975 li
189.715 260.7 li
183.439 259.525 li
182.265 265.8 li
cp
189.339 268.143 mo
181.098 266.599 li
182.64 258.359 li
190.882 259.901 li
189.339 268.143 li
cp
f
218.144 252.674 mo
219.119 252.685 li
219.129 251.709 li
218.153 251.699 li
218.144 252.674 li
cp
220.108 253.695 mo
217.133 253.664 li
217.164 250.689 li
220.14 250.719 li
220.108 253.695 li
cp
f
225.352 285.69 mo
225.937 289.226 li
229.474 288.641 li
228.888 285.105 li
225.352 285.69 li
cp
225.114 290.376 mo
224.202 284.866 li
229.712 283.954 li
230.623 289.463 li
225.114 290.376 li
cp
f
203.409 277.195 mo
204.706 280.879 li
208.391 279.581 li
207.093 275.897 li
203.409 277.195 li
cp
204.095 282.155 mo
202.133 276.583 li
207.705 274.621 li
209.666 280.193 li
204.095 282.155 li
cp
f
263.192 367.256 mo
263.759 368.263 li
264.765 367.696 li
264.197 366.689 li
263.192 367.256 li
cp
263.378 369.624 mo
261.829 366.875 li
264.578 365.327 li
266.127 368.077 li
263.378 369.624 li
cp
f
263.358 362.44 mo
267.223 367.144 li
271.929 363.28 li
268.064 358.575 li
263.358 362.44 li
cp
267.085 368.552 mo
261.951 362.301 li
268.202 357.166 li
273.336 363.418 li
267.085 368.552 li
cp
f
280.47 385.075 mo
285.146 389.082 li
289.154 384.407 li
284.478 380.399 li
280.47 385.075 li
cp
285.254 390.493 mo
279.06 385.182 li
284.369 378.989 li
290.564 384.297 li
285.254 390.493 li
cp
f
255.152 393.186 mo
255.162 393.192 li
255.168 393.181 li
255.158 393.175 li
255.152 393.186 li
cp
255.514 394.561 mo
253.783 393.537 li
254.806 391.806 li
256.538 392.829 li
255.514 394.561 li
cp
f
341.252 475.013 mo
343.633 475.908 li
344.528 473.527 li
342.147 472.631 li
341.252 475.013 li
cp
344.217 477.195 mo
339.964 475.597 li
341.563 471.344 li
345.816 472.943 li
344.217 477.195 li
cp
f
352.015 414.505 mo
354.42 414.955 li
354.87 412.55 li
352.465 412.1 li
352.015 414.505 li
cp
355.218 416.121 mo
350.848 415.304 li
351.666 410.934 li
356.037 411.751 li
355.218 416.121 li
cp
f
369.669 424.44 mo
373.545 424.481 li
373.585 420.605 li
369.71 420.564 li
369.669 424.44 li
cp
374.534 425.491 mo
368.658 425.43 li
368.72 419.554 li
374.596 419.615 li
374.534 425.491 li
cp
f
449.641 468.774 mo
450.511 474.029 li
455.767 473.159 li
454.897 467.904 li
449.641 468.774 li
cp
449.688 475.179 mo
448.491 467.95 li
455.72 466.753 li
456.917 473.983 li
449.688 475.179 li
cp
f
492.607 455.942 mo
493.086 457.302 li
494.447 456.823 li
493.967 455.462 li
492.607 455.942 li
cp
492.475 458.577 mo
491.332 455.33 li
494.579 454.187 li
495.722 457.434 li
492.475 458.577 li
cp
f
451.566 77.3363 mo
452.285 77.5365 li
452.486 76.8167 li
451.767 76.6166 li
451.566 77.3363 li
cp
452.979 78.7689 mo
450.334 78.0296 li
451.072 75.3841 li
453.718 76.1234 li
452.979 78.7689 li
cp
.309804 1 .976471 rgb
f
482.948 97.0121 mo
481.482 96.8695 li
481.625 95.4037 li
483.092 95.5462 li
482.948 97.0121 li
cp
f
385.444 105.862 mo
385.821 110.766 li
390.725 110.389 li
390.348 105.486 li
385.444 105.862 li
cp
384.9 111.84 mo
384.37 104.942 li
391.268 104.411 li
391.799 111.309 li
384.9 111.84 li
cp
f
359.651 110.32 mo
361.271 116.632 li
367.584 115.011 li
365.963 108.699 li
359.651 110.32 li
cp
360.551 117.849 mo
358.434 109.599 li
366.683 107.482 li
368.8 115.732 li
360.551 117.849 li
cp
f
381.119 73.5609 mo
380.565 72.3412 li
381.786 71.7845 li
382.341 73.0082 li
381.119 73.5609 li
cp
f
330.991 89.3431 mo
334.974 95.1605 li
340.792 91.1781 li
336.809 85.3597 li
330.991 89.3431 li
cp
334.714 96.5511 mo
329.601 89.0834 li
337.069 83.9691 li
342.182 91.4378 li
334.714 96.5511 li
cp
f
276.633 110.477 mo
279.364 113.266 li
282.153 110.535 li
279.422 107.746 li
276.633 110.477 li
cp
279.349 114.68 mo
275.219 110.461 li
279.437 106.332 li
283.567 110.55 li
279.349 114.68 li
cp
f
310.241 130.286 mo
315.603 134.126 li
319.442 128.763 li
314.08 124.924 li
310.241 130.286 li
cp
315.834 135.521 mo
308.845 130.517 li
313.849 123.53 li
320.838 128.533 li
315.834 135.521 li
cp
f
237.886 205.116 mo
236.668 204.531 li
237.251 203.312 li
238.471 203.897 li
237.886 205.116 li
cp
f
275.598 174.581 mo
277.491 175.11 li
278.02 173.216 li
276.127 172.688 li
275.598 174.581 li
cp
278.186 176.342 mo
274.366 175.275 li
275.433 171.455 li
279.253 172.523 li
278.186 176.342 li
cp
f
241.304 211.309 mo
245.37 211.707 li
245.768 207.643 li
241.703 207.244 li
241.304 211.309 li
cp
246.267 212.801 mo
240.212 212.207 li
240.806 206.151 li
246.861 206.744 li
246.267 212.801 li
cp
f
253.972 232.216 mo
253.827 230.346 li
255.698 230.202 li
255.841 232.072 li
253.972 232.216 li
cp
f
262.542 274.308 mo
262.756 275.14 li
263.588 274.926 li
263.374 274.094 li
262.542 274.308 li
cp
262.036 276.357 mo
261.324 273.587 li
264.094 272.877 li
264.805 275.647 li
262.036 276.357 li
cp
f
266.65 345.951 mo
269.087 351.324 li
274.46 348.886 li
272.023 343.514 li
266.65 345.951 li
cp
268.589 352.648 mo
265.326 345.452 li
272.521 342.19 li
275.784 349.384 li
268.589 352.648 li
cp
f
281.61 331.568 mo
281.786 331.825 li
282.042 331.65 li
281.866 331.393 li
281.61 331.568 li
cp
281.525 333.215 mo
280.22 331.308 li
282.126 330.002 li
283.432 331.91 li
281.525 333.215 li
cp
f
283.654 341.169 mo
282.687 340.18 li
283.674 339.212 li
284.643 340.202 li
283.654 341.169 li
cp
f
354.872 394.696 mo
356.752 396.041 li
358.097 394.161 li
356.218 392.816 li
354.872 394.696 li
cp
356.983 397.436 mo
353.477 394.926 li
355.987 391.421 li
359.493 393.931 li
356.983 397.436 li
cp
f
306.713 422.388 mo
311.635 424.746 li
313.993 419.825 li
309.071 417.466 li
306.713 422.388 li
cp
312.105 426.08 mo
305.379 422.857 li
308.602 416.132 li
315.327 419.354 li
312.105 426.08 li
cp
f
368.027 396.512 mo
368.36 396.605 li
368.453 396.272 li
368.12 396.179 li
368.027 396.512 li
cp
369.054 397.837 mo
366.794 397.207 li
367.425 394.947 li
369.685 395.578 li
369.054 397.837 li
cp
f
410.546 429.694 mo
417.345 430.361 li
418.012 423.562 li
411.213 422.895 li
410.546 429.694 li
cp
418.243 431.454 mo
409.453 430.592 li
410.315 421.801 li
419.105 422.663 li
418.243 431.454 li
cp
f
423.844 391.448 mo
424.244 396.648 li
429.445 396.248 li
429.045 391.048 li
423.844 391.448 li
cp
423.324 397.722 mo
422.77 390.528 li
429.965 389.974 li
430.519 397.168 li
423.324 397.722 li
cp
f
500.817 442.324 mo
500.964 442.897 li
501.537 442.749 li
501.39 442.176 li
500.817 442.324 li
cp
500.244 444.114 mo
499.6 441.605 li
502.11 440.959 li
502.755 443.47 li
500.244 444.114 li
cp
f
483.945 368.827 mo
484.601 370.273 li
486.048 369.617 li
485.391 368.17 li
483.945 368.827 li
cp
484.103 371.597 mo
482.62 368.328 li
485.888 366.846 li
487.372 370.115 li
484.103 371.597 li
cp
f
549.772 374.645 mo
552.833 379.116 li
557.304 376.055 li
554.243 371.584 li
549.772 374.645 li
cp
552.573 380.506 mo
548.383 374.385 li
554.503 370.194 li
558.694 376.315 li
552.573 380.506 li
cp
f
526.17 362.077 mo
526.672 362.588 li
527.184 362.086 li
526.682 361.575 li
526.17 362.077 li
cp
526.657 364.002 mo
524.756 362.061 li
526.697 360.16 li
528.598 362.102 li
526.657 364.002 li
cp
f
540.695 335.537 mo
543.122 337.275 li
544.86 334.848 li
542.433 333.111 li
540.695 335.537 li
cp
543.353 338.669 mo
539.3 335.768 li
542.202 331.716 li
546.255 334.618 li
543.353 338.669 li
cp
f
548.428 354.576 mo
551.372 355.987 li
552.782 353.042 li
549.839 351.631 li
548.428 354.576 li
cp
551.841 357.321 mo
547.094 355.046 li
549.369 350.297 li
554.116 352.572 li
551.841 357.321 li
cp
f
569.126 263.663 mo
569.966 263.898 li
570.201 263.057 li
569.361 262.823 li
569.126 263.663 li
cp
570.661 265.13 mo
567.893 264.359 li
568.666 261.59 li
571.434 262.364 li
570.661 265.13 li
cp
f
561.753 266.261 mo
566.89 266.765 li
567.394 261.629 li
562.257 261.125 li
561.753 266.261 li
cp
567.788 267.859 mo
560.66 267.16 li
561.36 260.032 li
568.487 260.731 li
567.788 267.859 li
cp
f
564.667 237.542 mo
565.067 242.748 li
570.273 242.349 li
569.873 237.142 li
564.667 237.542 li
cp
564.147 243.823 mo
563.592 236.622 li
570.793 236.068 li
571.347 243.269 li
564.147 243.823 li
cp
f
590.206 254.124 mo
589.739 252.303 li
591.559 251.836 li
592.027 253.658 li
590.206 254.124 li
cp
f
585.424 148.708 mo
586.282 150.602 li
588.176 149.743 li
587.318 147.849 li
585.424 148.708 li
cp
585.785 151.926 mo
584.099 148.21 li
587.815 146.525 li
589.501 150.241 li
585.785 151.926 li
cp
f
541.595 179.813 mo
542.722 181.459 li
544.369 180.332 li
543.242 178.686 li
541.595 179.813 li
cp
542.463 182.85 mo
540.205 179.553 li
543.502 177.295 li
545.759 180.592 li
542.463 182.85 li
cp
f
535.045 163.344 mo
537.31 165.658 li
539.623 163.392 li
537.358 161.078 li
535.045 163.344 li
cp
537.295 167.072 mo
533.631 163.328 li
537.373 159.664 li
541.037 163.408 li
537.295 167.072 li
cp
f
514.139 84.2835 mo
517.798 86.9037 li
520.417 83.2445 li
516.758 80.6244 li
514.139 84.2835 li
cp
518.028 88.2982 mo
512.743 84.514 li
516.528 79.2298 li
521.812 83.014 li
518.028 88.2982 li
cp
f
482.475 67.9017 mo
483.488 68.3871 li
483.973 67.3744 li
482.961 66.889 li
482.475 67.9017 li
cp
483.958 69.721 mo
481.141 68.3705 li
482.491 65.555 li
485.307 66.9037 li
483.958 69.721 li
cp
f
307.157 140.498 mo
307.749 141.543 li
308.794 140.952 li
308.202 139.907 li
307.157 140.498 li
cp
307.372 142.907 mo
305.794 140.121 li
308.579 138.543 li
310.157 141.328 li
307.372 142.907 li
cp
f
290.428 118.36 mo
294.242 123.058 li
298.941 119.244 li
295.127 114.545 li
290.428 118.36 li
cp
294.096 124.464 mo
289.022 118.213 li
295.273 113.139 li
300.347 119.39 li
294.096 124.464 li
cp
f
263.241 146.526 mo
266.551 149.494 li
269.521 146.183 li
266.21 143.215 li
263.241 146.526 li
cp
266.629 150.907 mo
261.829 146.602 li
266.133 141.803 li
270.933 146.107 li
266.629 150.907 li
cp
f
260.644 148.018 mo
265.598 150.795 li
268.375 145.842 li
263.422 143.065 li
260.644 148.018 li
cp
265.981 152.157 mo
259.283 148.401 li
263.039 141.703 li
269.736 145.459 li
265.981 152.157 li
cp
f
235.287 183.577 mo
238.396 184.777 li
239.596 181.667 li
236.487 180.468 li
235.287 183.577 li
cp
238.968 186.07 mo
233.994 184.149 li
235.915 179.175 li
240.889 181.095 li
238.968 186.07 li
cp
f
265.564 221.024 mo
267.362 221.321 li
267.659 219.523 li
265.861 219.226 li
265.564 221.024 li
cp
268.186 222.469 mo
264.415 221.848 li
265.037 218.076 li
268.808 218.699 li
268.186 222.469 li
cp
f
219.484 226.187 mo
219.496 227.25 li
220.559 227.239 li
220.548 226.175 li
219.484 226.187 li
cp
218.507 228.262 mo
218.472 225.199 li
221.536 225.163 li
221.571 228.227 li
218.507 228.262 li
cp
f
226.924 267.119 mo
227.181 268.835 li
228.897 268.578 li
228.64 266.862 li
226.924 267.119 li
cp
226.34 269.972 mo
225.786 266.28 li
229.481 265.725 li
230.035 269.418 li
226.34 269.972 li
cp
f
277.831 296.391 mo
279.641 301.393 li
284.643 299.584 li
282.834 294.582 li
277.831 296.391 li
cp
279.041 302.674 mo
276.551 295.791 li
283.434 293.301 li
285.924 300.184 li
279.041 302.674 li
cp
f
271.539 323.144 mo
271.915 323.784 li
272.554 323.409 li
272.178 322.769 li
271.539 323.144 li
cp
271.559 325.153 mo
270.171 322.788 li
272.535 321.4 li
273.923 323.764 li
271.559 325.153 li
cp
f
298.665 330.074 mo
300.946 332.878 li
303.751 330.598 li
301.47 327.792 li
298.665 330.074 li
cp
300.801 334.285 mo
297.258 329.929 li
301.614 326.386 li
305.158 330.743 li
300.801 334.285 li
cp
f
290.313 337.064 mo
294.609 340.837 li
298.382 336.542 li
294.087 332.77 li
290.313 337.064 li
cp
294.699 342.249 mo
288.902 337.156 li
293.996 331.358 li
299.793 336.451 li
294.699 342.249 li
cp
f
280.926 382.98 mo
279.548 382.202 li
280.325 380.823 li
281.704 381.6 li
280.926 382.98 li
cp
f
352.357 344.532 mo
351.027 344.056 li
351.499 342.727 li
352.83 343.198 li
352.357 344.532 li
cp
f
351.997 377.981 mo
356.162 378.688 li
356.869 374.523 li
352.704 373.816 li
351.997 377.981 li
cp
356.981 379.84 mo
350.844 378.799 li
351.885 372.661 li
358.023 373.704 li
356.981 379.84 li
cp
f
392.547 370.765 mo
393.566 370.78 li
393.58 369.761 li
392.561 369.747 li
392.547 370.765 li
cp
394.552 371.793 mo
391.533 371.751 li
391.575 368.734 li
394.593 368.775 li
394.552 371.793 li
cp
f
433.828 382.666 mo
434.451 385.94 li
437.724 385.318 li
437.102 382.044 li
433.828 382.666 li
cp
433.655 387.11 mo
432.659 381.871 li
437.898 380.874 li
438.893 386.113 li
433.655 387.11 li
cp
f
470.137 397.839 mo
471.39 401.637 li
475.189 400.384 li
473.935 396.586 li
470.137 397.839 li
cp
470.753 402.901 mo
468.874 397.202 li
474.572 395.323 li
476.451 401.021 li
470.753 402.901 li
cp
f
505.804 390.465 mo
504.856 388.77 li
506.551 387.824 li
507.499 389.517 li
505.804 390.465 li
cp
f
476.92 376.369 mo
478.831 378.821 li
481.283 376.91 li
479.372 374.458 li
476.92 376.369 li
cp
478.657 380.225 mo
475.516 376.196 li
479.546 373.054 li
482.687 377.083 li
478.657 380.225 li
cp
f
490.332 378.262 mo
493.86 381.385 li
496.984 377.858 li
493.456 374.735 li
490.332 378.262 li
cp
493.946 382.797 mo
488.921 378.348 li
493.37 373.323 li
498.395 377.772 li
493.946 382.797 li
cp
f
534.974 333.863 mo
538.924 336.264 li
541.326 332.315 li
537.376 329.913 li
534.974 333.863 li
cp
539.258 337.639 mo
533.6 334.197 li
537.041 328.538 li
542.7 331.981 li
539.258 337.639 li
cp
f
531.838 303.839 mo
534.129 304.71 li
535 302.419 li
532.71 301.548 li
531.838 303.839 li
cp
534.708 306.001 mo
530.548 304.417 li
532.131 300.257 li
536.29 301.841 li
534.708 306.001 li
cp
f
534.672 284.512 mo
540.227 285.664 li
541.379 280.108 li
535.824 278.955 li
534.672 284.512 li
cp
541.004 286.846 mo
533.489 285.287 li
535.048 277.774 li
542.562 279.332 li
541.004 286.846 li
cp
f
529.202 289.325 mo
529.964 289.341 li
529.981 288.579 li
529.218 288.563 li
529.202 289.325 li
cp
530.943 290.363 mo
528.18 290.303 li
528.241 287.541 li
531.002 287.601 li
530.943 290.363 li
cp
f
548.699 191.67 mo
548.523 190.489 li
549.705 190.308 li
549.879 191.49 li
548.699 191.67 li
cp
f
542.782 218.411 mo
544.623 223.494 li
549.706 221.653 li
547.865 216.57 li
542.782 218.411 li
cp
544.023 224.775 mo
541.501 217.811 li
548.465 215.288 li
550.987 222.252 li
544.023 224.775 li
cp
f
542.153 189.674 mo
544.368 193.538 li
548.232 191.323 li
546.017 187.458 li
542.153 189.674 li
cp
543.998 194.904 mo
540.787 189.303 li
546.387 186.093 li
549.597 191.692 li
543.998 194.904 li
cp
f
495.871 136.757 mo
495.916 136.815 li
495.974 136.77 li
495.929 136.712 li
495.871 136.757 li
cp
495.748 138.219 mo
494.467 136.589 li
496.097 135.308 li
497.378 136.938 li
495.748 138.219 li
cp
f
445.765 132.649 mo
448.189 134.639 li
450.18 132.216 li
447.757 130.226 li
445.765 132.649 li
cp
448.326 136.047 mo
444.358 132.786 li
447.619 128.818 li
451.588 132.079 li
448.326 136.047 li
cp
f
473.168 116.652 mo
474.215 117.255 li
474.818 116.207 li
473.771 115.605 li
473.168 116.652 li
cp
474.582 118.62 mo
471.802 117.019 li
473.404 114.24 li
476.183 115.84 li
474.582 118.62 li
cp
f
453.875 125.209 mo
452.118 124.496 li
452.831 122.739 li
454.588 123.452 li
453.875 125.209 li
cp
f
410.38 146.385 mo
414.547 147.156 li
415.318 142.989 li
411.151 142.218 li
410.38 146.385 li
cp
415.349 148.322 mo
409.215 147.186 li
410.349 141.052 li
416.483 142.188 li
415.349 148.322 li
cp
f
376.099 95.8822 mo
378.681 95.9085 li
378.707 93.3275 li
376.126 93.3001 li
376.099 95.8822 li
cp
379.67 96.9183 mo
375.09 96.8724 li
375.136 92.2904 li
379.718 92.3373 li
379.67 96.9183 li
cp
f
349.114 131.525 mo
349.933 136.294 li
354.703 135.476 li
353.884 130.705 li
349.114 131.525 li
cp
349.117 137.449 mo
347.959 130.708 li
354.7 129.551 li
355.857 136.292 li
349.117 137.449 li
cp
f
371.57 132.926 mo
371.003 131.221 li
372.709 130.653 li
373.276 132.361 li
371.57 132.926 li
cp
f
585.197 165.769 mo
587.686 173.082 li
594.999 170.594 li
592.51 163.282 li
585.197 165.769 li
cp
587.061 174.352 mo
583.929 165.144 li
593.135 162.012 li
596.268 171.219 li
587.061 174.352 li
cp
f
596.324 160.839 mo
599.163 165.486 li
603.81 162.647 li
600.971 157.999 li
596.324 160.839 li
cp
598.831 166.861 mo
594.949 160.507 li
601.303 156.624 li
605.185 162.979 li
598.831 166.861 li
cp
f
537.934 98.0746 mo
544.655 101.689 li
548.27 94.9662 li
541.548 91.3519 li
537.934 98.0746 li
cp
545.063 103.042 mo
536.579 98.4828 li
541.14 89.9984 li
549.624 94.5599 li
545.063 103.042 li
cp
f
465.403 121.924 mo
472.738 124.327 li
475.141 116.992 li
467.806 114.588 li
465.403 121.924 li
cp
473.377 125.589 mo
464.141 122.563 li
467.167 113.327 li
476.403 116.353 li
473.377 125.589 li
cp
f
488.91 127.3 mo
493.879 128.413 li
494.992 123.445 li
490.023 122.331 li
488.91 127.3 li
cp
494.636 129.609 mo
487.716 128.058 li
489.266 121.138 li
496.186 122.687 li
494.636 129.609 li
cp
f
432.867 83.8187 mo
440.656 86.6761 li
443.514 78.888 li
435.726 76.0296 li
432.867 83.8187 li
cp
441.25 87.9593 mo
431.584 84.4125 li
435.131 74.7464 li
444.798 78.2943 li
441.25 87.9593 li
cp
f
400.409 95.3832 mo
401.955 102.149 li
408.72 100.603 li
407.174 93.8373 li
400.409 95.3832 li
cp
401.203 103.346 mo
399.212 94.6312 li
407.926 92.64 li
409.917 101.355 li
401.203 103.346 li
cp
f
404.491 52.0824 mo
406.137 56.9691 li
411.025 55.3236 li
409.378 50.4369 li
404.491 52.0824 li
cp
405.508 58.2367 mo
403.224 51.4535 li
410.007 49.1693 li
412.291 55.9525 li
405.508 58.2367 li
cp
f
373.855 115.882 mo
376.393 120.721 li
381.232 118.183 li
378.695 113.344 li
373.855 115.882 li
cp
375.972 122.071 mo
372.506 115.46 li
379.115 111.994 li
382.582 118.605 li
375.972 122.071 li
cp
f
278.151 99.3744 mo
280.917 105.861 li
287.402 103.095 li
284.636 96.6087 li
278.151 99.3744 li
cp
280.389 107.173 mo
276.838 98.847 li
285.164 95.2962 li
288.715 103.622 li
280.389 107.173 li
cp
f
256.59 88.4349 mo
262.428 94.1673 li
268.161 88.3294 li
262.322 82.596 li
256.59 88.4349 li
cp
262.441 95.5814 mo
255.175 88.4486 li
262.309 81.182 li
269.575 88.3158 li
262.441 95.5814 li
cp
f
249.038 102.352 mo
253.153 104.707 li
255.509 100.592 li
251.394 98.2376 li
249.038 102.352 li
cp
253.525 106.073 mo
247.674 102.723 li
251.023 96.8724 li
256.874 100.221 li
253.525 106.073 li
cp
f
199.429 135.081 mo
206.712 138.801 li
210.432 131.518 li
203.15 127.798 li
199.429 135.081 li
cp
207.148 140.147 mo
198.084 135.517 li
202.714 126.452 li
211.778 131.082 li
207.148 140.147 li
cp
f
222.677 158.307 mo
230.114 160.22 li
232.028 152.783 li
224.591 150.869 li
222.677 158.307 li
cp
230.834 161.437 mo
221.459 159.026 li
223.871 149.652 li
233.245 152.064 li
230.834 161.437 li
cp
f
176.778 214.908 mo
182.245 215.08 li
182.418 209.614 li
176.95 209.441 li
176.778 214.908 li
cp
183.213 216.112 mo
175.747 215.876 li
175.983 208.41 li
183.449 208.645 li
183.213 216.112 li
cp
f
149.888 243.148 mo
151.394 249.82 li
158.066 248.314 li
156.561 241.642 li
149.888 243.148 li
cp
150.639 251.015 mo
148.693 242.392 li
157.316 240.447 li
159.261 249.07 li
150.639 251.015 li
cp
f
244.863 282.381 mo
247.476 289.269 li
254.362 286.656 li
251.75 279.768 li
244.863 282.381 li
cp
246.896 290.558 mo
243.573 281.801 li
252.33 278.479 li
255.653 287.236 li
246.896 290.558 li
cp
f
231.3 338.138 mo
233.299 345.672 li
240.835 343.673 li
238.836 336.138 li
231.3 338.138 li
cp
232.59 346.895 mo
230.078 337.427 li
239.546 334.915 li
242.057 344.384 li
232.59 346.895 li
cp
f
191.427 343.085 mo
195.732 349.607 li
202.252 345.301 li
197.947 338.781 li
191.427 343.085 li
cp
195.448 350.992 mo
190.041 342.802 li
198.231 337.396 li
203.638 345.584 li
195.448 350.992 li
cp
f
228.885 435.109 mo
231.139 438.842 li
234.873 436.588 li
232.619 432.855 li
228.885 435.109 li
cp
230.8 440.215 mo
227.512 434.769 li
232.958 431.482 li
236.246 436.928 li
230.8 440.215 li
cp
f
313.464 415.268 mo
319.769 420.449 li
324.95 414.145 li
318.645 408.963 li
313.464 415.268 li
cp
319.907 421.857 mo
312.057 415.407 li
318.507 407.555 li
326.358 414.006 li
319.907 421.857 li
cp
f
292.06 446.752 mo
299.494 449.869 li
302.612 442.436 li
295.178 439.318 li
292.06 446.752 li
cp
300.029 451.178 mo
290.752 447.287 li
294.643 438.009 li
303.921 441.901 li
300.029 451.178 li
cp
f
314.475 484.716 mo
321.226 487.529 li
324.038 480.779 li
317.287 477.966 li
314.475 484.716 li
cp
321.764 488.835 mo
313.167 485.255 li
316.749 476.658 li
325.345 480.24 li
321.764 488.835 li
cp
f
362.061 440.605 mo
369.942 443.971 li
373.308 436.09 li
365.427 432.724 li
362.061 440.605 li
cp
370.468 445.284 mo
360.748 441.132 li
364.901 431.411 li
374.621 435.563 li
370.468 445.284 li
cp
f
386.77 465.737 mo
387.481 470.167 li
391.911 469.457 li
391.2 465.027 li
386.77 465.737 li
cp
386.652 471.314 mo
385.624 464.909 li
392.029 463.88 li
393.057 470.285 li
386.652 471.314 li
cp
f
386.821 471.043 mo
387.824 475.31 li
392.09 474.308 li
391.088 470.041 li
386.821 471.043 li
cp
387.079 476.511 mo
385.619 470.299 li
391.833 468.838 li
393.292 475.052 li
387.079 476.511 li
cp
f
442.128 424.219 mo
443.436 429.016 li
448.232 427.709 li
446.924 422.912 li
442.128 424.219 li
cp
442.734 430.244 mo
440.901 423.518 li
447.627 421.684 li
449.46 428.41 li
442.734 430.244 li
cp
f
519.426 387.613 mo
523.187 394.297 li
529.87 390.536 li
526.11 383.852 li
519.426 387.613 li
cp
522.806 395.659 mo
518.064 387.232 li
526.491 382.491 li
531.233 390.917 li
522.806 395.659 li
cp
f
549.161 371.68 mo
552.541 375.193 li
556.053 371.814 li
552.674 368.301 li
549.161 371.68 li
cp
552.513 376.607 mo
547.747 371.653 li
552.701 366.887 li
557.467 371.841 li
552.513 376.607 li
cp
f
550.354 355.676 mo
553.552 358.271 li
556.147 355.072 li
552.948 352.478 li
550.354 355.676 li
cp
553.699 359.677 mo
548.947 355.823 li
552.801 351.072 li
557.553 354.925 li
553.699 359.677 li
cp
f
609.479 363.494 mo
616.435 366.77 li
619.71 359.813 li
612.754 356.537 li
609.479 363.494 li
cp
616.914 368.1 mo
608.148 363.973 li
612.275 355.207 li
621.041 359.334 li
616.914 368.1 li
cp
f
598.542 289.418 mo
604.581 292.984 li
608.147 286.946 li
602.108 283.379 li
598.542 289.418 li
cp
604.934 294.353 mo
597.173 289.772 li
601.755 282.01 li
609.516 286.592 li
604.934 294.353 li
cp
f
572.556 359.46 mo
577.893 360.517 li
578.951 355.18 li
573.613 354.122 li
572.556 359.46 li
cp
578.68 361.693 mo
571.381 360.247 li
572.826 352.947 li
580.126 354.393 li
578.68 361.693 li
cp
f
578.544 296.947 mo
582.402 297.228 li
582.683 293.37 li
578.826 293.089 li
578.544 296.947 li
cp
583.326 298.298 mo
577.474 297.87 li
577.901 292.019 li
583.754 292.447 li
583.326 298.298 li
cp
f
605.251 273.214 mo
607.507 278.835 li
613.128 276.58 li
610.872 270.959 li
605.251 273.214 li
cp
606.951 280.136 mo
603.95 272.66 li
611.427 269.659 li
614.428 277.135 li
606.951 280.136 li
cp
f
588.529 184.355 mo
590.301 191.028 li
596.972 189.254 li
595.199 182.582 li
588.529 184.355 li
cp
589.591 192.25 mo
587.305 183.646 li
595.909 181.36 li
598.196 189.963 li
589.591 192.25 li
cp
f
172.638 97.1312 mo
180.137 103.559 li
186.564 96.0609 li
179.066 89.6332 li
172.638 97.1312 li
cp
180.245 104.969 mo
171.228 97.2406 li
178.957 88.223 li
187.974 95.9535 li
180.245 104.969 li
cp
1 .0941176 .290196 rgb
f
144.932 136.541 mo
155.96 143.064 li
162.483 132.036 li
151.454 125.512 li
144.932 136.541 li
cp
156.312 144.433 mo
143.562 136.893 li
151.103 124.143 li
163.853 131.684 li
156.312 144.433 li
cp
f
125.394 60.1957 mo
123.871 59.6234 li
124.443 58.1 li
125.966 58.6722 li
125.394 60.1957 li
cp
f
80.5192 146.711 mo
94.0778 149.25 li
96.6154 135.691 li
83.0573 133.153 li
80.5192 146.711 li
cp
94.8766 150.416 mo
79.3522 147.51 li
82.2585 131.987 li
97.7824 134.892 li
94.8766 150.416 li
cp
f
37.4137 244.885 mo
45.4235 244.97 li
45.5075 236.96 li
37.4977 236.875 li
37.4137 244.885 li
cp
46.4128 245.98 mo
36.403 245.875 li
36.5085 235.866 li
46.5182 235.97 li
46.4128 245.98 li
cp
f
104.786 214.242 mo
106.903 227.024 li
119.686 224.908 li
117.57 212.125 li
104.786 214.242 li
cp
106.079 228.174 mo
103.637 213.417 li
118.393 210.975 li
120.835 225.732 li
106.079 228.174 li
cp
f
108.375 418.083 mo
107.828 416.53 li
109.382 415.983 li
109.928 417.536 li
108.375 418.083 li
cp
f
117.445 325.807 mo
119.63 329.684 li
123.507 327.499 li
121.322 323.621 li
117.445 325.807 li
cp
119.249 331.045 mo
116.083 325.426 li
121.703 322.26 li
124.869 327.88 li
119.249 331.045 li
cp
f
117.598 415.54 mo
122.894 421.988 li
129.342 416.692 li
124.046 410.245 li
117.598 415.54 li
cp
122.757 423.396 mo
116.191 415.402 li
124.184 408.837 li
130.749 416.83 li
122.757 423.396 li
cp
f
165.961 429.708 mo
166.424 430.105 li
166.82 429.642 li
166.358 429.245 li
165.961 429.708 li
cp
166.532 431.515 mo
164.551 429.816 li
166.249 427.835 li
168.231 429.533 li
166.532 431.515 li
cp
f
231.835 475.81 mo
233.915 477.04 li
235.145 474.96 li
233.065 473.73 li
231.835 475.81 li
cp
234.267 478.41 mo
230.465 476.161 li
232.714 472.361 li
236.515 474.609 li
234.267 478.41 li
cp
f
527.384 496.675 mo
528.108 497.959 li
529.392 497.236 li
528.669 495.952 li
527.384 496.675 li
cp
527.727 499.321 mo
526.022 496.294 li
529.049 494.59 li
530.755 497.617 li
527.727 499.321 li
cp
f
618.074 475.496 mo
626.575 485.845 li
636.925 477.344 li
628.424 466.995 li
618.074 475.496 li
cp
626.437 487.253 mo
616.667 475.358 li
628.562 465.587 li
638.332 477.483 li
626.437 487.253 li
cp
f
593.626 418.323 mo
601.538 425.106 li
608.321 417.194 li
600.408 410.41 li
593.626 418.323 li
cp
601.647 426.516 mo
592.216 418.432 li
600.3 409 li
609.731 417.084 li
601.647 426.516 li
cp
f
759.77 384.516 mo
761.426 385.495 li
762.406 383.838 li
760.75 382.859 li
759.77 384.516 li
cp
761.778 386.865 mo
758.4 384.868 li
760.398 381.49 li
763.777 383.487 li
761.778 386.865 li
cp
f
642.377 311.035 mo
645.893 312.357 li
647.216 308.839 li
643.698 307.517 li
642.377 311.035 li
cp
646.477 313.644 mo
641.089 311.618 li
643.114 306.23 li
648.504 308.255 li
646.477 313.644 li
cp
f
735.525 233.149 mo
746.135 235.135 li
748.121 224.525 li
737.511 222.537 li
735.525 233.149 li
cp
746.934 236.301 mo
734.358 233.948 li
736.712 221.371 li
749.288 223.726 li
746.934 236.301 li
cp
f
688.59 247.565 mo
690.745 247.588 li
690.767 245.433 li
688.612 245.41 li
688.59 247.565 li
cp
691.734 248.598 mo
687.579 248.555 li
687.623 244.4 li
691.778 244.443 li
691.734 248.598 li
cp
f
672.026 188.036 mo
673.058 194.274 li
679.296 193.242 li
678.263 187.004 li
672.026 188.036 li
cp
672.235 195.424 mo
670.876 187.214 li
679.086 185.854 li
680.445 194.064 li
672.235 195.424 li
cp
f
705.662 202.569 mo
707.933 209.017 li
714.381 206.746 li
712.111 200.298 li
705.662 202.569 li
cp
707.321 210.292 mo
704.386 201.957 li
712.722 199.023 li
715.656 207.358 li
707.321 210.292 li
cp
f
615.594 61.9007 mo
616.793 64.0277 li
618.921 62.8285 li
617.722 60.7015 li
615.594 61.9007 li
cp
616.413 65.389 mo
614.232 61.5199 li
618.102 59.3402 li
620.283 63.2093 li
616.413 65.389 li
cp
f
604.138 69.0257 mo
610.691 77.0023 li
618.668 70.4505 li
612.116 62.474 li
604.138 69.0257 li
cp
610.553 78.4105 mo
602.731 68.8871 li
612.254 61.0658 li
620.075 70.5892 li
610.553 78.4105 li
cp
f
576.626 35.3548 mo
584.547 42.1449 li
591.337 34.224 li
583.416 27.4339 li
576.626 35.3548 li
cp
584.655 43.555 mo
575.216 35.4642 li
583.307 26.0238 li
592.747 34.1146 li
584.655 43.555 li
cp
f
630.92 21.4125 mo
631.45 21.7259 li
631.763 21.1957 li
631.233 20.8822 li
630.92 21.4125 li
cp
631.801 23.0951 mo
629.55 21.764 li
630.882 19.513 li
633.133 20.8441 li
631.801 23.0951 li
cp
f
269.357 496.599 mo
267.61 496.429 li
267.781 494.682 li
269.529 494.852 li
269.357 496.599 li
cp
.309804 1 .976471 rgb
f
414.494 472.715 mo
415.142 481.143 li
423.57 480.495 li
422.923 472.067 li
414.494 472.715 li
cp
414.222 482.217 mo
413.421 471.795 li
423.842 470.993 li
424.644 481.415 li
414.222 482.217 li
cp
f
451.413 465.393 mo
454.15 476.053 li
464.811 473.316 li
462.074 462.656 li
451.413 465.393 li
cp
453.43 477.27 mo
450.196 464.672 li
462.794 461.439 li
466.028 474.036 li
453.43 477.27 li
cp
f
494.154 503.597 mo
500.853 513.382 li
510.638 506.683 li
503.939 496.899 li
494.154 503.597 li
cp
500.593 514.773 mo
492.764 503.337 li
504.198 495.508 li
512.028 506.943 li
500.593 514.773 li
cp
f
587.806 472.753 mo
592.586 477.633 li
597.467 472.854 li
592.687 467.973 li
587.806 472.753 li
cp
592.571 479.047 mo
586.392 472.738 li
592.702 466.559 li
598.881 472.869 li
592.571 479.047 li
cp
f
528.252 443.711 mo
537.302 450.191 li
543.782 441.14 li
534.732 434.66 li
528.252 443.711 li
cp
537.533 451.585 mo
526.857 443.942 li
534.501 433.265 li
545.178 440.91 li
537.533 451.585 li
cp
f
659.805 324.173 mo
658.398 323.497 li
659.072 322.089 li
660.481 322.765 li
659.805 324.173 li
cp
f
594.461 372.848 mo
598.06 373.853 li
599.065 370.253 li
595.466 369.248 li
594.461 372.848 li
cp
598.755 375.085 mo
593.229 373.541 li
594.772 368.016 li
600.298 369.56 li
598.755 375.085 li
cp
f
646.016 317.921 mo
653.104 318.617 li
653.799 311.531 li
646.712 310.835 li
646.016 317.921 li
cp
654.001 319.71 mo
644.924 318.82 li
645.814 309.742 li
654.891 310.632 li
654.001 319.71 li
cp
f
631.647 279.83 mo
631.678 280.228 li
632.075 280.198 li
632.045 279.8 li
631.647 279.83 li
cp
630.757 281.302 mo
630.574 278.91 li
632.965 278.726 li
633.15 281.118 li
630.757 281.302 li
cp
f
617.517 209.972 mo
618.007 211.88 li
619.915 211.39 li
619.425 209.482 li
617.517 209.972 li
cp
617.287 213.097 mo
616.299 209.251 li
620.145 208.265 li
621.132 212.111 li
617.287 213.097 li
cp
f
600.121 91.9076 mo
604.26 101.033 li
613.385 96.8939 li
609.246 87.7689 li
600.121 91.9076 li
cp
603.762 102.357 mo
598.797 91.4095 li
609.744 86.4447 li
614.709 97.3919 li
603.762 102.357 li
cp
f
587.99 119.51 mo
588.608 120.412 li
589.51 119.795 li
588.893 118.893 li
587.99 119.51 li
cp
588.348 121.803 mo
586.601 119.25 li
589.153 117.502 li
590.9 120.055 li
588.348 121.803 li
cp
f
585.802 107.085 mo
584.674 105.934 li
585.826 104.805 li
586.954 105.956 li
585.802 107.085 li
cp
f
466.511 19.8109 mo
469.999 22.308 li
472.496 18.8197 li
469.008 16.3216 li
466.511 19.8109 li
cp
470.23 23.7025 mo
465.115 20.0414 li
468.778 14.9271 li
473.892 18.5892 li
470.23 23.7025 li
cp
f
450.02 16.5785 mo
451.128 16.888 li
451.437 15.7796 li
450.329 15.471 li
450.02 16.5785 li
cp
451.822 18.1205 mo
448.787 17.2718 li
449.635 14.2386 li
452.669 15.0863 li
451.822 18.1205 li
cp
f
352.65 16.1341 mo
353.334 25.0355 li
362.236 24.3519 li
361.551 15.4505 li
352.65 16.1341 li
cp
352.414 26.1097 mo
351.576 15.2142 li
362.471 14.3763 li
363.31 25.2718 li
352.414 26.1097 li
cp
f
262.168 58.7972 mo
263.463 61.6517 li
266.317 60.3568 li
265.022 57.5023 li
262.168 58.7972 li
cp
262.965 62.9759 mo
260.843 58.2992 li
265.52 56.1781 li
267.641 60.8548 li
262.965 62.9759 li
cp
f
148.335 48.5843 mo
153.561 56.2181 li
161.195 50.9925 li
155.969 43.3587 li
148.335 48.5843 li
cp
153.301 57.6087 mo
146.945 48.3246 li
156.229 41.9681 li
162.585 51.2523 li
153.301 57.6087 li
cp
f
196.437 70.9681 mo
197.655 72.2123 li
198.901 70.9935 li
197.681 69.7484 li
196.437 70.9681 li
cp
197.641 73.6263 mo
195.023 70.9525 li
197.696 68.3343 li
200.315 71.0091 li
197.641 73.6263 li
cp
f
168.21 114.547 mo
172.572 117.67 li
175.695 113.308 li
171.333 110.186 li
168.21 114.547 li
cp
172.802 119.065 mo
166.815 114.778 li
171.102 108.791 li
177.09 113.077 li
172.802 119.065 li
cp
f
155.574 85.5589 mo
160.815 88.0697 li
163.326 82.8285 li
158.085 80.3177 li
155.574 85.5589 li
cp
161.284 89.4037 mo
154.24 86.0277 li
157.615 78.9837 li
164.66 82.3597 li
161.284 89.4037 li
cp
f
127.782 229.352 mo
129.7 229.887 li
130.236 227.968 li
128.318 227.433 li
127.782 229.352 li
cp
130.395 231.119 mo
126.55 230.045 li
127.624 226.201 li
131.468 227.275 li
130.395 231.119 li
cp
f
132.308 231.694 mo
141.108 232.557 li
141.97 223.758 li
133.171 222.896 li
132.308 231.694 li
cp
142.005 233.651 mo
131.215 232.592 li
132.274 221.803 li
143.063 222.86 li
142.005 233.651 li
cp
f
127.715 261.947 mo
128.4 270.858 li
137.311 270.172 li
136.626 261.261 li
127.715 261.947 li
cp
127.48 271.932 mo
126.641 261.027 li
137.546 260.187 li
138.385 271.092 li
127.48 271.932 li
cp
f
94.8708 245.094 mo
94.9714 245.487 li
95.3634 245.386 li
95.2629 244.994 li
94.8708 245.094 li
cp
94.2516 246.703 mo
93.654 244.373 li
95.9826 243.777 li
96.5812 246.105 li
94.2516 246.703 li
cp
f
99.0446 409.984 mo
100.664 413.553 li
104.233 411.934 li
102.613 408.366 li
99.0446 409.984 li
cp
100.166 414.877 mo
97.7214 409.486 li
103.111 407.041 li
105.557 412.432 li
100.166 414.877 li
cp
f
168.995 361.198 mo
171.133 364.32 li
174.256 362.182 li
172.118 359.06 li
168.995 361.198 li
cp
170.873 365.71 mo
167.605 360.938 li
172.378 357.669 li
175.647 362.442 li
170.873 365.71 li
cp
f
176.568 388.328 mo
180.604 392.451 li
184.726 388.413 li
180.69 384.292 li
176.568 388.328 li
cp
180.59 393.865 mo
175.154 388.313 li
180.705 382.878 li
186.14 388.429 li
180.59 393.865 li
cp
f
grestore
414.416 99.5921 mo
412.987 101.021 410.662 101.022 409.233 99.5921 cv
407.804 98.1634 407.804 95.8373 409.233 94.4085 cv
409.947 93.6937 410.886 93.3373 411.824 93.3373 cv
412.763 93.3373 413.702 93.6937 414.416 94.4085 cv
415.109 95.1009 415.49 96.0218 415.49 97.0003 cv
415.49 97.9789 415.109 98.8998 414.416 99.5921 cv
cp
397.131 161.255 mo
395.702 159.826 395.702 157.5 397.131 156.072 cv
397.841 155.361 398.774 155.005 399.708 155.001 cv
400.641 155.005 401.574 155.361 402.284 156.072 cv
403.714 157.5 403.714 159.826 402.284 161.255 cv
401.574 161.965 400.641 162.322 399.708 162.325 cv
398.774 162.322 397.841 161.965 397.131 161.255 cv
cp
383.925 97.0003 mo
383.925 96.0218 384.306 95.1009 384.999 94.4085 cv
385.714 93.6937 386.652 93.3373 387.591 93.3373 cv
388.529 93.3373 389.468 93.6937 390.182 94.4085 cv
391.612 95.8373 391.612 98.1634 390.182 99.5921 cv
388.754 101.022 386.428 101.021 384.999 99.5921 cv
384.306 98.8998 383.925 97.9789 383.925 97.0003 cv
cp
418.448 97.0003 mo
418.448 95.2318 417.758 93.5677 416.508 92.3167 cv
413.926 89.7347 409.724 89.7347 407.141 92.3177 cv
404.559 94.8988 404.559 99.1009 407.141 101.684 cv
408.097 102.639 409.275 103.239 410.509 103.488 cv
410.509 118.766 li
399.708 129.568 li
388.906 118.766 li
388.906 103.488 li
390.141 103.239 391.318 102.639 392.274 101.684 cv
392.274 101.684 li
394.856 99.1009 394.856 94.8988 392.274 92.3177 cv
389.692 89.7347 385.489 89.7347 382.908 92.3167 cv
381.657 93.5677 380.967 95.2318 380.967 97.0003 cv
380.967 98.7689 381.657 100.433 382.908 101.684 cv
383.778 102.554 384.834 103.123 385.948 103.408 cv
385.948 119.991 li
398.092 132.135 li
398.092 152.246 li
396.962 152.526 395.89 153.099 395.009 153.98 cv
392.427 156.562 392.427 160.764 395.009 163.346 cv
395.009 163.347 li
396.3 164.637 397.996 165.283 399.693 165.283 cv
399.708 165.283 li
399.723 165.283 li
401.419 165.283 403.115 164.637 404.406 163.347 cv
404.406 163.346 li
406.988 160.764 406.988 156.562 404.406 153.98 cv
403.525 153.099 402.453 152.526 401.323 152.246 cv
401.323 132.135 li
413.467 119.991 li
413.467 103.408 li
414.581 103.123 415.637 102.554 416.508 101.684 cv
417.758 100.433 418.448 98.7689 418.448 97.0003 cv
cp
1 .0941176 .290196 rgb
f
375.051 162.328 mo
373.029 162.328 371.385 160.684 371.385 158.663 cv
371.385 156.642 373.029 154.997 375.051 154.997 cv
377.072 154.997 378.716 156.642 378.716 158.663 cv
378.716 160.684 377.072 162.328 375.051 162.328 cv
cp
303.974 137.357 mo
302.545 138.786 300.219 138.786 298.791 137.357 cv
297.361 135.928 297.361 133.602 298.79 132.173 cv
299.505 131.458 300.444 131.102 301.382 131.102 cv
302.32 131.102 303.259 131.458 303.974 132.173 cv
305.403 133.602 305.403 135.928 303.974 137.357 cv
cp
338.464 106.971 mo
338.464 104.951 340.108 103.306 342.129 103.306 cv
344.15 103.306 345.794 104.951 345.794 106.971 cv
345.794 108.993 344.15 110.637 342.129 110.637 cv
340.108 110.637 338.464 108.993 338.464 106.971 cv
cp
376.715 152.26 mo
376.715 139.312 li
347.791 110.389 li
348.397 109.39 348.752 108.223 348.752 106.971 cv
348.752 103.32 345.781 100.348 342.129 100.348 cv
338.477 100.348 335.506 103.32 335.506 106.971 cv
335.506 110.623 338.477 113.594 342.129 113.594 cv
343.46 113.594 344.698 113.197 345.737 112.518 cv
373.757 140.537 li
373.757 152.169 li
371.117 152.695 369.041 154.793 368.545 157.444 cv
348.486 157.444 li
324.373 133.33 li
307.84 133.33 li
307.577 132.139 306.99 131.006 306.065 130.081 cv
303.483 127.5 299.281 127.5 296.699 130.082 cv
294.117 132.663 294.117 136.866 296.699 139.449 cv
297.99 140.74 299.686 141.385 301.382 141.385 cv
303.078 141.385 304.774 140.74 306.065 139.449 cv
306.066 139.449 li
306.967 138.547 307.546 137.447 307.818 136.288 cv
323.147 136.288 li
347.261 160.402 li
368.667 160.402 li
369.433 163.211 372.001 165.286 375.051 165.286 cv
378.703 165.286 381.674 162.315 381.674 158.663 cv
381.674 155.587 379.562 153.001 376.715 152.26 cv
cp
.309804 1 .976471 rgb
f
501.21 137.357 mo
499.781 138.786 497.456 138.786 496.026 137.357 cv
494.597 135.928 494.597 133.602 496.026 132.173 cv
496.741 131.458 497.679 131.102 498.618 131.102 cv
499.557 131.102 500.495 131.458 501.21 132.173 cv
502.639 133.602 502.639 135.928 501.21 137.357 cv
cp
423.801 162.328 mo
421.779 162.328 420.135 160.684 420.135 158.663 cv
420.135 156.642 421.779 154.997 423.801 154.997 cv
425.822 154.997 427.466 156.642 427.466 158.663 cv
427.466 160.684 425.822 162.328 423.801 162.328 cv
cp
456.908 103.306 mo
458.929 103.306 460.573 104.951 460.573 106.971 cv
460.573 108.993 458.929 110.637 456.908 110.637 cv
454.887 110.637 453.242 108.993 453.242 106.971 cv
453.242 104.951 454.887 103.306 456.908 103.306 cv
cp
503.301 130.082 mo
500.719 127.5 496.517 127.5 493.935 130.081 cv
493.01 131.006 492.423 132.139 492.16 133.33 cv
475.627 133.33 li
451.514 157.444 li
430.328 157.444 li
430.328 157.586 li
429.891 154.933 427.877 152.808 425.279 152.212 cv
425.279 140.537 li
453.299 112.518 li
454.339 113.196 455.577 113.594 456.908 113.594 cv
460.559 113.594 463.531 110.623 463.531 106.971 cv
463.531 103.32 460.559 100.348 456.908 100.348 cv
453.256 100.348 450.285 103.32 450.285 106.971 cv
450.285 108.223 450.64 109.39 451.245 110.389 cv
422.322 139.312 li
422.322 152.212 li
419.381 152.887 417.178 155.52 417.178 158.663 cv
417.178 162.315 420.149 165.286 423.801 165.286 cv
427.085 165.286 429.811 162.88 430.328 159.741 cv
430.328 160.402 li
452.739 160.402 li
476.853 136.288 li
492.182 136.288 li
492.454 137.447 493.033 138.547 493.934 139.449 cv
493.935 139.449 li
495.226 140.74 496.922 141.385 498.618 141.385 cv
500.314 141.385 502.01 140.74 503.301 139.449 cv
505.883 136.866 505.883 132.663 503.301 130.082 cv
cp
f
414.679 405.591 mo
413.965 406.306 413.026 406.663 412.088 406.663 cv
411.149 406.663 410.21 406.306 409.496 405.591 cv
408.067 404.162 408.067 401.837 409.496 400.408 cv
410.925 398.978 413.25 398.979 414.679 400.408 cv
415.372 401.1 415.753 402.021 415.753 402.999 cv
415.753 403.979 415.372 404.899 414.679 405.591 cv
cp
402.315 338.745 mo
403.744 340.174 403.744 342.499 402.315 343.929 cv
401.63 344.613 400.738 344.96 399.839 344.99 cv
398.94 344.96 398.049 344.613 397.363 343.929 cv
395.934 342.499 395.934 340.174 397.363 338.745 cv
398.049 338.06 398.94 337.713 399.839 337.685 cv
400.738 337.713 401.63 338.06 402.315 338.745 cv
cp
390.182 405.591 mo
389.468 406.306 388.529 406.663 387.591 406.663 cv
386.652 406.663 385.714 406.306 384.999 405.591 cv
384.306 404.899 383.925 403.979 383.925 402.999 cv
383.925 402.021 384.306 401.1 384.999 400.408 cv
386.428 398.979 388.754 398.978 390.182 400.408 cv
391.612 401.837 391.612 404.162 390.182 405.591 cv
cp
416.771 398.317 mo
415.9 397.446 414.844 396.876 413.73 396.592 cv
413.73 380.009 li
401.323 367.602 li
401.323 347.811 li
402.539 347.556 403.696 346.962 404.639 346.02 cv
407.221 343.438 407.221 339.236 404.639 336.654 cv
403.348 335.363 401.652 334.717 399.956 334.717 cv
399.839 334.723 li
399.723 334.717 li
398.027 334.717 396.331 335.363 395.04 336.654 cv
392.458 339.236 392.458 343.438 395.04 346.02 cv
395.982 346.962 397.14 347.556 398.356 347.811 cv
398.356 367.602 li
385.948 380.009 li
385.948 396.592 li
384.834 396.876 383.778 397.446 382.908 398.317 cv
381.657 399.568 380.967 401.231 380.967 402.999 cv
380.967 404.769 381.657 406.432 382.908 407.683 cv
385.489 410.265 389.692 410.266 392.274 407.683 cv
394.856 405.101 394.856 400.899 392.274 398.317 cv
392.274 398.317 li
391.318 397.361 390.141 396.761 388.906 396.513 cv
388.906 381.235 li
399.839 370.301 li
410.773 381.235 li
410.773 396.513 li
409.538 396.761 408.36 397.361 407.404 398.317 cv
404.822 400.899 404.822 405.101 407.404 407.683 cv
409.987 410.266 414.189 410.265 416.771 407.683 cv
418.022 406.432 418.711 404.769 418.711 402.999 cv
418.711 401.231 418.022 399.568 416.771 398.317 cv
cp
1 .0941176 .290196 rgb
f
375.051 345.002 mo
373.029 345.002 371.385 343.358 371.385 341.336 cv
371.385 339.316 373.029 337.671 375.051 337.671 cv
377.072 337.671 378.716 339.316 378.716 341.336 cv
378.716 343.358 377.072 345.002 375.051 345.002 cv
cp
342.129 396.694 mo
340.108 396.694 338.464 395.05 338.464 393.029 cv
338.464 391.007 340.108 389.364 342.129 389.364 cv
344.15 389.364 345.794 391.007 345.794 393.029 cv
345.794 395.05 344.15 396.694 342.129 396.694 cv
cp
303.974 367.827 mo
303.259 368.541 302.32 368.899 301.382 368.899 cv
300.444 368.899 299.505 368.541 298.79 367.827 cv
297.361 366.398 297.361 364.073 298.791 362.643 cv
300.219 361.214 302.545 361.213 303.974 362.643 cv
305.403 364.073 305.403 366.398 303.974 367.827 cv
cp
381.674 341.336 mo
381.674 337.685 378.703 334.713 375.051 334.713 cv
372.001 334.713 369.433 336.788 368.667 339.598 cv
347.261 339.598 li
323.147 363.711 li
307.818 363.711 li
307.546 362.553 306.967 361.453 306.066 360.552 cv
306.065 360.551 li
304.774 359.261 303.078 358.615 301.382 358.615 cv
299.686 358.615 297.99 359.26 296.699 360.552 cv
294.117 363.134 294.117 367.336 296.699 369.918 cv
299.281 372.499 303.483 372.5 306.065 369.918 cv
306.99 368.993 307.577 367.861 307.84 366.669 cv
324.373 366.669 li
348.486 342.556 li
368.545 342.556 li
369.041 345.206 371.117 347.306 373.757 347.831 cv
373.757 359.463 li
345.737 387.483 li
344.698 386.804 343.46 386.406 342.129 386.406 cv
338.477 386.406 335.506 389.376 335.506 393.029 cv
335.506 396.68 338.477 399.652 342.129 399.652 cv
345.781 399.652 348.752 396.68 348.752 393.029 cv
348.752 391.778 348.397 390.611 347.791 389.611 cv
376.715 360.688 li
376.715 347.74 li
379.562 346.998 381.674 344.413 381.674 341.336 cv
cp
.309804 1 .976471 rgb
f
501.21 367.827 mo
500.495 368.541 499.557 368.899 498.618 368.899 cv
497.679 368.899 496.741 368.541 496.026 367.827 cv
494.597 366.398 494.597 364.073 496.026 362.643 cv
497.456 361.213 499.781 361.214 501.21 362.643 cv
502.639 364.073 502.639 366.398 501.21 367.827 cv
cp
423.801 345.002 mo
421.779 345.002 420.135 343.358 420.135 341.336 cv
420.135 339.316 421.779 337.671 423.801 337.671 cv
425.822 337.671 427.466 339.316 427.466 341.336 cv
427.466 343.358 425.822 345.002 423.801 345.002 cv
cp
460.573 393.029 mo
460.573 395.05 458.929 396.694 456.908 396.694 cv
454.887 396.694 453.242 395.05 453.242 393.029 cv
453.242 391.007 454.887 389.364 456.908 389.364 cv
458.929 389.364 460.573 391.007 460.573 393.029 cv
cp
503.301 360.552 mo
502.01 359.26 500.314 358.615 498.618 358.615 cv
496.922 358.615 495.226 359.261 493.935 360.551 cv
493.934 360.552 li
493.033 361.453 492.454 362.553 492.182 363.711 cv
476.853 363.711 li
452.739 339.598 li
430.328 339.598 li
430.328 340.26 li
429.811 337.119 427.085 334.713 423.801 334.713 cv
420.149 334.713 417.178 337.685 417.178 341.336 cv
417.178 344.48 419.381 347.113 422.322 347.787 cv
422.322 360.688 li
451.245 389.611 li
450.64 390.611 450.285 391.778 450.285 393.029 cv
450.285 396.68 453.256 399.652 456.908 399.652 cv
460.559 399.652 463.531 396.68 463.531 393.029 cv
463.531 389.376 460.559 386.406 456.908 386.406 cv
455.577 386.406 454.339 386.804 453.299 387.483 cv
425.279 359.463 li
425.279 347.787 li
427.877 347.192 429.891 345.068 430.328 342.413 cv
430.328 342.556 li
451.514 342.556 li
475.627 366.669 li
492.16 366.669 li
492.423 367.861 493.01 368.993 493.935 369.918 cv
496.517 372.5 500.719 372.499 503.301 369.918 cv
505.883 367.336 505.883 363.134 503.301 360.552 cv
cp
f
555.591 264.416 mo
554.899 265.109 553.979 265.49 553 265.49 cv
552.021 265.49 551.1 265.109 550.407 264.416 cv
548.979 262.988 548.978 260.661 550.407 259.233 cv
551.837 257.804 554.162 257.804 555.591 259.233 cv
556.306 259.948 556.663 260.886 556.663 261.825 cv
556.663 262.763 556.306 263.702 555.591 264.416 cv
cp
493.928 252.285 mo
492.5 253.713 490.174 253.713 488.745 252.285 cv
488.034 251.574 487.679 250.641 487.675 249.707 cv
487.679 248.774 488.034 247.841 488.745 247.131 cv
490.174 245.702 492.5 245.702 493.928 247.131 cv
494.639 247.841 494.995 248.774 494.999 249.707 cv
494.995 250.641 494.639 251.574 493.928 252.285 cv
cp
550.407 234.999 mo
551.1 234.306 552.021 233.925 553 233.925 cv
553.979 233.925 554.899 234.306 555.591 234.999 cv
556.306 235.713 556.663 236.653 556.663 237.591 cv
556.663 238.53 556.306 239.468 555.591 240.183 cv
554.162 241.612 551.837 241.612 550.407 240.183 cv
548.978 238.753 548.979 236.428 550.407 234.999 cv
cp
548.317 257.141 mo
548.317 257.142 li
547.361 258.097 546.761 259.275 546.513 260.509 cv
531.235 260.509 li
520.433 249.707 li
531.235 238.906 li
546.513 238.906 li
546.761 240.141 547.361 241.318 548.317 242.274 cv
550.899 244.856 555.101 244.856 557.683 242.274 cv
560.265 239.692 560.265 235.49 557.683 232.908 cv
556.432 231.657 554.769 230.967 553 230.967 cv
551.231 230.967 549.568 231.657 548.317 232.908 cv
547.446 233.778 546.876 234.833 546.592 235.949 cv
530.009 235.949 li
517.865 248.092 li
497.754 248.092 li
497.474 246.962 496.902 245.89 496.02 245.009 cv
493.438 242.427 489.236 242.427 486.654 245.009 cv
485.362 246.3 484.717 247.996 484.717 249.693 cv
484.717 249.707 li
484.717 249.723 li
484.717 251.419 485.362 253.115 486.654 254.407 cv
489.236 256.989 493.438 256.989 496.02 254.407 cv
496.902 253.525 497.474 252.453 497.754 251.323 cv
517.865 251.323 li
530.009 263.467 li
546.592 263.467 li
546.876 264.581 547.446 265.637 548.317 266.507 cv
549.568 267.758 551.231 268.448 553 268.448 cv
554.769 268.448 556.432 267.758 557.683 266.507 cv
560.265 263.926 560.265 259.724 557.683 257.142 cv
555.101 254.559 550.899 254.559 548.317 257.141 cv
cp
1 .0941176 .290196 rgb
f
543.029 195.794 mo
541.008 195.794 539.363 194.15 539.363 192.129 cv
539.363 190.108 541.008 188.463 543.029 188.463 cv
545.049 188.463 546.694 190.108 546.694 192.129 cv
546.694 194.15 545.049 195.794 543.029 195.794 cv
cp
491.337 228.716 mo
489.316 228.716 487.672 227.072 487.672 225.051 cv
487.672 223.03 489.316 221.385 491.337 221.385 cv
493.358 221.385 495.002 223.03 495.002 225.051 cv
495.002 227.072 493.358 228.716 491.337 228.716 cv
cp
512.643 148.79 mo
514.072 147.361 516.398 147.361 517.827 148.79 cv
518.541 149.504 518.899 150.444 518.899 151.382 cv
518.899 152.321 518.541 153.259 517.827 153.974 cv
516.398 155.403 514.072 155.403 512.643 153.974 cv
511.214 152.544 511.214 150.219 512.643 148.79 cv
cp
543.029 185.506 mo
539.377 185.506 536.405 188.477 536.405 192.129 cv
536.405 193.46 536.804 194.699 537.483 195.738 cv
509.463 223.757 li
497.831 223.757 li
497.306 221.117 495.206 219.041 492.556 218.545 cv
492.556 198.486 li
516.67 174.372 li
516.67 157.84 li
517.861 157.577 518.994 156.99 519.918 156.065 cv
522.5 153.483 522.5 149.282 519.918 146.699 cv
517.336 144.117 513.134 144.117 510.552 146.699 cv
509.26 147.99 508.615 149.686 508.615 151.382 cv
508.615 153.077 509.26 154.774 510.551 156.065 cv
510.552 156.066 li
511.453 156.967 512.553 157.546 513.712 157.818 cv
513.712 173.148 li
489.598 197.261 li
489.598 218.667 li
486.788 219.434 484.714 222.001 484.714 225.051 cv
484.714 228.702 487.685 231.674 491.337 231.674 cv
494.413 231.674 496.999 229.562 497.74 226.714 cv
510.688 226.714 li
539.611 197.791 li
540.611 198.397 541.778 198.752 543.029 198.752 cv
546.68 198.752 549.652 195.781 549.652 192.129 cv
549.652 188.477 546.68 185.506 543.029 185.506 cv
cp
.309804 1 .976471 rgb
f
543.029 310.574 mo
541.008 310.574 539.363 308.929 539.363 306.908 cv
539.363 304.887 541.008 303.243 543.029 303.243 cv
545.049 303.243 546.694 304.887 546.694 306.908 cv
546.694 308.929 545.049 310.574 543.029 310.574 cv
cp
491.337 277.466 mo
489.316 277.466 487.672 275.822 487.672 273.801 cv
487.672 271.78 489.316 270.135 491.337 270.135 cv
493.358 270.135 495.002 271.78 495.002 273.801 cv
495.002 275.822 493.358 277.466 491.337 277.466 cv
cp
518.899 348.618 mo
518.899 349.557 518.541 350.495 517.827 351.209 cv
516.398 352.639 514.072 352.639 512.643 351.209 cv
511.214 349.782 511.214 347.455 512.643 346.026 cv
514.072 344.597 516.398 344.597 517.827 346.026 cv
518.541 346.741 518.899 347.679 518.899 348.618 cv
cp
543.029 300.285 mo
541.778 300.285 540.611 300.64 539.611 301.245 cv
510.688 272.322 li
497.787 272.322 li
497.113 269.38 494.48 267.178 491.337 267.178 cv
487.685 267.178 484.714 270.149 484.714 273.801 cv
484.714 277.085 487.119 279.811 490.26 280.328 cv
489.598 280.328 li
489.598 302.74 li
513.712 326.853 li
513.712 342.182 li
512.553 342.453 511.453 343.034 510.552 343.934 cv
510.551 343.935 li
509.26 345.226 508.615 346.922 508.615 348.618 cv
508.615 350.314 509.26 352.01 510.552 353.301 cv
513.134 355.883 517.336 355.883 519.918 353.301 cv
522.5 350.719 522.5 346.517 519.918 343.935 cv
518.994 343.01 517.861 342.423 516.67 342.16 cv
516.67 325.627 li
492.556 301.514 li
492.556 280.328 li
492.414 280.328 li
495.068 279.891 497.192 277.877 497.787 275.28 cv
509.463 275.28 li
537.483 303.299 li
536.804 304.338 536.405 305.577 536.405 306.908 cv
536.405 310.559 539.377 313.531 543.029 313.531 cv
546.68 313.531 549.652 310.559 549.652 306.908 cv
549.652 303.256 546.68 300.285 543.029 300.285 cv
cp
f
311.255 252.315 mo
309.826 253.744 307.5 253.744 306.071 252.315 cv
305.387 251.63 305.039 250.739 305.011 249.839 cv
305.039 248.94 305.387 248.048 306.071 247.364 cv
307.5 245.934 309.826 245.934 311.255 247.364 cv
311.94 248.048 312.287 248.94 312.316 249.839 cv
312.287 250.739 311.94 251.63 311.255 252.315 cv
cp
249.592 264.679 mo
248.9 265.371 247.979 265.753 247.001 265.753 cv
246.021 265.753 245.101 265.371 244.408 264.679 cv
243.694 263.965 243.337 263.026 243.337 262.087 cv
243.337 261.149 243.694 260.21 244.408 259.495 cv
245.838 258.067 248.163 258.067 249.592 259.495 cv
251.022 260.925 251.021 263.25 249.592 264.679 cv
cp
249.592 240.183 mo
248.163 241.612 245.838 241.612 244.408 240.183 cv
243.694 239.468 243.337 238.53 243.337 237.591 cv
243.337 236.653 243.694 235.713 244.408 234.999 cv
245.101 234.306 246.021 233.925 247.001 233.925 cv
247.979 233.925 248.9 234.306 249.592 234.999 cv
251.021 236.428 251.022 238.753 249.592 240.183 cv
cp
315.283 249.723 mo
315.283 248.027 314.637 246.33 313.347 245.039 cv
310.764 242.457 306.562 242.457 303.98 245.039 cv
303.038 245.982 302.444 247.14 302.19 248.356 cv
282.398 248.356 li
269.991 235.949 li
253.407 235.949 li
253.124 234.833 252.554 233.778 251.684 232.908 cv
250.433 231.657 248.769 230.967 247.001 230.967 cv
245.231 230.967 243.568 231.657 242.317 232.908 cv
239.735 235.49 239.735 239.692 242.318 242.274 cv
244.899 244.856 249.101 244.856 251.684 242.274 cv
252.639 241.318 253.239 240.141 253.487 238.906 cv
268.766 238.906 li
279.699 249.839 li
268.766 260.773 li
253.487 260.773 li
253.239 259.537 252.639 258.36 251.684 257.405 cv
249.101 254.823 244.899 254.823 242.318 257.405 cv
239.735 259.987 239.735 264.189 242.317 266.771 cv
243.568 268.022 245.231 268.71 247.001 268.71 cv
248.769 268.71 250.433 268.022 251.684 266.771 cv
252.554 265.9 253.124 264.844 253.407 263.73 cv
269.991 263.73 li
282.398 251.323 li
302.19 251.323 li
302.444 252.538 303.038 253.697 303.98 254.639 cv
306.562 257.221 310.764 257.221 313.347 254.639 cv
314.637 253.348 315.283 251.652 315.283 249.955 cv
315.278 249.839 li
315.283 249.723 li
cp
1 .0941176 .290196 rgb
f
308.663 228.716 mo
306.642 228.716 304.998 227.072 304.998 225.051 cv
304.998 223.03 306.642 221.385 308.663 221.385 cv
310.684 221.385 312.329 223.03 312.329 225.051 cv
312.329 227.072 310.684 228.716 308.663 228.716 cv
cp
253.306 192.129 mo
253.306 190.108 254.95 188.463 256.971 188.463 cv
258.993 188.463 260.637 190.108 260.637 192.129 cv
260.637 194.15 258.993 195.794 256.971 195.794 cv
254.95 195.794 253.306 194.15 253.306 192.129 cv
cp
281.102 151.382 mo
281.102 150.444 281.459 149.504 282.173 148.79 cv
283.602 147.361 285.928 147.361 287.357 148.79 cv
288.786 150.219 288.786 152.544 287.357 153.974 cv
285.928 155.403 283.602 155.403 282.173 153.974 cv
281.459 153.259 281.102 152.321 281.102 151.382 cv
cp
310.402 218.667 mo
310.402 197.261 li
286.288 173.148 li
286.288 157.818 li
287.446 157.546 288.547 156.967 289.448 156.066 cv
289.449 156.065 li
290.739 154.774 291.385 153.077 291.385 151.382 cv
291.385 149.686 290.74 147.99 289.448 146.699 cv
286.866 144.117 282.664 144.117 280.082 146.699 cv
277.5 149.282 277.5 153.483 280.082 156.065 cv
281.006 156.99 282.139 157.577 283.331 157.84 cv
283.331 174.372 li
307.444 198.486 li
307.444 218.545 li
304.794 219.041 302.695 221.117 302.169 223.757 cv
290.537 223.757 li
262.518 195.738 li
263.196 194.699 263.594 193.46 263.594 192.129 cv
263.594 188.477 260.623 185.506 256.971 185.506 cv
253.32 185.506 250.348 188.477 250.348 192.129 cv
250.348 195.781 253.32 198.752 256.971 198.752 cv
258.223 198.752 259.39 198.397 260.389 197.791 cv
289.312 226.714 li
302.26 226.714 li
303.001 229.562 305.587 231.674 308.663 231.674 cv
312.315 231.674 315.286 228.702 315.286 225.051 cv
315.286 222.001 313.212 219.434 310.402 218.667 cv
cp
.309804 1 .976471 rgb
f
308.663 277.466 mo
306.642 277.466 304.998 275.822 304.998 273.801 cv
304.998 271.78 306.642 270.135 308.663 270.135 cv
310.684 270.135 312.329 271.78 312.329 273.801 cv
312.329 275.822 310.684 277.466 308.663 277.466 cv
cp
287.357 351.209 mo
285.928 352.639 283.602 352.639 282.173 351.209 cv
281.459 350.495 281.102 349.557 281.102 348.618 cv
281.102 347.679 281.459 346.741 282.173 346.026 cv
283.602 344.597 285.928 344.597 287.357 346.026 cv
288.786 347.455 288.786 349.782 287.357 351.209 cv
cp
256.971 310.574 mo
254.95 310.574 253.306 308.929 253.306 306.908 cv
253.306 304.887 254.95 303.243 256.971 303.243 cv
258.993 303.243 260.637 304.887 260.637 306.908 cv
260.637 308.929 258.993 310.574 256.971 310.574 cv
cp
315.286 273.801 mo
315.286 270.149 312.315 267.178 308.663 267.178 cv
305.52 267.178 302.887 269.38 302.213 272.322 cv
289.312 272.322 li
260.389 301.245 li
259.39 300.64 258.223 300.285 256.971 300.285 cv
253.32 300.285 250.348 303.256 250.348 306.908 cv
250.348 310.559 253.32 313.531 256.971 313.531 cv
260.623 313.531 263.594 310.559 263.594 306.908 cv
263.594 305.577 263.196 304.338 262.518 303.299 cv
290.537 275.28 li
302.213 275.28 li
302.808 277.877 304.933 279.891 307.586 280.328 cv
307.444 280.328 li
307.444 301.514 li
283.331 325.627 li
283.331 342.16 li
282.139 342.423 281.006 343.01 280.082 343.935 cv
277.5 346.517 277.5 350.719 280.082 353.301 cv
282.664 355.883 286.866 355.883 289.448 353.301 cv
290.74 352.01 291.385 350.314 291.385 348.618 cv
291.385 346.922 290.739 345.226 289.449 343.935 cv
289.448 343.934 li
288.547 343.034 287.446 342.453 286.288 342.182 cv
286.288 326.853 li
310.402 302.74 li
310.402 280.328 li
309.74 280.328 li
312.881 279.811 315.286 277.085 315.286 273.801 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.2
%%For: (JurgisGreen) ()
%%Title: (bd_4_out-03.eps)
%%CreationDate: 4/23/2017 6:45 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9jne+!6[Y&""=L^T#Hp-i6='h(PWERt0k,(X,-F6:]%kI84VSV;S:EG!M#g`0qOJPN&QX1J#mF>c%?>/+!73fTs/kFO=n
%&gS!;MnIu+:a?9Q)4pm,[uH@\j]_)#K&r^X5u@=\4t6g>NUO.l)64A*T@U%@[bNSE\lP)C]p,C/H>h,rqC-Q7k>DDb8A9FR<OEp_
%UafAKE).[u^1J*[c>%Z0143>k^l@t:^A4W2G6%d;*OkXD\Mc8ZA]'$A!cA.TEIF@!G6tDH'7@HY)bSH',t$'@cQNF[aDiQlU>2$X
%$\3'>8&?VZ(O^#.0(i5^m*dnDK!.YbLJWYPQX/+h_fp+I&VY-NX:K#o"K0*86qHt-!:9;9oUYR#5/ure:e7?F-kh+UHjgCL.I.3/
%;[96IL^/bsW,(4tUpk[-S47U=8T&`PacK4?huJckiHRtNdeMrZNV:UNT=4C=I$ES$&4KE3P\&44UklaQh9n]UU7=:M![Rf>a?TBG
%-aH^8F\>IB\kuH+!dP=__?],0R]lUgXP\+6!sn"-RqPRe\Q4no@,Tu:X=@YPEUaS>D*aC3]ce>f".Iq61Q6[dY$L\SH0M5cjI*D:
%\a7J0P'2`g$D^Q.,)BcWA<c&$,XkQo&_]J]:`l?H,\;1V`Pk0&YTOoDFrpTJo3VJ`^XSO'db+`U@9LIqJ7Dla%2=>jI"M/17NN:L
%s,6UNepr=!_iQr<91\>*Fm`-R,'mQ`*G7F@Ph&=qcpL$]TL9gI03)di<sLtZ2*fRX>1DJbf*`%*:c\mPn%W.qf7_b-g4tU,]%6?4
%3d'iahh$]R<fqfUV'Gl]M`uMGj9ss*8N2*3H4,2aC9fZM'2_?cL8H(F[Uc/e*(=YNrY*5ZEn/NYOMdOUZLSJi&/Jf@HmN'u!laZ`
%Jan='Ajs2nLO8Peqd2#NK>iGY%hP,1REcn[Wc_U'9fOdC$`_^=FGFT(/H#TN,ad*_8d$O]GFic*E-Hjb(sDEE9EfB@RaP3^kSnOs
%>IZ[_PMMM(^g9H0i<NHf<<6<%XQiEs'42-1d0)Z[GA99ROQOji!t\DT2GZ+(ZX(sXV:Tn[\Q]C`PtG&AMa)QC4DgZDU#gktBN_=N
%:lC(Xmb5FgPF7Sa0b%FR2O19qWV:a6?V/^GB8C'#464#WiCiB0O1[>\]lVj]RJaTs$Xg>/Yi4_-F537+f=7F1iZe%nXCBJ6lXT^Q
%duW$ALV;?(S>drFS0o/I04B`&,k)k#V(tKo&Y&)Y#HWogfN/K,TM&J#Mo'7:Ypjg,XRe>\EIa4#"X!((TomFb^JV^Ua6dAtFfD6g
%Mr+%/0B=3=qkqa[UQ5FT'/&2[1KjVR\&[BUg].5]m(`3@".sZn%2b;^"T0obKe/kXZ>>iLP&N.H8]"!=n/2M)%fbA!XZnFsBflGL
%b<YMa-Bh#\p<@ObcNs"PR07o#9SuEZ-c9IsJgFP,s%bZ4b[9R$_[$.bYilT.*t^\nhg]-7CmlRk/uCU_j#EVD\KmO$10g-#&=I0U
%Vf+%NV5XktdM0sQ*%fMD3^m]F/4>OU_na>](f(qDUbVQWRfTTIi"Q_dT"ru<?Jn79aesEW>9F%eLuBM3:C8No.oIQ9ntIP0`(YbV
%d"t'G0K`#7K0M3lTKa_$&ElJniKM*M2#a</PJj'rreU%Un-;9['$);+J0^%;%/p6H-:/@E3.6uXfM0RJ<ZC3%f)Q?X6]_G5Khhn:
%C&"K[jR9hq8Kn0W&O*u3JgXq-#adl/JI`23b3g3\6\%2U3#6+]"t#E3Qt8'i)Yfe4'>S5]\BVj[13eOF5`u:r8ASOV?q(9\(QMp4
%IV<+/cibA"@Fij\G=e/f&a#42fjnMdBj`D^'=_u#\+,p:Z+Ao(5>(Gs9f)9mjIdG-I:5N7LYuO,2%k=G8<W.4ZH&\m!U`I/q<QqN
%4UGOZ,QsjWoB;nKEl"F@!"q)JLOV<R&1Ebj&0)<eoS)3,L.3$=$>gpfp,aMpQdDFg-.;skB,dlXL@1qfOkL@j2f+u'Lrdf"CL.mh
%Q'#8g\Wr:]&0j-B@R:^i`T$8>,d@QRKC(_WI=(JLmQ>umeR\S@X]/0B9%&2a\J4W=s(n_V\/9d1(Xb^m,U((]!PjAk9;=2kVP;X`
%\Uu%Rheio4XE,!PAc+ri/6iTu\/sWZ+GY?V7HgGo(r##@8aT`ke1i\fH8bjAfldc3@iBsUR1Y^@ghT7D2PjJq3dF?B"'#V?<l>Og
%dtsGKNG][6S8T$hH6D20lpq+4iIQf^X>HB##>/gJq'P80W`+29`e)t82WB"gM&i^3.$/[Lk=6'#Tu@ZuVJlfe<YK?Boh&SV4&pPe
%H0/C2l#Mm3N1fF2k]3l1H;R'LE)u$rdqS(=gQto-qSSND\UeC*m\9nHSZI^uPI%jud0JY&@f/aS4W9e]'Tc[!0KgbG9@NOU2>"*8
%@4"oPeG=Jk4uV!r49S4r00rKKFs8kbJ1`%QY,k9NVL'Fs!'9"L:?bHX+2\aZc!4Up?+l"Dm2jd=(QALZ-IW4(S!NBSfIE/UX&P*^
%V/iV9DO&BC?#iuFS@7X\>[<[=Z<&\9V70(Z`Y()nABogg>/4[o6P4I+bH5fq<A(c'j]8qIhp-8*nfP/@Ce?SPa&4Hm7AqNRG.\DA
%n+dI">ksC-ErJ#g*Rj]A!m)'7ILkCYc`!]%58=%.Q`%L@%6c;R.VaHrVtu0Oc7G`@A#\AO.8hNRRC`3SRluR3c&6;>c-WnGTtuYJ
%Xj,57H;fm8[pE7OhNNpPZseN.r=[SfOBV'\-+_^[lV^_8<[H9ha_VfA<oU!N-k&7a;T0/Gs(G0Qa+jNT:N&(YE%@.AO2sSI6sfR7
%l-1DQ3(^u>MuhIW<RN[QG.!@cnNtgi>@p?tGPY3@Ve8QXU2P"oJgMJ!&At.)4Sm5';uW4o?I*ql@c".!UpnJ8?D!TrN)@rdNfj':
%K\6*C_^J]gR^`4\63]TE*RENQd%sqTph%Y14)4oh/S^30o6bJAA)8be#Ii'K<'5+q"p17R=KLUQ5?]jB%kmN.M9[7_aSDD4g'\A^
%XNg2(/<WZ;@PliFiJ!YQnrMZ6?0:!&Weu@g@p1n5J&M81o<$oLoR=iBb]6%rA\B63:+g(aj'C&uF$>';-s!s-<_mOZD_G$]e't0G
%bC=e>OdQ0.9^KdY<sh+XR9AoeqG53V=8SANF!"=T5mK2!=^L6!@MWPjdu0=4]3?JS*f^^qk8<m*6k2-5XJ9)rml&S8eK.uC*2Xl0
%j#*aSCRH5!oC=<Ob':%If6?C'Z4-V=4[!F8k8(Se@D-5lXOY)`/CQ-bI"?LXHCBS6=,b\YrJU>jJ&R>0?PGli@3>:H525O7LAq"T
%rGsK:MrJssr.'AjHUHQmgZu0^Z[M%H.GUjLc'\OU'bq6g[4pIV$Sc^peR*Z*-VH=n:.J?CZAN#)k%364dk.o#0B$=GmJHO(^1G=@
%-EZpOW`582lNPV2mR"LT_&G=]T>$IU?`24!rotf*ZN97CLs3JTC.j*&_p4(WaFHD&e/$(prQ@]McI0_#DkHu#eE5N"H('Y:=*61B
%=t\l]+!,/#MkfqdM#"NfIbqHV!t,O^M_ifD>1r2Pf(QDm&;/5b%UI)jl#^[9>"q<O,PFCM!-D7@WCf[H4DZCK8no*S1u/72"410_
%`D-c/h(+@h%M(=gAjqHMrfDST+9a=(+mC%b\d:AIP!$6S[jKe!?XOeLX4&d#XGEs)gjr_NY93ME\QYOE0n]c4XN1iH0qSV..oJE3
%a,Bbr<r;:`(OM:!,gHQUe'(/D-uDaIhYC.r=Fu1Y,/S(Bb$63*eRdHkie<ag.:4Xq:)$LQ0^jn(g53+;FkGt7m6pJb#292s7JUlY
%)*#+b[j\Cl_=s[K#V?j'0?R0P;GW`9s*IVCbHr))$Se]q.'($0s+Rpbb.T4as1hqT:I\mO^!fmH7B%og?5,'2/4r=Dk^-/hc,I>r
%qQfNXW@lY+'JIBUMUqfsX#,aEVoI1jI`#pEE\81*n2sK.]N-hnGisi5c:%TY;9X%`96G\l,57PGVo-1Hb8$a?oO#dbT_)-Rqr=M(
%]A0=.XR+Ybll*@=CFd$*!-ZV>S?D54b-'i41HMnE_R8J]CGM@2-*q?eBPh>2^1#Pm_:m&3/V$i*`G-p(k/jX6=+jmmYeE8=/FgN-
%J%?o;:^_e(2>Y$*nLHKf^k.giXjh#TAlupjHJ"3j&q0.]6_Xs3<fu&7bknjVb+GtC:o0ef1O/&%hIKdReE"3hRJa51Tq,"c=YeEs
%cD5Eqc>'AGo.6,4(S-:9SZ%6'$\e4nJA^Y+PaOZ&3lR"/r^eNLgt!f%s6:koR?@(+:I:J/Xn.Z0MXZ`Zr(ZtErtp-=Iq*H6pM6@?
%R9^$fSJ,Am/MpY6f.R%-M=,3RkB_I%pqgk,pI<I.i\pd]SrS(treU_^e7GCn0C@$a6h4EmX7[SG^[+b%;ub49c-d0!D!Dea$@!um
%[3i#r\0h@Zbq/5R5_Bk!C!BIE]Ze8=3eqAkkBe6sD=nd@JR0$p2>>s)dM8P1Q45L=A-'B>k6tsrI,lqAHuUU*j<?3EHuj1,:\q2b
%oNSHtY1A*;9BFOsmgK[IS2XSWXoC$+qX7=r$Y-UDqaG20>5qm1s/sq&-OS\(XoIDE&Zl%37*K-d\Q\Tqdu)8;(Ud@[^8j-KeXGs9
%K2E/QW)BhnHZDaE5]kTI,%I85Qs$BT<H3m;%sf=LSeY6iAQ@909IEP7)GL;6,#r`dW!DTWDjX\Wi5(ZPofD0G?KZ/BI*QTd]R*gT
%]pHehH)>7T+^7sf<Y_oIm^?3#Mk/H,RAZE]<@60qA[5=(m(3jXXJ*gX-O*GB*!8^41pkmWMPeNc9UBNL9p[mSf<n]QZWXde_*^4]
%qFbPsNCg=/*"kXYE`Q)ZGp#UXiKqU]R1"2XAX]uX$P@[F]On`6-#FtIH-;*uUtC;S>2n6<\LKeeFn)0WQ)iiFoj@FR_#-fq7="%A
%/jr!s$F-4AR2LPsI#C/ADcE/ihm+`EX9pV]_TStKZ7<Mg$88HsbGt%eea9(dMck;0W\Cs^Z7<N2E<a!(]R6XH1-9]f4SsNgVLVXQ
%&tXf[+FPbqTDOMaP+FV;4AXE)nrhBO/^s!h$.SW!&"E&T_n7'LiT6_eGs?,^b<4#G@2$iX(6>:TD8Q11_>3hdWaZYfAR`?$jW*I9
%TZt)i>b/ei+3njD:1Ed3VcJ7d+`a[gnr9[`R$R%@VJj]ElL^q'ktA>qe,PhWMMb--VYsW1Uh8;Ob4fl?eEX%2\HrQXrc*)l08ciV
%GZ-$qR[%Q3Tja*+(o$!8Gup';[pE7OhNJDE%D#g9BTa0+k:\QLs,/nQhjN<^9EsWrAq&\oaPon9.RREOB_.RarQE7&c@hVla_jd"
%_b5qG_[t!1&RL(F)90659m@eT.=9fnk5`ed*6&@H5EqV7IAn";WfAe=R/j^r@k:GOZg`)G@0u39?>*Hk1$1CC>r8*ZeM1*IN-Un\
%<?5RLa&pkHk,aSO8=m7q/c.SMoj?SP18DmQMhY\?-Y:aofboAl.B9:9FGHN%79j,bWeR<UBSr.9k2q(j.<Ek^7d)t!%i=EU*Y03B
%48nk!9]@.cUs9E3/#%iuLSKYT;GYU'njd'T<5#*$,Ok:UIEQO%Qh[3s,3n,-+GT$t88<4KJ9>.5H\o9efW6K(*W38u#=#?9I@;-c
%bkBg>0<TJ@m*hohS*@1R^](=1fbK"NF)94,.f>P-HDRfs4tL;Ccr1W>mtpf(ckA)(6d8_;^\a,EW_b`^;#Y)7V#rON3pFcE7G@Cq
%AS9;YDu&rj_Rsg^,*m#^QR?hQ2`?%8FY2I;(3;*3,p!Z*7(%7MRuJ2f'MnWS[J3nEV[K*>H./Kf2YUPl[*%N3g"\'HRukm?E%7o)
%DE^TnATRH5c75=4(-S-k_OX\"QHsh9"ChK(3=f)kd^`@=[n>gal.fo_=f$2?FO!J@b*l@Hk`Q`VTDMkG67tP^kDb:Ccf`sBb3(mL
%o=pF6/_ca@4G;.`!uY^Ca*E&_IR.9B\+&QQXNnjkSL^sqk=Ws[\E,GOs3:W_Z`2QVORAKS^>>oh;RI82R8$jdW[c$74\qo^T(,bP
%;TQ9(AgMXB?gt`_HK:3[78]g2'"iqJ,-MY7mp9Ykb+!nL!2$fOGKs)V#<dGSC21:qgL@oNcbk;\enZ4'=pMgggImhdHH3)icLW!R
%MH.bsQnnk./#n%T4e5!6>-C#KI-&9$`/WV-/,DBp[HdGX\l=s.:>7Jt.Y7OgA9`Q_lb`ECmk:PDnq0\.g4SfbIjsd!Vs;#!3NJ"u
%4Ie;TX74;B\_@9L/!@-!T#$gW^FFV'.l^#>HWqQGq3;&u7NcV0_1dj1<ft3J174bPqUUR@(FD34Eb(_8H03GUer`*A8Y9phj"/:n
%lo1*CcaU!-U/b%^$\P0R9_>M!UhK#^63fs:I(fBHqq._qjT!)Fb4@9(MtY#D`@c=\E."cZCZ=d(5X;Xg0/#/,d?2ug<Q%8?fpW%"
%6j#I,o.]D7W$*)C=e":0g#":DMU?7`SmGF$:d3<SJU7=oUT,.78XYr4Y+4Ml)mjm7Na<^K]K8V:o.]XYdE=Yr]6!U^VcJ7d+`a]M
%Dd3M(\;1m\e]S0[2<ain7Xf@>j-Pd8+XLU.?GX<9O_D!p,as#pbd&jo0AOB3X)hn9h3*sc_YT5gk-RgS7Jt\o>hX^d?p3Z/FgWM\
%kM[t\Ks9m`E-Lc//SPT`fr:EhrmbQ(\!^@$J8\SOq"XMX`6D28(B08OLkfAOmLREq/AinS^TP^9'65`*UZZ&uWVm3PaM^$sR^j6B
%V;#/IGB@Hu(.lkN![=Z:b>)t^MM72sR%(WF$)Ep^MD&L&m@G^::D5@L(+jo!]hFG$akC$+f!C5t_tqEdbqS8N:_l!cMCRM0XZm:]
%cYBoY+TD>Fh(5["[bn&j0;KJBnijq"'!oOhZfB"=1NI'N(.lZ31Yj%&;]PGNF%M]Z]t0Oh.EnL0IkRgiq]Kb?WZU,I\7Hfj+!t!o
%NMKXPO)_LY\%F"dFd:q`?$T^mZ2?I`/:Z%Q^A/D;NC8dP?8J.@o.hTH`hK?^$a!>-/GP0tLt/)])bS/!jnIXb](h_%?7Vt&q"k]=
%^'Fq-W+d""QdkoGVXIdT8.A_r?0X9aj0X_.o4glq<Ma+b$k'G<C$I>Kh6/`W>i#qcU=OjFLuI=j!n&ES%oG#pKHY+Q'ZKi<K#%D]
%%qTX-qY,auRb&1`;+(Y@pT-hL1u'nkG<o,<_iTBJ%1TX?JUaFW,OuP1''4A#'H-h&J2[0H&gYBcepad[j#(6.)*0CS5)8X)YIhQ"
%%jMm>s/f,:*CN>f+@HQFUfh"<b\^fd6=`V"IRGX#064cg$#j,k:b:oo4og$Y%sVK^N@)ee!XDO-+3BTG0As#j+US@)nVKBKn>)%u
%(D.FuPlt?dK-seVBh"_*',fH\L&Agn;+s]8JD"$%+W2u]9ZYo57_8<$,oc(9A.j2*J!W<#5nnPb;(RO9a<2ZENo1I%3CXQ.&WtDU
%+4NUg]YMmM/@\$Q2?>(a#_:mOmIoc6BVH3edPRC8P%,)XL`msnH6Xls.Ja+9jZ*P\/H@8h#$`Fi3lhZMJYY9rn3-<b_fUBo5c=;D
%#WS2*I'NIQ?-uW)lMnChgIUY+*is@Y[;*Gc'9ndki5EY$Y2+W@(]$/QW1h&h`Q)5Tlk9EPnV[>]RX_<'8^;,3oul9'j#+@"l+R'>
%l+Pa!a9-t?KrJ&YB/I<\T*ruF%]&,k\>3liQ9=gO,s2eZFD!33X=,+]El7.2I/t*oVC3B"Ql6Kg]#"D@U%meEq(f\=GkK&`"]`?#
%BnhtBT",tkh^IjiiS?%-f_H)'6t`pb1UQiqR(luXU3f&&h,S%I6U;6r9Bq##2oY%9])M$c/=.j\l9FDr^)+SJpJe!#4D$]Bdq"\U
%$.65//PGA1'CTedkJV1,=@gf:OYh2"2'0QZ3?cKP7G_@2M[/3e4mqZNUF8Ea;A<ZidjXk\^0Ed`_&IH.:EPspUo&Q/=%+nf`5p,E
%j&/qsdgN[10V<9PRqMkm8[E#g?\n]b=j1I!'Mf+)j/f,eV<LJs!-DLDjY*<_"iCd5(CEEd\NE9Q+mBHhJ?T@qGC$g,-SdpDZqSGl
%l/j%XG+WH#H?k\]2u($V`>#Z2e[:,apNjt(hJ*<`n8gmj0[>sodJ2+U<5n>BN&\%_6/2&-PM6h_Q:n%]\qY$a-Q55*1DdD&"'PQB
%MmWc$CWKkrSSsm'2u$Y)3^$`q\q\X6rpj1.F@"4VIFI;dURcmQ%YntiRkSYnPk!Xs:PKn`>R\`;9tZcP<s.d=J'>kkg9MmP,\,7I
%Dr2Fkpl>XnW*'LTSs7Y,D;P8:0%Z>:gNP7D1pq8(CHI=b3Kj"p.u,5UrN7fS,.6j[\uu*RKl$NhlOtQ0KP644kW>,X:#EA.1M#=)
%-W`O`/Mo2(b@TSpp5NcFftm9in`?TBUG"K8?U=#O]=)kX'ZuFo"GnPIneB'J*5rQY/]SDd3V*DN1rJke9d1]=<5g^BBGHtG$!JSc
%/f0W;(jq\YqVpKY_:'2?8!hD(q>,]XAdaI3ogG^Q)41H<gdRA'%OE;h0a'p$1s^V>$-e>5K(t396KB_a&:^146E3Rb5>Y1V/Qr,)
%S8]Z^O7OI=M'.n3:%>tP-flO0R[,4!=g"$sm]B,JLG)u/&sN2JCL98+[>LbdbMBnd)[Q;M8AJB^LJ,8C'i-mI8tP6t1A9#ST9F0S
%m22MI<MH7;++i_5BNq[@flhtPDQRZR4af/"&%sLDC8:O3V-_?a[[]"u2`+%,D<a-IV--<T7A$@p'i!+l55[/q+6djm1J9He0H$8K
%%;'W1hJ[qUKP9WVgqtEc!fhqE#f&^[e[q!)%d*mE9$Ps,E62N<2KuS5pU*%c[AAGZD!7<tkb\ip1*i;H?I@Ai\mWs59"V9!_j5IN
%h[132acHOmN*!ba_dj18rIb*)lmp2-)SSm>!BF.baVr:K!ptrs(@.47q*XE^LWF[R&?>-.(!,2Wmjn+D?'OaQb33u%^<8`O]rNZS
%;)(NC>CI"6J1EF2o]>1!A9A;e_H1rO*\^i!3jPr%kZVa5]md7u_r5E/<_jtC8;-DB4dYTqbMtrs#<&bc,o(^W+_Wf&#q8('g9u#I
%'*XTeZ>Qd40&'H-S%6#6NiWUn*AbI#MbL*[-pHRHoZ8RVi.h>Sr(6HNlEpme`&u(3X#YJO3-/8R!Hhu3h&l2BM#AimhTVV3+@6s;
%r?SQ7%N3X8\?N4Y68iOU]=+MM[_UO+o)m`$FGGl.=l^+W%b(h:[tKf3qm)QgWcUN;d?='m@"B6;Mg4rL0)cZnA`$)D4R]VOF5K\f
%:)/\NE!;Lb`'_53\.7K=Tk7,h8mPA20KrP\pB_'bgcY`3ThX1&iOe>&It"8B'WS6VC>+_'dPM;U/lg_fA)spNCdEg'UpTPc?W*o4
%O@ANc`WH7F7O]EDW*H7#p)t`s4"j:eb.r\*)iE&cLq?eYPm9[r:F#[-&C^OCG_,bC?&\/'QuCg#rOpt\Oi1ea>s4h';Lc#+f"UNu
%C_Z5]of>S62YrV[no>OTO-04gD<.W$J&/t+j%B'XW_u8<G&U)PD?:Sj@f/>4=(o;3gJ^#p-BkMYJoJY*pu[RchsHR*]/R"t^%Qp4
%"Q>g'g#j6FaT#+.$tBUbT\qS;kefk3)mOI`>8eti:'<5Hb@pkK`4a=<Hi[U@8l]i/&2>"ELh";r0dAG*-;`E>dJ4Ld<[X;YfD(bs
%<RoP]Gd%.o@c!HsnQ<t%6t!V;VgRo`p(ImU's1t*e5IEc"%@(0!'3"RHD6njGb1g(p2`G#\)qau<(DB5.'2[t$Bhab5E8_GQ^Hur
%oq0\;"*5Y(nlUcTTHhB:E:*eQM"&$3C8SSVP32WceeqOVi(9'*"\Ko:IpPJb3C.1XRf!D5SQ%dI>otF-Fp37[/;&OCTJ^.(E8N0V
%EW!R>0Hi+YD\^7jKqc\k;`'?)W4f4q27YW"1>hMRAdi#gW\'Bu09I29Kd)(iRDm0!bDYLgH'GH3>ObuY2>qXKE*oCo;^d+01\3L8
%]m[M]ktWod8Q](m<b?>7PZ\DBGc21+1:m\3liqb4oJ/,gk0)3A;!O)i^U,c6i_ZLG\r.%=D3/c5PR^HKXN,EQ1J%u;BR]*h2:2t"
%!>#pb<>oDLmOSmD0ah!n[q9rQS=&0$I?#UqRQT?2^,oF(gO7['d>DD?-'XL?&e\-Kh!j,h]+qH@`)s(lUZU^:6'<r'^+JTOhC!Pg
%b]&<apNnY$-VhQLh=RV7Wk)dMlTgCm5lnNN@]5n+4d3pZ]7QB+SbGs20YM[O&%cUCI3M#6olQf8)l;2D_l_%',S9DBFrk<Q*0s<2
%.rr'58Y=0*/sm'D;qJbK]rK\YRbil"nHCZN"130>Rf:nQY[4`<<e#G[Yka!oR@("FhH.%BJ.+kheK'L'*TE:.U<P?q+f3('_nEU4
%q?jH9mGIdRAPMSANK,j8c@=s_ngdW^]3RRWlbm-2WHtp7.("CoY1,7%bnP8[JZbp_b"Vo>C)m:5d)nZC9+=:aE%Oe1YZ@c/s&9[0
%`1No=*I.IhH=3;MSb>%9*cs?>"a_*B1rE;](t"f+ea&[IG>4:T5J6_T0HTQ`.Dq1r(#k0"]:pF'o`^:GLeG`iOc@f=fFbuR\8C0V
%/cc1#V.:Z;0k&K1au%]cOMHrTEFPh541WC9?@]mmd1NW%0.q8Me_+_:D&\;F.WsPOokV@HX:i`G7rCl;@,KfdZ0M!4^!Y9?)l@8H
%2N+g]bF`jr;/coG1DJ\oM7?cZNjN"X@\^N="s;=VrP#RBftCC#ZF5+_<PT$T_p9M"BrWZC\B5P5:@?RFR_e3>cl[MpR]l;2Qe$_s
%qLj<ZJ@Gg[[Choj1_`]5XVKt-\p#SDM@Cob^8^'\eXLHDa@6X'[-2(i*qbV50^uuqP<DGuC9PQh7T1@6-li=W,-#b!P'e([CAXpr
%]7N2e^4!OcMBbQMMbm8kP,tA3h*Jl15$Z*H4<hJ9pP/(e(N:#0Q3SFZju\='=-\)=70=lI^Jg[-1Ml!hnb^WbfGSaIo`nZ(Fl[O7
%l8XC5V,H=X!t\YFet3.DeYYY)jKCPq2>K1bHN43f0EOe+pXoh\.Fhs7Sq9fcX1/^$RWsih0YF'73unR'InCAoj^K3C@pDJ`%aYRA
%`iS?`#;d76Vgq)@nTD$K]ic7+8k_&dD(LDd-!%\9!0n.d\sgsQ0MY<afj.$siCXEV'T=Q-\4[!;4i(p9^kD]]<&:o`p16(aWqKb[
%dFuYepaJc9Ej^P"mc6(YmM8]a`jEZOLT"DFadPE#l8f]ff2B2AEcbJ`#CqtCGNZm7E2loYO9rOq_98uO1fn&7]Bo3a4NtNFUNN0;
%fhEsi/1-7R>Y\\U0U"@3?hO<pRD)c_9tpJm%hIpsmcB9Bb=W`M6*aTW&*3!-L#9)#$3)>nEZO&LN#SLS4b*<$\@h8hZ^]#2mU(JB
%jnFPedXM5iesbJ<4C&&r!h7M@r\aHQh>!tZI[)/:bIW^_Q4j+:6\R04=7Fh1E1Dm1a6&19Rg=P(h`cOCi60[ergA&4k"a=M)#fr!
%L"I"6H"d>H*iaSNB,1G?#Zl*a^'*%!o)45<Gd##ociNuGJo6UXU59ocZ&PF-Y)bMF(GpNo\NmW:;G+."MgjZZZK^RqU^(6N,ef^A
%anc8=H%UQ812hpi61dTt^I0tO2(L`eBi61mfJp<&!6D&&cNer>%pZT3WK`4Hm!cO<Lsl*oD*#3H.3qM-]o?hT\P3+>K?ot.qVG_n
%^3-`D53pZNQtr(]1n_lF&5EB+9e)^/c`-R5iu[`694%Ykf4K54O)s*Udbm`[qZeV2O!Jq=mDH.k-ZD0D#>[1F_OJ+oL"i^7ZdEo<
%>mKd#ee#%&YIG2#%dg/ZlIOVr['p_gG\mscdH)l`a^#D]b[[><?58M(qWT1r*[gCuXqTEpUWm=]2o+>`"f%'<QZ2f*Fcb;+m^A1?
%:Y]0[[9)+>J(uPGQUD;0?6XY^QsD8AD72V@D6;43mUpU-*-YGs9dp;pHf<1oSrA.=<V^S\T=s1HomZS;^NNhZBE%CoU%9%d3i@=]
%i_I.M;AqE7L(`Bm3fKrth@ZB*W+V=a]o2X9mTD]snEia:An4$eZ!?bY1/f?>qMDQU5TT"Y4e.Ie=-)TN/[koIP%n6uP:F1AiVD;9
%SPJD!*#WXNcU^paY"k\Z]Tsu>rQT::6e.52U`Ki_;d5N?&;dQdl]EPUSNK,$*1^2I7fU?Br0KVZ+s['e"GQi_g<$taT.VoB]R%`h
%5<:[K8CspL$Z/,3q*PsB+9(XjE>o:t3P,9#BlEJYr<d(fRR$eiPp:$'h?u1DF=DfpgqW)\gO.lL#BnN3rcK\qnSdoi`L@+!/CK-P
%4lY*94Am:"ThJ>TDkG"Crp\HAd_Bl#EpJcKA`!C58gNKTD(#X<U0Y;"P<E7GdfEt7:\Sce5J+IUlK<<l07KL?ebqi4SG%kDk/>#Y
%j+$U>Wq\,(s1r<8pE(HJ?M]_#%iYFlLCF'DHeW7al7qencYVn4rbUO<mQ]Cg55B8dh15MVdSKZ0d`/?fi[>f;(H/gos/M5Yr5IGO
%j1cc*DZ%!BpGMuA[Zg5G]H/n,2c"WV]`7(cIIb.<fH#J'p:BIkh0%?Jp"Ej2hp`phhqB>Nr9_2p&&39*4naA)b9)1CLH8T0kG8)\
%TUS&NgIqf0f7M8ZS$d5#LffT-2W!#@F"+OePNQfHArV5r4'`LP[Xr;"^!>*\iKgjc(>&">el'cYi`c';N*4=ekL?p;e&g_*AaQ!j
%]2l*rCH'7MC$hJl6r+,3D=+apIpK+^U$I"U8$+4!J=mqH5-K):64S-JCu'&][A(AVfOU#2JWNbY#9lV),XBfP6@dmf_Z?G_o`G#/
%Z$IOArVd@!?^tF,:5VFtO>"'Q!emO&-;]"QL]m,JTrl,:fNekU"\B6GNFG!=:7]'c2hB7sWYt#;-5u2cQUg`AXdrF$4oB?U>UNun
%n*@(TVS+TG]md%)Sot"tWAM/nIR5D+lf[4^]7.HB4'4.+pQ!jtG&IcSdU(jO]mbF]>]7=KqWhGI34e(0oad^bNQo(nr'n32os@"k
%8=^488;&qq0/a>"P!m!nESS3ADOd=>KJn^81qmtEB&%79W3),?g:P4=]YD/q2S/QrHdc>cR*Da6m:nGgg$W`5r*!oXY<Y9h`g&q'
%]%K4.DU15emol:,dcSikk/5_hAQ'ceB!WYeO.2\^3P*n)KZ[Mg]lIX6,4FB*0t5KVXk6Y?Be+J+0jD33@Vr18FEk/m<eB/0Q[\OR
%X3TOV\(^Z5l^#qU+!GF0Fa2gT7dK&>O;#1<i5*$5">e``?18hMA?aQ4D?c`)Uh[,Wg<BlQ,f'YDjOm^M.k+Oe];]`m`96`ITqdr\
%1j&YXmY)"q<\8E;ROX*L2#g]L3@pkA66E5CDJu=8_V<J_a1sV-SGq/)3al4H-hP!_IC6%Gg\707Z4.u(drnB0IbZigf>hhYe9DI%
%K(^+CSZGi.kr5=X^=Z#XiUZf8*gYB')r^O4+W<8iY'K5C-hnTNmSMTl`Qip#Heca8ZHCI([27K+IkK)0eMfOqe#p(#OgRr`'o?`H
%L*QV&,S<UQI$>jgC0cbQZ;5T'mAYISBgo4pOac>ALk_+Sk>?-'U.41f0'Xd0FrMu&DtEkl;<dH0,c[GZeD7N2H@IkoI9kM@C&rK:
%eN\?4^"bF-h1qKKQX(.mG5%d$;B^Y.`'-KE"Br_U.qOQ9UC\Pc)sK+T\Y<6$"!*RE\R6Ji+j#Yh/pU8%29D@VS<GlM:QZAIV3.=4
%_C`1cTd2&O?n4nkC)N9t9>0+ZGMCMTW[8O-l6@D'U-n0SLZXuN)kCHqDWh.o4Je[hof2oAD[=Qjq3$8GQsCpOAe+P1:$2(3]Z/`D
%Y8`FJ^YWIHoQlQ-\$c`H/G!ZDE@SB4hX"R'fP73JYTGs]4L`"p4Q6M7m=`Y0GDf_j](jEJe=as4M"dD:p(P@6@]5S]*q&gbm#JhD
%Ufr.?f=(K]%69pLbHe@%Emb]J;Fs?&3/h,Kb$"XJ$s^e$Ocn#t@WM(K.pceUqr4*X%[o';n*FmApK)]gfel!]YG:-kHb%hc;b@:/
%kU*`eVJ7h4Fe"Gfdp'Lf.K,cte]Odo0gd/-qa<-Rm`/8pb'p$ec0\0@;eZ3+rpY(B3P&!,*,a@p#8^:EHLQ6mIWj($Aa.+'j"pZ'
%+C07V]K"Zk*PO_-,7up%.c&@E80l_H3kWh3O"S'?_NC)=8K[2&8W<+E*q.)^4M;I_"ulJM>.`<Zpg9Us$!MXS&t.I%,>i?Cl\Y?f
%WL;PqDnRO;X+!-Ueg9tL9Cb'(m-<+TFH_SgCt#?dPs7qW%HB9FY8lGsfC/RD1k0eu9:oN[UZpr^1Qh+>SJO)oRtjT_.;Xbp2c'E@
%7bM\:B=H%P]khMo.:t6oekNSnC%RGaH_H(%2BodRk<]u`S)`[klM9s?32E/Xi`YOl?-le'GKn@j8UFZYjE=..LUff$oU`[?XJU%,
%ij!qNl;JLsLN4Mb=tDP':ReiaiE>[@Z$1B\n8`l!/P@9):W:B["oUW7n4KB1..bE[`-/k?qtPU],5o"6LIs=E?Fj"4oCle>IhCf^
%c&2^kH+YQ3JW#H[r_rYKHCg+%VI'Vono:eHF8:r4D&'"H'I`%&T)+.Bj2JP!5M,d66<7=&\eKc9d*5QRb_<3P]*73jLjnNjDh[#B
%lh8<BBlR52]I=oj?<<";Q_A<=^\/?o$)OEq;IM5'=_\fHb0>,&2K4k-4PRJn.)rH.oMVc5bJ"sX\*)#Ro@s+Rk.Ma,()c>5S7pDj
%aq)A/>$8$NB(!0mkP)U3E%lIeBUr5n_f+l=IJWc:ErZ&.#nMJVWB]`,o1'=fSNZA6SI+C"aa.n&nVh@u4P!ggLJOUrWrFNUTfbG#
%<P!t3ro`JlFRpKafW.-l>SZkV>"Rg_(l8X5>l#Q-0+,IBo,><Qah6bf,l_&]CPL_59WnD]lB&-WQUdf#Xlh00dS]qN/3UoZ7B)n0
%>ZG7bKgOn0G$Cp/gQh*)E+.Ng2q;AuI&q'q3N:$c1u<"L<C3msD]_>%F%WZWiSYk.X/X`oSNckJeh>3jrHbLcV].H]k8K]+c.>Fc
%VtlhS<@??Km'^i%C.m.njs_!CY&<qSQ-Mf>"fC`nTpg<]5)%b[h+$h*-#T`jenmIa[sILK8_q]t$0lr2PhTttmDF*p^Y!G=:ta=C
%<`%T:A@BRW:3Dm_d!#2_Tq.e%AZ])qh!\.ZAY<6U^:n`tYl>EKq%2BmfoL/K>1<Fl<7^*Wk?In-Rm6=p2X9<%*=hXPC9Rl\HJ[GD
%`Xb/"V'qKECn)FLle5S>GNp%opF`8JYP,:I3E>J,V0>X(&!0&*Ss$\I@jHq1CE$JHqo4Bhnb"bd.-Fc(X#>+&/Z5uu*V2h3cT?m$
%,G5SLo9i)?j@@7pfRsS<"\i!e"nUZIMc-1T.e9]1OKV,M1o*l`Y_d14$.C6QH-58b]F9D"pOdijb-?^ud\Ui*)C-@(hGKX[Ci];C
%9L^,nq$P[u9^-r4L2Fh?6!DEOj]7LnfFq5!JjfG\?1o.1fk7F6q0Mc.cQ>llj6N,&GbpE2c">%%D6W.:CPUD,(X4bFTc`HKW[Q_V
%C#CUik']UQIqjC=(IZiPFaUKo#C%(4dY=Q>HqMGlcfYq:*?TCi+Qrh(5!q\nWj5F:40Bj$.[g&07$!MI*8tbtkc*;X3qliF]6_qN
%/&M@TfsB3NaAF$KXjmXY;L6'+VptfbM,'.?>:KVo<EHc\p,NRViO*G%l`9hV=bYjgrmelM%=KfecI$+4k@#XlbC.jU94.,TEQk$(
%OE3edFs_g,FJ\@Gn[NuUDH;^AG%Mp\H:?c-fUXID]tduYb$r*eqN05g`\eAPHT?rEVK>f>Tc&=;Dk\*M28Nk[P'd)PQ^V`:J<K4!
%9.p]=5!q*d;R>8`F<niYQp-Loe6mF9`O6'TSG'bS(Z#b-c_K_HZho4lhlosPi>!:g[NXNaG'f'U@IZBt(>L"qd18ri\Qm&(\o"!p
%s)[Hl]uq7C@?\Faf3EM.;=nuqVEY8se.`ETqF:.[4S/Wmf]>#8j=jCT]Ycp1dJfM"ft[oS=$_"]Z13"o_Dg%]7oTbsS')oj6i4=+
%-=OPNN*iD$Dgf9Q=rs<Cr0D$WC>bSH]&G8AI8<kUH`CLL>n*?=78X`8gG-qK,\)e2^imRGH&0c[<F)Xr7UGp?lb1'PUk*%RRa;Y+
%pdD*JM>\-@Ha#4?1k)mtPNh]^MrPlrT-4/4SuhqFQ!t5_psSWU7<7+Bn-Q78=C<NCOmmh4b?$ifbJlYKQ4Y#2e1j"b,b6fp>foXD
%]I`>'8!f^+iVi>`<_U*Z3MeYf,K[HEghuO;3r[U0Ij_ak;P[uES\$o(E.P^tc10aQF0q9`g,b;\r@4Ga;!5\"ACgj6kb[1cN?)Ik
%*d``]a7jeh]m0")g4aG(Z+OGQTh^SXj5_[3he2"Z8i\l4VPDP@`i$QA[<q,!:M2W[pkN?(rVi<t*[3\&[[-A.E^c`@53)eDCmnK[
%-f<IV13A__';q,#f[b>QcJMqk4s`h#kj@G;h/I_enblM^3PO+'[_q@#NIEd1>cU4NQs\N*:sO1]\]gg+]">Y%Z>$,'qu\stOgiSW
%Q-=`rpQ)c*-6a:K0D3b<dGWdA#?p<^-R6M*HD25_FNd&+8[Ua(,JFE#eP)7A$Ds99CMZ5?6#VLA(HZPKJaXqTP5F!h\#4dhXBLlm
%kaN41eFQD@CQd>8G[4I%gJ_ERCIr[/BIfg4TDFClEUs8E&;nM'RqQ5tMqpS;':nDh4+(uggZ@0c#KkD&iu[HXXJSd?\%k"Q9BODS
%;;5#I]+RdmH%$<`m)Vb`0=4FlmdhCf<,OoscKp?<=sH`(*kB'0T@.&_qmWuR4fT->`cr"U)aMgp[iI`_o#R*,Wt&Uh@BpX-,*mc9
%f(&t>*&pa_9)G)\J+u<"h/MSp$c[caTGsW2Q=KEFn6pLtqR0bVS=/lGS]mR[NOl$.+Mi7iq!]uD6`#h^#8X')_1&KZIdr#&dhsmu
%]1fMR2ZT+*Fb]BJ(]kR;\40:MKA0LX1B!*`NRib#mX]_g-;*OsE4Wc1p5tK5Xn<r@\[gEY8\Z;n9$OAu.'-Lr'.&N*,*:`TmfRN-
%m3-QFG1:`GA.%de[(`mOfE=(3T@f?NYGLR(9F\<Bn4KDD@3AT/B*i"$DDJD+pbp7LSS$onhRm:jcHA_&Q3:793LIYMST%I??UhRd
%9Y-_d2QP'D7As$S5CCfgB%&5t,Ym#Uq!4;D9LOY@7>o2Y``f*YC@j`3F(@17XLDjB:A:MAZsSI]Lan6Y<qWXb3?-c?L/Lb6qB8c\
%p:&MVY3upBi?79A`8l`lNr3nVop!BM[i]n=,*b<LVK;4=A6AqS<e]O'q^ca_P!%'flDF\LSlKOY<3:S0/a8XJ3)6L/6$\!N1\(b]
%acfW\?t9g^#68fm?`&lg)`%&.[?!6L&G<`Bp3F<GE)l\A@iT^E.\[c?0c)&sM<0%e4f.cb%\(bb@t=sjE[Lt#@e/Af)g(p;KS8\S
%HuSq$CA6G,!h2ZseW'M#Z12"5-]2i?l!<BnQo,K*[naG$l!/#BDbE)>Rh;gkTUYm6Oa1t,d`q,l(K>RAgUi)pmu*TKlXSE3!@s$W
%R:^d:E@VR.nmEtfX`h20E*(HoR)1G0^M[pZ'5.'Y%U*`f=EGM?2.#9$02q\-&io#>[Pu\.`7E+n9=W8Z?UOf>-3O`r7g@LQ.jJ,4
%&O6>u+j]2[I2gu,Z'O&l<=aVB=(P4u]Ck[P!Cu1Nf%(GpWeQ?$,EPh"m-H!\h9W;KHkfT/f^>-rV=XIO;EZ>#BYGMmMTQ;sau0pJ
%XmGV4POiRqnoBqe2uW%[.^]2<,*,[u3;Re(P"m&0Eb4]qg^0j<S2O>;+25i"`GOgO&m<9i^(^P-ML"Io>s6!44$BB9>LGp)fT0Qg
%2NkeO?6?`r"L=(>1kJ4LBrA-[K";dA1:ogm%c`@,_`r82Lg^iOS,s`F*X&2A&1,Q:+A,@sdBF178uO=rYmn:\3(CH3#!K+jr6o6r
%6<P:?.)%-bY$s_X#2D%ddHF7nFrIV9LC$Dn;Q$"42`64*4T'5K4\s)=9L(N]P@<=$pbb<s$,N\]k/[S#C[`"4Ek4FU$j&"(%o)9H
%35PK4>0K:mD[p&bYCiI5Ul?*"&$gb:o+#%.Go;lPMjfM#3\Y9e)J!pM?pHRN^)Y2F&XA&f*&\js;!P8rD]$OBn8M9XHh#XK?L>9@
%.%j4NL8OZ`+M8O.0dADBAR`pr$]Z)Z7Fe+ZMg:0LH=aR$&75bRjuO+U`(L@2iAbV/M0!e2HbtU%`+%H7dfUZQ2(+KZ9Dm&)!f'gJ
%]8bCXSA3O=,8:f^`-&b5"p*miGJntV9"/H(Cn)bTBR,*fp_DGu#!#c'd_FMgcb:<om<FR<p]lW_^-1;.KT=9tl8"VU3"\].+rlJ$
%0,rI>KT%Fe4pY@\2659Pi!6o=fTkN[a]CKBh$KoU2?!"NSH&9(^h<8DLHLa,"9[KH?'&b(]]\[u:cCcbI_-=Wc@djXg.C6!+?"6t
%WN&jJ.mH5dV,%X"lQ^*`+047'-hsU1'C7m&HhK.(,c-P6>$]5hRB/6nnoj/AP&CR.ea#Pb.8qrKnMoShaF%4>E3-@sjT"V/)M];"
%;=uRKWM,fDW7h`\0l^et*(($O$f\qpB','`##L336*VcC=)5;%b]uG[W"g?9\'MAE;!i)7-WCndZ2KYmcYKD5k2ma2HX8Kkkf-3f
%,(k-fCZ7(eWfs@Q=d%M@.1'"YoFoa%nJ7F>,Q^@)&3$NFTb[p1)U1t%P5PWc4>IPS-(hG[HXP)h_%QL3NL$CGO@Z%'?rG;/)J\5!
%]cEm\OOGPA<:_gJ.409<p)1&2aG(%:/=U5nW:8d9>JugaJo%MG;9*>6h7Jjq\9>8IDdJ[3XK1&%_709+!g,^JFMWc%W/:?c,E?5O
%8[WW/,3iVe2\:Q>4W(VFng)?LP6AF;e+;=Onf3@oH$i2>Z*T7-_3+Q22kD[>b:lpJ`g'@=h<7l6kZ7PaZ'9K<kW6=_""e3_*VnDV
%`L"b9n[S9&;>l&@`GbYu*pWaMqX3B0YYWB&qeap/$V/HJ+0uh4n]2<"R,MkbF.L6TURKGphZ)uGO]umQ[j@52!huTkdfZ4jH/9$A
%1S+La[3;u4!HNapk"h1BKfHTcqt>_DF?u+0F]#fjJql"HBp@umWQ:Zsb,*WMOHHS7U6N7"a[g?0E&_ocG@I'AA)m>mpJ&g8c]/_s
%qkqAHjs,S76P""@PuALLB3RM*MG%c_.u[^Q-T>MqYT=mhfsn;4<+An9)gK=T2&QZ[M53r?mC2=pll$1.A!@Qj.Td(2%6bKTao#q<
%a?IT-@?d_5d!-ODgn7cYG=k;U,C&$Z*-o3:/@AA\"q8Lo0,*4)l3!Xnl+SKOij\6.@>a!Z=m70ES#(>(jN6d!!\".gU:WcM^2mGY
%p35+BX%^jS]=*d%^i29MB%&hHG`NR:(YR/`_/R#jEc'Fi",Pf^3H8=35@r]]Y(==#]2>!igW\'-hDiK-*(X(8GPcFh1n:OOKaprT
%6%YRUHNY?>DPjb0],.t/W<uiQ=9#e[P=^OC&Cl"SIG2;"<V9JmUsb(fQ$4D/:H,`0"!8[f!+S&,DEeui,@V`=&@IH^$COM#CO=:p
%G9Kl+".#kV@f#j`?;I2aPt4jmMX8Gj-gK[7n=m;#?Hg+f2IBiE'C=mg:]'D?FY/1e9QBki1gf$A[Ze!(`)[g4SWStB/-FmTePE)<
%!ZQc-&T,9J3n'WA\6M.O0X[TDWmPKZ'"$UN!:.HSHm[-l6ZF"KA]4Pm6mr_%4aqVp"!T)B?2lMa6Z+&BIV+/#)&<M'X<ea-n&)R8
%"(Uq*QI,Is\>g\5g!<W@+1bqb"N!iohu,7F'bZj[RBq,hfl`".NkZ`94/$ocq5+/E,224*&;))WKpVQukC8F2$ZsJsOKF?RPbaOh
%M_nCP3bQjaMc;7#/AWW'FuY:gacC"/@.dV>0AUS;gtcu8,'?Ng_K&:[)]LAj%<2h.1iie?bMT5`odabc9Bl5#`8AP=^h)gIfirGu
%A=a!M!WFM1$pS[\\85"sc-p;S!PQ$,C;ooX]4fMLR'W0AH)Oab>iVZj^`)F"gkbP+;*I`3c^Ck!e9W)B+uEeR.Is@lF,H502oSfA
%;bHQ=23Kfc:WMp\ZZ>Va":'`Vi"=65H*VjDaEjW3MZ8F9]HO/C*`)pSZMWQ:$[XIPW_Oc.gTrtQ:d[[P4"3+K_iH^S>JlMn5*LbJ
%h<HA@9"-P%3D0KI]RCn9N]/`JZtg!YcKG]]pNX>hh/5[Q-:db^#kdk0ZZr/3n(dC#Ls;h_2gojQDk.k11";$+@./@U<"ao*_l#o-
%?g:iM*-Xh^WmsHlWP6tfcE%A0U)Mo`>`&t6FWPr62\g^O5-)K:%ar`FCfh9IZl+3YP9=<g[c7/hXV,<`Ohe*&m;@aK+4<%;Z>V/]
%O`@?]@r1<*2VpAIEHuVg9jDH=Y6d*'X5MO16&l6,%/>?R?BY2Zoo1F(NPm0Q*iRH=<8tHN9c_24QVuPb&a,%`&-B))H'gsjBSc-R
%f%l!s&6-\T"$4MHDT4*Z<e;uBSu1h1%"oGif7VEI$FCH4a`@ro&7)0*Q2AALDU*lk,4g+C!QV("-jESIM9a6:7s7+$m<MQ3,lN@k
%n4Np-M>IfoIRS<hU09alh4ritqrtHM&tKJH=/6d;9XI*Ib3N)Uno@o$D@M3K)[JI,qN9&ua[ti<ot)#3kAke4.+;#Ao)?g9ibEi7
%(@5KdJ79mhm=]]42QcCN"]8(9R;BNUE/4&_0p:[BjYq>G.iTCuBnZ&7`YW(qa4si)-$Ktm#SD)m."Llt>UtMg^G3>t"6o<X!"SPq
%AnR'TM1@&Yf8q)$5XXV<RIaYAX/I.o.SsjTSa'"<F!o?0#ba,@S+ZF<APAU&#P.NrE-)bj73b9f^.3N7:7\J_"#3l-5)QJ.Y1a4B
%8h4p9dEp`qR!q_n8fLh6-]N8@D1/34109HGlTDh?;YMbB?J?R-\&E2$ASEY<m,V'chl:?%,tu\?_2u&t_74iDH"Hds(X<Q&AoP3P
%3NaAAgfijIKHeX\mdWcTe4lr[9c,e6p"cMCni!3X")814iIf)1eoN1TnX@#2PIU>PQo@A6FaE)F&=_L>dWOh!h0VE$+rNIH:Ht\^
%M9XNEr^eS#d`p<@!'GC%!#lbH,OO4a4?%0eR(.H$ES]=(4EsKeC$Amib"/-/K3>i"SX061*Ft=KpAT](=-l/o`*iB;&6I]F>k78p
%WT<_qHuCp1PO@GDd+oW8)u:H=;6oLg7aMt+f[tI:iINYqp,g?;*MaW*\$j'#Io<eoO6t/i-$,$4A%uj#D4.JsQ"e*W5W8pfIP$QR
%.)95^;gbjIm2pQ(?Qt,;ia/`f/aZE`Fs3hSaO9V7_d+Wq^G:t)P,8P+nP\Uahk'^>r:DnMRU?M80ob3W8?iFT:,/5t'8C$\U:hKp
%"06<kM,'m%#[<$[^/435Wd[@Jp2ZOdd6`/K.'bLSe#(r>\4rk)!-uWp?Q-.ECrP<'5^Bt(PZT.g^QfsOlk6u7Z%(/DQ#s;+-F`]r
%$@@)'fr[TnE0`n,LJVk<$*AK`4]%nFgp\ZPMFB93X<t!)bHhig"[r*@',2K$8o^tA?*.\<p[Vff.VnM;h97sB.;DK;jfWk2kt^;g
%L^"OfNOu`KHoF2V.A)#,5s>9<9FD^m/Q:atD"9\&;YX#T.f?jHD-Hojd/EWm9]TMn,agD.EJ]5:ZI8fSg"YXQcD2]3.QIdk@%[?b
%NItpA+BI02*=Q3K#U97Kc%Bc=gZ7js*<c"7WYr!k92njOKU/PALUUFr9L7WG7rtqC.,!`Z0k2_4mB7sk]P4VB5Lf@Y!!`<'3GG#6
%fX9K>0j_R$DrN?7__q!JaKscJ&tL7s!J8+"$7WqmqUAk">beWe^V7X,QRCD?hVCm0W0,IG!BAWm[pp\&QK^@T)CUIM5n?a'(TlJ!
%i7ZRS-<>L'B?nC=BO>uhFK'opW(cjq_Xc@(Ap7OnaZQ_aNNs%(4(1r@n7(h/JPcnADg&-\I$aUGOIl>H1["+pdJ(3d43jOb4>.28
%!:32:g'&?64E4kKmR'LjC*qa"3QH"OA%%2f?&U"@1j>dVF&_5X3V?J<[+(ZZXh*@VC`d)Lla2%bV.WI]bGZif+eSL/6g:Ukiq)D!
%cI#"\lT%,i:K[j]f&^lW.H3uk#:GslE`5isZnD:ooDU-#qRM?PLjJI1NV;kR0#keO-)3I<W*#>)4S=iXq+/Lf<s]o$@qa.\Y<I#:
%/Ai+#>*RE@:Y2<&T4]d29oo(<l-u4^Y^s#&%gu*6&hjIcRZna`#OdKJrAW/;IL,_150Cp(5)Nq!5D5(dNVU`c^BH>GH:(9<K7sSc
%2X]DU2n:aNPmRBrd&*$=Y5j#-Gh4nNlhB9B?NU1KpB-Bud7)qGd9l$4i5/:^lP.(H6e`+n8bgSZO3`K_p,cNlrr';37<26@b_n,@
%MEDsq"G-9STq*IK>YmpC0^]=uoQE0fA-EFer$7bFr4rd:a5?skiXa/02URG&#`GlEJ+4P=hg_D83m'3'LDqG_Y6[)NOJf/iP<`%e
%FdPitik<=ZrpYDjajqlX$(Qg`MNSAsn,iS]';@`GBM;9ck89f_h1;ZC#^GtS!>p>0:f3Yaa_b8,"OAdipA@In84?[I-(T2ec%K[F
%QMMl<Je8n1R2%0;&POMb<=nV7D<OAsMZl'%bhRd4idAS(n#l#jc,I39^VMiY8e<Oc"OBIROgZ,t7S,oXOU)PLLh1ji'4b'M$-$j!
%8AT&=U-->M(*8bU=f6Z^s0Akhi.)Q,8K%s^"1KuM#W>:01l[2[Lp@_-aW.[G!bF=^!bXC^;-!glA>.sR9BO6e?Q.4P;-'>m9H"`/
%CnY?-&a2'*7HC1"a4RIY&!>Pi$q&EC1[$#OOVSk,-Z+lm7_^4=@tB)dZ\4$ndNX>e-Kf'H\h$lHObls[A#^UY5<-e@BFMZa][b:r
%7?J674H.>g:AZI=V-tB8"^JAb&]sSZlNA9BaTcgB"X2kWc3XPCRb]M-2ErYK%j>%G.)Bg#N-e^[#4,d6&L,X_+j/16BsA,\%[kA#
%!btAKQE+O"&i>WEX`g/?bT,Uiabu[C#P&87rA4GL@3,,,'It<S`2I@g,Tn((Nh\/IU3Y.nAh9<!=s+Z_SRkNBO0S2=aCEmimu=2)
%VgS^FZLA;S&'5*C7'IqR.4S.#%AlaL\V&8[@N5F2Sn'Dl7hW2R:^Gdjl.Qb?MNlRRJpqDN#>dO$L(&/<r#fir%]m64@pKh2BSi%_
%kHGa6X`e"^"rn?\;hkC75SKC25)Ohm=N:H5/43Rf(;gNGZ>pW^\Lc;qY]p:`CEKoNQ6TN!@-0"9^d7J5;DoSfVCgAY_7qh.A"j+%
%Hs!'B8n?1+(m:dF#E"B2'!_gSo.V[s#hp2N\(V^STcM^8pSBH(*)DJfq^DGT@3$j`P\[R\6O=RJRB0on-q3['FE(0@@P#KOFpLMr
%X.>q8@:[>*_6ANFL*:BYNBt<9S0O0p_*S:)`UEkFEXmbV0]Q5B$:e:*"jJ#XPgrM:G.c"mG`ERl1]h*^(?<ap$g/?\9-RkC7Yt/*
%7mdP*E-@gJOgYNMTSX(kVtHQ#[4s'?'0$@-6uA7cqh0?R\Aj@L<\][RJIsGYUB(rYg4Da"Ur<V."J\E=m2TmL(,1b\-nK<gE6,2G
%N5NC]X96kEO<6;N`_cqP*JG\e_$k-/O<Iih-imGj;c],K:qWX*1lD<(P=6&G#o)j8O5aLbec@9hdgn,\L(c0=5_9GT8]jq(66n,5
%6+[E.Auhu'[F-K$203"f_`Q"(#5tiHN^AF.Njj_]$:uWQPqm>(#SSH:&dKj$CITQ\@8MOrOT6#F1Q<T:$7QDDZk"Bg)Ql@m.[[aq
%#R#B<>Md.Ad&\7>JR,UFI:sEF42.?j_U:t?,P#IG!"fT)fI?5*oZP*3Uj7Q*WYdEYYl-$XI_]CrMlX?'iul(/7FGodXdBk`"M$),
%A%r?lJ`\qY@ZR0h(="(o'X3VF.)HNHOX#AiQKec)^UK@2!od=FTe.!+G`EZ?0PrH+cn*>g"K-YNqm,^N'HltN-mm1I'JYV6-!XKX
%N>#lE%^kmP`EDT@aB?XmGXO&=#!B[Jb%Vs:^GN%P5]T9Z#:QrE^iC4VODQf&.i-*Bk/%/+"9"1T`1XUcBA#)JltN.Z$(G5c*.r]C
%3(L2MOuA5_'UU/%eL]!#a<P.!!T=l/,%km*,`OTC"G8k<A^:>e8"!p'LnInf/sD71^GN$eU7rP#;bU/d$.D0o!^s5N.<@<k<?tuk
%0%A0F[,!?<"X?87kpV*##Mt[WH(1M"YV-UG8BsmdOf9Nbd:+*V"p3Y&+OH4];cYT-g0*-'l+uF:G!ZCH3/YU7%*k*F9:B@p0+$Y]
%\j^n?8K%\-[[#kr)\C6I#3Zn:XZ&$aI3m.r$riB6$-Sd2`E.W!Y_[t?c8,t-dP-\OmLGFSJ.[AAe7'EE0:IScUh$R7!5Y=[Y3?rT
%]RXoX!udah*A.XV%`HS*+%<q4S>/&"X9C[3U4`MfNe:/f20G'KPr1'85j\tq-Dh?Q;)CLF&]^:I('NZL++o&W=9j,a't0fq2)K%C
%#7_p`_A"3$J&IB0d*`AA3a;qL+>ou8LWe',U)0K]GuskkqISV*(bUq04XFVD,'&NW9.al'>bV6BZ?AX/<h;.U'a5P0h2YNU.'&n*
%"Zt!aMkepkKlLej*R[V(NCWja7%UYONf"0W4l9cim?i828/'540!sXI5B#Kmbe7HkO3#_MdlrY==]gFp(O5<FGXr`TMW>#rC8r@$
%=HJ7moKZ\r>e<DkTToVW$aGT23ll->$J\b]bJH;rcR8jMpcNpM3NL0<5ai3oR]HT&QEsZrm>T,,<kE#uH6GB^b-2X&Lddir;=r&K
%3?BdJ;'p!j7iY$'6:W4k_nm_(^^8Tc&L_M:2BP=9athPf#_[unEQ4(/LoaV-*/B#H=GJfX#e4?eo+]n0A,-BG<BTcbA[K^:YrTW%
%\@Kil#n[8+AI01,rG0P"g&OEB)^`Ru?Rj@[I9Sf=!A3%&M`Jf`."fS*LNX"c63llZNHYs)OD$o/-TEZO7(g)A@1/$F&m_RX`kO(+
%6d@qN/JNSD.?SWBPnZ6JA3mTR!3s9/3!2N!i^fP]**S*4bP2@7@dLa;%/sgH*Jb3GiH9Mhfmh#AD5,Q2ZW>1hCm;4@<Dg(nRHb.(
%,/[Wj#Zq3Ba)4"tp*bfNp(?Xa_`.?Bn0V^[3t4V]Fq+qIR78<V$+/[>2KTAQBMgR1&).cU.Qd>,B[q^-CrUlm^FYmB6*IhV$oSCe
%8'qW9">aEC_-'$p`B.LbBW`YUG,INZn;&o>[kjhf@;Hq_ARQV5ngr^1A0,[(iCQOD8_VZpUnK=q:fkeK*<V/4BY+<e(Qg:+4Mu27
%o-jI3i>daBEAa(Q],2qXU-h]*Z?$Fbn[-A!c;c-0#0&GE$@cb[03OkZ/3G,sLkGC5r6)r<0_DG[OiF'76YoC#n\=lB&o-S4CLn6i
%RiJ8-#]k:GkH\ba8$Kctqa$$Xka.$F,go+t`$k_hYup;6U9,SNE,2rG8)$K)3">&(.h8.Bm/oID_)`>Hj7%(E:XN%.[S,o4c3e1G
%7"L3Sm/R9J5/bOLeP8-T37KRB2BJ0mF4rADQ\KXE,R@ucKLBfDB<</JG05dDd>G9ontQ=<$<FcH5AGi)8TQNuC+&?VC^g/Oi>dIk
%!26YH6L+o/*LT/Sa-^b/KZo"QoafJ*c<Pf&[7*kuP"n*bRXPt<kMbd%qAB-'_`F#8R.2c.=J>l,*LUl:=d_Z.d@qWkUD4iNVF5r+
%j.1F^7CtQS4CHSArqJ;KV-tCe9JJ%W&Zsn$QG,[IO#$dcbhH@9)#WTt)8)XX)o:A2JBI84kmYpr%;WG66,+t@K?T.jO8j7aO\:kH
%%3:'n]dC]@:(1jWBI*MkC<<14Jd#bJK2Dbcik\DG=mGi$rR*A0[#)Y+&Te@.(9)k/A[$%7";)M"hVf$j?rt.;MQrFEiH>Jf9MV@\
%q!Iq#)#R%E3Y^EAQniulM%2BVk+WW),RQP&LI8j4PG:79'_FZQE&l'WV[1-LSj/oU)TG&uJ2`U04D4(iD-P6rptP21^t\!F5`$q*
%0pH2771*]EH%rae,gs,>rJZ2>(l(G)MaOEq6M!sc"RHtB[=aPI"3q4_0#F<Q-B)WIUM#oAZQ773CTkd=_7qP&)hbF8a$iSO16+Vh
%9$(4K5M-qWYCKn2g?_VgAJ?1K%mcU'_TBZ.J8A_&)SY/^8(\6DVi(h-o-(KIN%%ro+YJ>MUH(_+6/)gEB\,9]LCZhh*-)B\A+2,\
%lY*XA$+#H,p;ne_UPIS0Hmf;VSo>fSHU3QW/$662&qe_7ZiLCrS&95Zf99UKmPFj=@3#LE*3KEa-toFo>O$`GUhQJ=86gGfhCM>c
%P[V-)%TV?PK!C-(">KM3KV2GOG?'%1^FZHRY1)0JKLk,,]10i9Ef"INNj>]3!\0bFVD+ap=OChp(jrauC*j8!U,N;RdP-[dh(gPr
%"$s(9ER7=>]Lf>Mpk-[2&L#"(a5B9(l*U$bD7:2P_jd:'0+6M;>Vj6gP3*pRi%-C6c6U6Z5"DAH88S;Kiht!p5+mK52,I8'2oUu@
%Em.nlHPH;(n;W@S<_c5]D%61?NkhA0dC:&W'5VS^Ju"8On>7Ll(8E-*fSi03o<cJLQF1MmA'ck:k9's2/n#MmBGV.k><%jl$!&k&
%P4n$d8-8;0&4h?Ud1S%\%)K-Lf[,tUi-r\[/;urj`L?l1M%3*%"sV*DVQQ)VWJ@6"U=",ilY%u<i'@?'c>'7FcF/S%nLk:97!)*8
%IZa_'KtpgR8"t0i_1tiQ<o?%)M]gDR0'lUf(;a7@FkV,l<,W+Q):mKoru(hLZ&U`7%=uk8jeJ-kT`U^oo8Q*J1K`',/4(OOM&,DJ
%d=-$Qg0##kdpUaHG+E.PrhX$DKNJpp.-1^=SVG6GX<XiF'#@&.o57+U4qX$SOSK^Z8*5IQ@;^]_*#5"2'P#KC$0RDS^b;d%"?rd'
%3mS03&C"GeaV//+/Hh6SZ)3j1;,0Rj*k$fnPdT4:.m4o2Ip#lD;WdR-Lc!I+/"U8@Tq[Jl.or&@4X*V)plRmbkbu2d)DuRao/E0+
%LN(7@?5fE/'>EtX,:kT?"Q_b_0:J:jC?AYLQt*Dca.%kSRBLca3l;Z@5rS&!MXq_YdP),1)tD>V3_GU3=R12JBW#"GoRPXuHP$H&
%qdQGh8GPY8]Rs7F1X"t.:9fh`IE&uPN2+acI+Au^!j-3?#Ap,c,\aYAXB"Ro+cRU9dm"K/"<f;e8*s?b*L[;gG/'Z30+6NJ'U'-9
%72[J7p+]5D3j7(u2cMH9:Xu8g,NXU#$-;C#qfi2]4^TfI<]_ne-i8n>^GN%P5_a72)^!m.=QOT>D<jM]HDk+7HZ1OeTbFNO-[]&&
%1*E*nO0CrH8!%=Eg>PF0=?;=hBilaW@qn`dd'IPIbrR!tn9@q@SLR7d9@N+/.Zn*AMffHg3eiYP%mIc['l@!4_7qP&A+3?tQk][R
%%MKkQ2ohClbRqr"A"T@/'':VpVTF%^^$&iaf%^jlg1eA5qSqH#)V/ol+^ZcP*--_&brTt%1<plddB8_o,gaq4PiZ2%MZdr?\Oi1C
%_p!:ii!)]ONT+:\f!0IuPf4ipH9`.7>0*A-1hJORn'kn<R<qt^`h<hRN70DJ`=j"-AhDa"0muO+/;s[6+XpYG7u,ZID6ltP!nh&,
%h1dK7G=1(3UnL:m8A^BD#"OaFd"B-dEK":@pDENq_`=6h;\j)!aB5A5ToIJOIO#&9NhgLY6U7FrMZPs*b>.]W-6,o;I0r$*TApnd
%O5aL^etK!OBN$B?FIY+%"a/0e;.^Z'*`!F8!tEXN$UgM;U525LKY[]>/:gk6;*/DTPqrpMd]a3EPf/]M,nfRN8e<LdRq-UDRWHV6
%JMoX[<l@=desRK0#NIa3TPjmK)oaVrQ\BKG-S:d5ampPrPl4bf[('[N2"\_Qi#F,*+0lT_%"f_ind0X"!RHp042l.K6V#NW%Hi6_
%7Pm\(kHJ(cW_kih5%K<44@.`e-W2?M[4NE?(?r3tjuN%3SJ5epiUePtARQU*Xb_7+/NTG,+?8O9,bfQf0PV@p]359P#\fUPYulml
%00jG!Z$caCFJ<&RqM]kp(l&/oP+aTXcr7aDKN@up2[j,l"m@4+b1bm+?=ea2X?di#d9_:EC53(V[ZXU;ns9gc)?8-h%\7BKk4.Y'
%GhP4I&?S!tUaXsa,%84iLl8RO'sQUrC?pjY"?M!g[[RS`FhgMps*sb!AQb1$7hY`b>dm7Yn-)#,dEC29(Z[XVIlgV0J9Hsb7?'uH
%YN[O;>$R1\>X'n\$mb@B4@O9.M*;qVkiQ.\IK4]B9jm1:Rka8g75d"S\l,[C?W3M<Yio+qQ/&WoN9"I9)s9/%[tVRjO#uu@06GdN
%Y![@bpXCiY*[.phU5kD.-fE:"42'4,6T;L-HDu_O*W#9*#gg'4<J!s>>3e9DO-/3cZi+nPIu`0\`<256&M#P&'L4<Zmg(N,(ie"4
%.]h_t^uHj'r;;iY;^>G,SnBe9G/ho]j'/q.4#f]6a^/-QqIi#%\J!p02k*e^#rOt+L!JMYIu<=687%Q2fWUT=9Rs2b33G=1O]mQD
%R!!48_'Q[pQK<7mW*IIr_uZ>I;7ep`O-(Dkhqd\sKFXj9rl/`4E9gFr>CqAp3ckcnE&rkPCcS+-I@3%\T-?6F5HO1h7u;?]%Wo@'
%<OuU"o"G6XF:J[&^)J?;&L5cXlm;ER^1%$Yae>P^:d?o=h(nnq1JW;,N86J`N@6g9l*\Op9H7L[pB!MuNUuHHr1>1ENm*CiHm";G
%TA\-,D6299crsq8.'jA+I+.@tRAf@'6S\2WVRH*nGP7)[glbZlrNpe4QmsPY-p.jN&gkgC#qZ1u)mKdgSf7tfqVBiCc$I;*.<=0)
%BQ$9[m-%H*!#&[aQ6Ol5.TF<6!*W%h$_j=^,3Tc234kHBH^oREr#[/pIH7l%h'ZV'3(5dQFQ5rAZuii$$u)/oK37*SU?Ab^nAfj7
%l/+GTT-?8-^Pt4g;\'CJE450)P^Qi/VEnF$1Q1OS*a!OB1H7]=D!LQ(DV.0BE_,]]&P=bY5>B8EI1I+>!W$>FM.4*!X$opO"paD9
%-V*r34<8/"NrNTWf<uXTU4-XsYihZIc0Ido0uX&\pO,]ZaZW6.!K1@/2`Jn?_Jm4trtrkoplGf?NeJN?:#Hf.Y@!ee*Kn34OL*DK
%nauKFqmiOlBWfqJK"b[n&BOs^V+O(qZQt;Pm2-CQlKQ0!LDeKIQ@:R%"o:.)6?;QeV4q0EbAoE-LAbTb#I$lTlGC_+6mQ/Eo#ssS
%PI`+M5p+:Ie(aMq@(W`!.\=JSAN0YWpch2h!2re.+@71+O1Bfebtrmo7P<$iRj5aLOQ:EcjK$LiJP,TXMDGb[k7.=/#]??OY_A@)
%]`eH[93IY>a<K+6lN;P\Nm7WQ2TI]m"V:<r"$qKa8bA;J;acD_;DX*e2U*3&!7aMKIPnX3i>Fo-Vk>0cph&AO%6h*IS:oVpigI_H
%r_F,3Kn[N7(/D#9qJag_MKPogXe=]<p)aVse^o]Tp#;7Ri7"0dK#D,Rr6#!nP06'`_gTl3d]60Z)-^>T]eY\r5.QP@kQ"YnDpd]h
%#Ktn=JF/n;HfsPDIWt.N,.RnNX:B`fA6p0/9)dct2eDHl2<$mEgU']2l)Q.t:eLj%&t<_JgS)BfIuNG"r)ME'cM[+/#LL$[T'H5j
%kY1YT\`kI-C1_+kgD+O:?%*U!*3+8$r@*=cWVI1287pN0%D&iNIT>DNB<s.2$e&ml!uXcHBt?TCqZcJOd.l!t*:k3JVaq;r%p=<u
%Ac7E3*'bg^W`8V<`=9ucdk0JhZJUo-,-f\sUt%-`$h),,NCb]<cU-E>;JV'm>G+3F-rg>^$cj(TRCrA2CtboOij<^Dq8WC_K'V[A
%BN5u^_Fi#Ec1VWW!=_q4/&mU0\m>-mGV<_ipB]55AXDF\<L>Oj2r(WeN8u[(>Fs>.b47Bu7k0BsL$4>'TK1XEkd*nu2gm;36j0.L
%=p:Pcm?U+hjo6%B)*CLT<l^R[5N<Z.J</bh$t^MadFA'uo'f<TQn4TM^.=aTI-<6-T-C_(;b36&_"^P1\IgH]El3?a_K-,F8.PKM
%CUAl6+jucg$b$]THGf_2OrGek>bP<f>RpgR&[2XXO(LCm>AFFHTuEfRE7lQD"_W1'2P36T_u2<1_r(UL=aOA@H2[j<=/joQ*Nd("
%3C?hNTWBAl,fn"'(?kNdT-o$,r[F#raSGY'`+UUA:"qIS85l)BQJD<PjAAD5<$\)INh@2kXc*1Lq,=)D,\ZI5J!QFq&"NMqYr@o+
%,Y)(Y^n4R01GTX'\pe.*5/ko+d2;"ik:Q_SLi1&Cj^&iGC=?F0I@Ci6:ut57:Sra#.eCnM%5s.!!VftR;IKCHFO=Ik5=KZ-d$KWd
%YsYR!U0FM\@3Q9BOta[u$#Ue-nUP?XS!@7,L]a_GIc^PC_4ekW#i,k2khUT:1&3E5$+pi%aPdT$cVcb$aEObr"p!U+?NW/If5?"L
%rtrjdW.P3ULktD((M6PU=W#),M!POrd=&>6o\aOXqiRpP%fK(@hnF)[MVRnhXA-.hiZPr">87`.VQ#q=>[a(p5HsaVj=lPPfm`F)
%)VU0uoJTIeTtg/JOQ`-mR"hkdNOooh5h:;pGl%BK;5Q`)1LDGuMTs/PL>$$/8R%PB?J.P4EXP%hS=#P/CT3Z]Ef/g5a7oX;A!/cn
%6mE2OXR8H011Za_rK[7i"G\GqRO"HuV$XA,*HUmDO6K93S:JX<o&SsYGIjC\K#:.,i_8J\[s-t1OW/2S`ZQ3U$7jHGIHZu+'\@)+
%N(LTGK/(eiT5-&VnBhDsha`jhLAOmP[k1j?Dtu:\NfI)0j"()[/,dZ$\8Qco7"<c)\Uj9$Rf6>bs(cMp!A\0LN2sCHP9(b\h6<8P
%=PFYdU&)!=AB%LT)t/db;ZqlMr1`/MF^e9US$`aNfrGKJOm@-##b2%h1.N&4n9WHkmKOAm'<QUortrkOf=.=pWgHU%P$:?gcN%N6
%qIR$6AbnE^[7;eO9b3X;S@[KN9&c-7@jG-+oq5B-T`*bC0A-U/!hAcTTXM%)l($9Gop@#59j@l`LR#P;F6MC@qklsprI2(T8A`Dm
%@A<BLdj4#A586VWj'>gO8jOtK&(bpPX#3HY!L'1kZ[[qlQ3Pt;h"'DKjQItiT7IlJ'^e4R(B7&sc`J8bp>^GBonE`W3,7pK+!WdV
%n+^M!E9@PONMuDZ$8=Kk,:2Mr/V_C?HI7NJIO'T;g(fYEcMfPM_lR_r6[`ESj1%!_U%=;[aEH0&\&scJ/Aj_G;Q:OYBnk/'jDm]_
%iJ.;@,e'oSjJ(;-*`4GC1J*-Xd&06);a_PH!XgrjFHK5JAjsb^$kM?PrDOsHF/s=8_3k#4]RcNLs3.3M+=_lGCB[DKgU)o^kd.2H
%oN],?C9RQ-,!&&:l/70,d3>]RfNcukRn,Sno`=Qh,sQM=K?bGS&uV4cW"2Y@8J,$LkPlCH!J*j80t241Xu'p:k6hTP82jTn#"(Qk
%ku'0\SN>q1:#.Ak'lV<g+uTqtj_9Hs6M8&ZOA1i""3jClX8mUQW7u0`JY^k:kgl+Q"?f3*g^X.Y#S-Nk75;3X^/U74RV@p1Jc'qL
%huMb/PbjefhON%)\I2bS@MV]F;rrc4;^;TAjAr'D0K1OtE0,*KAq-\(>/i"cVO!%[(id883X5!-RJH`Yfm2c\(sspCg?=gr:)o;d
%NNt3'.Y57\WUI\0N*0D+SGXd]6b@V7Zl[QQLAbU-[gcY.TJ5f.706rIXYeG70l'W.@Mo>@'&A/A>RoR^%slKu*;5s'@ml*O;s0Em
%F.dHifTsrfZQL;1>pF3daThBlH/'3a.-V7g3VM>>s/1Y_(!rNH;@l^5#VpC-7WC2QTO\"i,/UZ%%6=mn@aGVG3lB+PiVj\1m9`ka
%;!?U'\[K^-KF4E1]Nf$:?>_aUqbSs;UG;Btd43P<n`u21;oD]jP9:Cn@Vto`1sem)(#1A6,IQ`6C8cAbc@5o(^KoBZI1fU!jLjKl
%]j^pXae@'aR^1g%LV@3.q[@KRG!rp]9R>5cL[O0\1mdLWg8!-ZNV-4\L.9Zn[-LPqlh:JW<]*A]jE35-&5ST4LJW7:=$M?b<Ip[$
%H2#V_;0&G#@'iI,,'fi5[6*2J7$,QIBh=DI"iLeSViG:V\OA[1)tV*@%2_B1PD3PifV3<kPgIHRPlgLgB9fIbD&TW7@db)VfOM&)
%2#D8"jkdO47W/)SP!?Npf5n4ud@d<"j>l3Hh*u?\<>WT.=$6,3#%3:)`GjaZmS=F!if$@l:BR\8$9X<J8LpHDN+fg+LY9,/UCe\*
%W1,n+U`/;T6ToA?5=BN?YH1l=.BkGF>R/0cX*?opQ2#^h2;qQ]J_m2tEI0Y-(3IjoqXk*eO-(EDPXfqoBEoo0U&Na40sna@$PXd$
%>leGATS9$L$$tP#n5B9Jp.pejOB;C@`3ndY?9kO=:^imi#Kp_kV+kRjbS[]$RhAZ";p`u%.-l*F&!ED,5KjVtX,\F7=o:)Y3/!X9
%!OHPKZZQ=qY.,ekj/_CP7EPALognM9s'nHP>"^jV]qHk3iA1KWB6*E%1A)F0Hg($`HN:_Rlo,%JjEce[%*eD$^[lr4kQp)pj.g*<
%k]E%B!]X4.f,?oB8D@qD*k,o!4EM!sQd/<I."s;1E.<i)En&NRp\[MhCQ8t$FZOg/KD(*Q-\8#G-483fh`Gp>4U9j!*W)a*%UH#b
%4eI/+3d]qX9riD2Vq2tdqd]Xi-]+dpGWJ5LU5'-K<WX?5LAtaO\$\Q4"?=;#O#s'`oUB$sng]tA\Kh.t(DGm1CR^8CC!cGi(W,_n
%qklspXYWk3V)GF4:?;mSd4Hh=3p+lsfOZ8ig1$dIB*%17H>7Ht]lAO\f]lKV2_k@j<Sa*"+RSLI)CVYcq%AA$_(g=[V*IVmPeD>F
%RWJE+Sc;VV#PVWWYg46MPl5cOeu?(!4WUJL<);+*jd:DijcXLk9W(sm1$dbgrF7,)Nn&Y$dh+K0K>6k=6,BKP="XWFoP5:\/Ka9M
%fI)GBo_A)@pSS9,-2"*K=/'QTa,E\FW<CVGB:+$Opu<!EQ"DE[]DCPk/]gpKn&uju[2K_:-KYt`YG)6>cOrW"kcK,l**>hPPZ6aP
%_RMFaQC,!"4!amBDtlOcFChN(n>HR'brht_BhF?bh'=ZBR)[ImOS;LPlI_82l_R\>J=bKfqcEKPO^,j.Mrpqa5*4JU_/&^'SOO"K
%.Y-V%Yq).E7QP#E.Te&]^c(WUs5t!Ms7t,!SG.>nnQ/<^L!erp2+\,<AJcnf-t&6h'?W`dF@s+FY1>,MdH*8+)>AjA]O:U)L>[Td
%d/P]oMI=:As*n8$),P-Zp&>ClqYs93Q2o)he0'RArZ^[3!IA6U2&bn4AoCs!4W4YHau=aO/,0hAK=8CqoG@Lf&`*0H9jM,ACW2Ys
%M9bfY;j0'g]KH'eE`0qBOHsAp"PMk8*a+^n\ME$HIuNGDE(]oJ\YF\]\E#\-NN\ikApIGo?/LCC2d1,efY"*qI-,1kBq:^I2g>0A
%,W`b)+K)`Y?Ut[IR&NM;?%CIu=5c`FLHhDNbF;5.I6*u8+?MOK+!\;_=em+;&LbAUi%PJ#@0#@5VN:a#*>i.ZG?AtIS7aXW9e<!e
%Yc^?C@K.1\_3q]m&0%Dk\H_Y#P"7f`PXL&94]lUE"H:S;Rr\L)2us**4[u=+Y^_Vm[LT:sSD3=eb3_+n%%Q]sbbK1fZfQk.K3*.$
%mJkO$5O_f1\+GFR@g"a"qiq7HW"2Bu_eD#L^bM[Q[g04,d/)^dAc&3AWrt=U[)h*DIuN;F$-c]fp$C5JN\2N=@LQuEnskH.5ZRt)
%Cg)m8TP;udprjM[k&:#Z7WeMjk7[%t2WCYf\h1,RY]D3qpFn#Z\Mko1!656^Ns(!X)IKVW(\UXe*(iiSH*s52k7Z3L_W=.^EJ<<`
%##q#>D0W_sfT[h0>Qjj(T]:e*@g#l\_ll!g`&oZ."\9X#15tM!Sn\GBFU+0gTND#.bp_Wb>X-Zh?3,Amr\9R'W`=Rh7*%31Xd2e!
%mP(+,-cZWb;jZXQFA6NC)ZiqH`X!Tm4@>k3r#[2qig2&iDPJ;4L2AT\&7.ne`DqEhneR=if"["hae"-JVO3Zma8[T_.ua-9J$mk@
%8KHNmeDSk[&9,KUR*$oJ<oTXfIc]&q`_aH`RHJ2Npch2h)/0CcM?3d&\m]%SYp'2T".&$=:E;npoQ<p?[I4B0V/J7B&D-@&5=KV3
%IT4?+jhP6LCX_6Al2hjS4B"H@PrFH]h0Z0<-4)a8&kXnIi/[b7,R7lu?'<iqHh,*5%#S%qd?t#1c&SJ08q^C@'GAYUZ'*NQPg5a0
%n+]+9FB^9$0jB9Ps5%beLb:d)/\5"f\L`i122eIHIa44ZTbjW:KXS*;AUJ(h(s)e4U'J&S%lb%I;6cu9#3\kj:C@Gj;g1VK(lTDX
%6-&Ug.33^_g]kFOrtNi]B5^DQYV1>1d:'>=%gPE$^^$N`^Ag]#<.N6j[U^3(MJYIf(c"&:+!\=V=V,mje<2Y0aT2HKqlJM4G&C/N
%&6^g\CZ`,O.UqKTCo6*a\*T_23K/Q*Z;uN;'$dNm5ita7#==iUj)9NUCb2LY**2OjPH$-7rfPE?5O\A37<Ib`Xn"M-[Al8MZdj_f
%.M)K8A78#HRrLd[nEPn`XokMme_0R7!L"Jr:Q\o*YV,Rj/1#J'%b2t5EQjlSi[<+IQ$K7%%>TK8TA"(#4tCn$q2YJb7#)]4j[]<U
%0^74BXI.GE/Nd)DC@b#m[P]T/0YepQ*%mhO]^kZKpLC"R3j9LNj)Rh_1]3#G8rV-(I!4AF\lVNj9[9gNi$Dd`Qag-YnpKX"'Ysg!
%Y3X@/&"iBOm58th?j:a!!3mE*$o:/6QmWLU2sIX-4?2^)f,a1tLhr^<7FQ*(n.$EVbSn'-6q9YST3YO%;9M4sNuQV'2F>5Tfd6=<
%?hloTF?Ld;&5sN<p3mZjXK7_D0SUh]@$DP4)Y=le8j7C*R(^%2PY9g$Iu<G$4>N>'QpqP2l*kGdq$]XWb&VSP$/E-KEYJO6\G'j[
%m-7iN7-B=%;Zt^'5Kt#AdWQ'#FUr=7q"*Hm!kPekTW],CmcMr\-4F`T>K><gJ*6eJZ#+]6lM03SOb[GF)nJY!9J:54./kupW\(dQ
%fW)nfR]Pti[VN_k`e+)R]]K/-d4s_L1OTj_/A>+=K?80k-kIia"M;,rU6sd$gCNe3!$Up-l&V=[rpt<sYP]Ie\us&r^H!H$#3$Jm
%>Gp9S1k4$A.;Dds=ED&"n$Y#/V-&`YoX.08rLNmc"G\UkVN<I)PX9?D&bU-t.3hf41h_-8*-H93^&]Ql.40S=-./Q;_u)5u@ruCS
%2tM$'gB)r("M1_GAJOt&5VSDHfV$P=@%)&Vj>]DDAf(E2rF7+.MH,T+^,M[NL0#EF:#D*c7rXVK_^"BHB):V:8h.YiGU;Z-s/1Y_
%4Ush\jn;<EL!i\#Q'o3@1s4pHP=sp.!.$/U12lLq<oa_8D:J.6Z%%_nOL8!&7g<^)U^GM03AfnR+_^-(6P.5X4c[;9\NfX69ibTg
%=67^Js2Tp*_i]\-_&MLPTUX:c@=2=_f2f;Ui`FM(M>%(l>#Y8OK?i1>IV&Nja`RS[0:?%4-^se1UGcIJ%^u65BCW,N>dPDS6Mg=^
%>t:HB(IdBm0'AQ#@mme%Zm"Nt/o18/6&eLd(+N(Y+c=QaPEXhZ"dbC@1[4>ehXQ&PfJ&8'.=JW(3L2080U01a\P`I6Z8W)&TZPBB
%g@Q<:0)Rm^gl!Yd!$?N"rYVnWm?foH!=gm[rCUuVD[<mjP9_Yeo1-C`q=P!l:D"TS[SiSI$KaZ$]&c)Z,fb/5Xt$:5VgSl57*qi5
%>D!tk2g=U1,J!2M/\_kaJ<hCj2Mt`gOK/W06/O&>81;jIaG.%;7*kZQ^Mn[]g_Pnq=g](Wg`2Pgdu1bl[HY*p-%N94_,kb;&V_cQ
%qO.b_JDLBcieIJ36jL);V>]I'"LLSQ#0&cc67M?R,GhF49]g/Ski`6qh+?ejj>kgRmZ.t87&2ccN]b$`9@Vgh]O,4j8Q:8Nnf40N
%>(U!q;,Dt_oap^6pSZ(AM#,B672>VrLGHt$4q\a`dk6HYB'p&BMcsU3H5?W1]WN5VYW(nj,<4aOD&j#%KBRi.=gJ6Zf'J/s"+Ysj
%<<23JMqjX&\b>MLDV.0BEi:;,a8MNa9)a![lC:ZSqIh=.EWC^QHZe3[/"A*u$nA59]cY=P)ubm1*Ag9OjXd,!gVI:2Q6;5#]<Z94
%4q]Rf#?s2$Wa>0pb4\XpTl\-N.>#H&3H+\CK/uN\KR$XTk\UJ?WF=_/\uJC)RFBlueEj!>/<GU)pch5i%H,A@rlO-^,:TSeBCqRS
%I778=OVHTfFU8p>k\E_,\=[`\r\9#Z]4og\G@_\$#'\g+1e0:BCe#,m`Y3GMCleO]q3"Pl-aRrCfc0od&KT>q*lJ4-<HliMnma+"
%%Qs%s<XC%I0t56SQ`lRY.;K)`3<=AI_u2<AK>!`u!`T88GQ7iE#C1ZkmAQ+EXP77+/Wf3XWgC(m/"6&S]_'MI8Rh#)GF5eBJg%SZ
%A*7,GP%/hL9na3nFmp.XdV"h0[coXS'_XWcV[*b<ek<I)I^Q^^IRgh!(t:V+Q.M-<g<I;bDOZ"#isJ@j05F"AY^JgGIc^SHd30WM
%O[&P-+b6SpHN=Ck$j*"\!P,5K<^!qZ7$U0$SJi^rhg%FUB^"mW'-0XG08;a@I8:n6@dR_4!_lo4gXaH5P1H&N[jX"*;-\.^r[F!t
%X[ALR#1ut5JJ%M7=(0Lbe;n2nYM7qul@F<<)d@A,5WoG>473Uk*:\UB%%V'fX8R3fYoG6[UU(>Tcaq?.D^(X;5i7/Wi^g`Brt*RD
%.rt1B\*_*Yi%(?;5\DD]Z\$%G`FK8C<NQZEf0`nNpF"ro20SL!qhI^[&?A:nK[obXN"dae\EJ5]ISk3ar)L'F#ATinPE'O$+#2==
%LAb$rLJ2G'Tj1W&9X.2<F??>n-&g[!U+S=6!TMfcV;&J\Rc4[eXr-$fcMo>f9,K0\>Zh8#)Z4caXa,"=Ag\hOPgjE"ENL_qUSHs[
%ShB?ud;G=97;Mr;Br;?-qsCk.b.^<Ne#gRPf!L-uAHNmEEmLU>e`cqUmc\t/7GdN`N9E<k.J^un9g`m`R9n:&5EgfZ[SJ2[9FaPU
%7rXh2VGaWm+&PB&cM]2$K/4EooE?7+DNZ,YPg5]IU*^@sY>)u+0W`5VGLC+>J4TtaBaF?cs'nHP2I2mI>m5nrSQrh>#XRr\6ab;9
%.u>I;e4.Y;7.6tHS/n@M?#FT)+!e:3iC[$&)K*)KJgs_/C8D,;9U2pt%`_g#44KQ1L#NN21\LI4q.&K?M1ma@+Ac23gZc8I.;S71
%bn1U![jSGFG5u#N<2"s$*)^IG0;Be2pch5i!.*#^h1;(nA#mnW3c[O6BTut<r''LL<i?;o\JY96OUaf?&YE8^\b_'\@mnAM?XRl=
%gdCBCTXZ9T%`et(iV2&VQt'M6H[pGc<OoE&%N.>%cM]2DX'6rN_$*rNQ<eAVs1#;X/;C#&kIVL@?m\"91W^AQJYcNU5Zt&@48T6h
%Xq+$V><9VfEm<+15P@nLOUs&SH"2_i>a)g!Bn8O\YD@KMpWELjU;N#WTg[J0cULDqUSgq_'SRgB/^n[#f"I\mc9j6j-Ht3@G4e\C
%GQ&*c?#?lSJIL>g-+ZA<RM1taq:q::&SN3k^ggMP"[Eo*64d)3lF97Vb5WobCDg]t+c<hd#)TJ`BO=iZ@dR30*IE<**uG#W%_\?a
%.V""5-ZneO5=K[a=#C&I]11lukfIgL(61>oSVEgmPf#hh2jZ0%a>sV!@pCD;/,,qIY&2-,,@5Xq+(PP$O^A*7SN6V"rG!f.iHU"?
%[;hl6=Z*@TIgM@pn:-D\d(S"cMdfD=m>@3'bum=EGuT%IU`7EapD8!p5P1@9d$]+Qo`tJW&`(/S.pXMt&ODaRS92q2,Qh=13DM2+
%QR@c".6fGU!sirUnsnZ]gi.b%i*a.qV6Mn#PgHqB=f^b?ThLKcMUO*k%:;C&lpqe7X\D^M[rRJ#^G14se-]eZrM@>#C]aG"A=G^d
%-s=>7O.%bec[T7o(`mAZU0Biap5m;A[MS(e&Y#Cj5+3uj?k2hi!WoZY?%J&:3NnmH\ROD$kuL1W:htr:qTf*qU;N)5,S>GB+SS2e
%KArP/gJ$r50D*_8I`MI[U.Yp(NJ^RV?;:Q!e=liMkq1&B8Cmk,J\$tQ?hU<]7R:t3#AW&aIuNU"JY-M,_,F'7(JK,=Sj[mHcB-g.
%X8eOCR2qbK@h)=TqAA=g^Tr?Jj=iD_7hjZeCn-UVB#/<g#flSVP1*Ofd5]'#FsZ8QBma1'@*OLl]Q8Ragh-7=)]E>[gKi0S77\%.
%g(4SUJfRI/2LnVZZ]AY)C*16'S7(1_qo;71s(I%)b$fYIg$<UEKrD][/),jg2*+bq-F9t,/gRfpXeBHAL*0I!L]5Hq0p8TX8H9fU
%M;g0^,V]$qW#A76^6p:%Gaq2^UnTW3G:W6BZ]7D&jo6%BZ-#P!5jQIHf\HI96"16JnahPE+sBdSSN\5$;;mN"pbVO`-BE>aF+9/(
%i#-N1G(:f_@5-d&NdaK3/aQX`;]"--8ALN+El/_@l<E/dj0EsO0?g%42Lq0a*:XO6Y,I^41?$:tM-f2#""lM_<^@hL&P6s9cCpZ@
%*=)tVJ`#-F7<7->g[6=eCLi[aa1[AK9^OHhP\.F-(]c@Ke#gSl7\js*,b%R_8##JM+!\@U)GDX(^bh?XYNoWm/&MP#ndfdq\3?!7
%XnhP#Wm@a&ChDJ32r#K"\8<uX*G6$A\',#2,^s6D*tg?4,:@mFD/YAM[,g8RFsN`mo,6k!)t3\H,<C'=XLfHC0#uHHUeZ8Wj[)*t
%6nUEH>9;3:!4mh(N/Le$&7ZmgpE^7;b5Wob/&7\+R?-%LgR3*0D1b3hXO*8YXLX;[%^M..7Di@)A/OdN68.hra!eLWrts.#l]c\j
%Ja'Qe[Bj5HcV$ab_bi%NE,)E?5^pJ<'@=/qRt?^oLbZTLIuN;>016#uK)[Yjl':uHco$@mC&AZo4XQVEdVI<uKA4bB>lr7RT@qs6
%+*coI'[a0&7'=B.'RI^GO`snGoY(aq8mf_YL'!WRI(2*)^4<2WJ:M@ecFN_mr@*?Q[dC('_G-[AoVg>7W,p&0\HTpgYg>).:cK&[
%YB>#(#s:6;=gdrjJ*$\EdD=1sN:9U74k+FTJa2W:_1gaAIMM6scu,%;)HZ0K;Z^U;n_r7On*D,A\PO'3D'urfONSP?QDD)38WG$l
%QIAV['<Ch`9*[BR"IX/[5=T\_ebtaFO`W7.Kf6go3R%,T2S$L9<DN\%2>^:2Qrj>H1W"<*T^V6>+usaoFM8TN&$HQ$a3jksQ>=bK
%#;q$b0_N)Ek4E5IV*P]M7T"`_53BkYJ*6eJYp#l/X)2a\U0?I\mDD._e*2N6\Ykuq_:9:qSZF.U?Nd/VM;2o@7D!(0(s)gO>q1N,
%+F*eI5PK1W8>tTi2>p9STnt-*\(O^i`L-l]k>@%`_u;BRb@k2A.hbl-2Ch&S26UD"Rf:^FDa0-A!.j!%&n:I;dXoegC!33bnpcJZ
%qT;(Wj0gLE=D/<fC*Rge_,?3H.DZRS+]$Hd$*]61a',+\VdD$[n,/e%\r#-6<`<J&Q!3=t3ihnM-5*C3@.u!uPb^a(iF)_4LpY_O
%)qOk!L]5Hr.AC#QJ;)LI$:s5A%Ob*"N:%!Gi(.hgg1A@!SUd].4Z;lbFrnh9B3d`:%WJuur_F-^g]iI?c"G5"O-]![.`[",amff@
%F:1>`5J)_$B@e"\PtddM<XcA#)u`VFh:S`hR7j-gDKX'pWB>C^B-Y"XfoDil6'HO[3H0_'[a/u:Y\>DV,i73=7W8Hc[bPJsiGa"1
%%R"hml%Btb(BaLA@?J9ohWG'h1^3@U2D]l'DR_o#E"suc<=&7?#GnWk@kLJ7`H!%$NeZMF6#O5?MHDo\2;kdkJHU>[rY2nc=<FVi
%S!`_j+IA4^(AoYjj95tF1!2aI,=#A]"5Z!2(7(UjK%!acC;0:hN9JEFd^m`mMXb?In99E,.3sKqEJ2AN$T<%q.l:%_M*TR^'q6ao
%9!Pk_q*.>j5YG!/_`6O4J6XVOiFG[4+$GLsLnp`9I*hUpY+puea[ZM66M-f'nUHG[XDcQST$rut8`"+dE/^*G6tGNP$4(B?I$!r'
%!?T_maVFEG;t-b@,lNc'@mlY<U73*=^O<7kH3fc'VQ0Vud=.]SF@\X+q13KsCtR!&_tLmCb`r_7Q2OW,#>#1]IgUkJ]nhF/<<3aU
%UQ;o2J;6<6MM@@2Qn+Y%;sPe*e-cEWSc<1fQf/\KLr,BsbFs"aEuH>c+DS!Fq>elM*GM!\AH`E#DW)M.g[;34iu@tn&KMeW-PKc!
%GA8u*A%]]m3k?fre_%&BN%nr2j(Y*D"eV6?*<A@3*`9]DIuNU".&OA0YFK&'8OiAaGM=A`2h'M+D71)L:c_ju=Y]]rVWA*Lh6;Bd
%j9i*t'sT%,P.*+W*O<"$A6,@:pdp5P>Un^,VK0Z[+X!j"%;](GL]5Hq0p4p'g$_/NN/N6Q("5R/a#QaRUQZ$]R3MW-B%Y5(KuilT
%kqVqpLAtaOLTWoNXVb\Y&=O$nj[pL,dL<\I'6S)A]pUnNE<Vu_6_s2KT-Cj^k1^#DQ]L_:8oDG0%jeeVa8M.gCjt2]IuN/<$5].d
%1_/dTYk2#c&aG2;2q!KG.Y(lF!lMg8YMhpGedqG=qbmX<8e<9hp>-`(`uO%5ZLTdD6DF=gZaQ[MJT&L\%]$.,47j8ch[TJ'88`?*
%GI)i!1YeM<f[ZcW39W53&n4Q#QsjNi:cM-kD'Nk[MFfbAm^YPODVO$o3pjBm:h"[-XbA+Hmdsb*ba7a24H,2=hk`&,H(`<\"FYtE
%I)Gt-U>pXY5&3PTdYaa@*Soc#kr$M+C$&iO:\I'%`0BPMm9H]))"fu^a2e_g2D*-V7*/_PS6$bd7uBJM9h&1g(&_O`'+otXCJi?5
%%4-(ErIOuI7#+rdhdqT^U$)E!LdG\:PAP602Dbi_W%CCOeN+i-*(P%olB19\qo;7Q&:BC4jZ_AqS-.];=+"#tPJiQ-@*pEmBXWn1
%ci+lVja&_lg!Z62\Tdb.Ok`.&RRC"uS!lt[SQ`&\g@SS(pb8MJWsVr<78,9YME)p#aVL)Qn(9inEWZEeB,kTD-2i"5(?P__eltZt
%s&`^[`dA^E-uD#rXp%_a*V7=mNJ1QdO.g,:jG'<sO@OBi"7'H4OJ8'NLS"\3=N;C^3On9GYO4X1Z%%_n'&"/5B2FLHn=60[1Tr3T
%92V9pYW/)lf[1u30m5p1Yj2W"(d]+6FRT.",.bKgWd75Vo#g)rCZd+s.(B]`C,>Tk[4RSf)$K0Peo>\.fQ0"<+!WcI6=s;Vg:`fo
%O=2]WL=.YtZAc90%$tA0\8i%Ork;_qZ@i*(kpue3LsD).0\&IM+1XE&*9_OAW40F(0#@@BBP2'<&&#.["g*@4J&hOCOt5h+r0oPh
%g#qmn!T?:]'Cki[P@Y1J]Tr:ZhOt?>oJK5ds&V@ppr<:^Jnl2*n)rC!EGUedb\uH7-^U6,[4i;nSX[N/\.H;e9@W7.PfFC"$i@sM
%%Xn)#JtkuRq?=\DX7B9+R>VKH29(g=`,@Lk0eesBN.TtB_Ml%aruf_>XCtgM!EXHl[1hWB0L+QO5VYi.;AHMZ>F6q>TJ6$lD>Hf[
%[WBLh0qp0^'PV#7#11YF45$'c0pq=^j#k3_H&S"eHO02hTHV\V_sQ[I$hjnJ/QXq9)>WI\_7>:7Q++O0"+BurO7r/.<#WP*ojAEd
%*Af1.7@qD4g$e]#7<EZ6l7O6=p@/I*+=HVK6G(KU+X-JuWFRG2lruRD/c^B#qkrKi:,hM],<4G\6AhXQKDc@ES)1B,-=KCog_*3k
%&]%SH*`jcZ>e<U&OBWaqo,IC!OkdYVlghJN]UIo93esg#AO>chBFs;0-Q-d3D?k?5&Y)\4B1BF,%1RaIrYVnK<jKTV$0_9.K:3W/
%m8i_R-hCJ@Q8.ITVB9!r+t8;]<Xnn-[@Y;)Q2b>^LCV+o^.VH"*mni>W[fuo!8QtZDBU4i^5(I(d:6*AFC&@WWI6DI)ubm1?/;rE
%@mh/[(P[hX-+uH,2epQZ1oQis,p9c__E\=&\k*hA3t[/nGPiO-\ue$51r2FugGgQd_ot9l-U8lm5"dIMkcb)gQR.c3hLgG(S#aS$
%pWidnU*J0?:iH'tel"\8=%AD:9E:1f&^'`o@q%u/Ur3o)e>Ld)b<(d9^%-Z3k`B]udTOO/]lK.EQ<#-'otUfMR.n:!M<r7iCc]p[
%#`iX"e&AJbmY1U<"IB,o\Yd,F`QW3l%L>b-'URU6h7!pkI9fG[+iDD!-NH%^F8C^8oK2c-OW;N+KPlV;/4.2jNN@uPK1!6@[40@o
%>qm[C[Ym<iB,F0\/)8p(p5]g@rbp'@,1*)ZGPD2/;PZZJH??@nDUtt!)`+1`s.ZtK1j('Y@oE.Ds2TquU4&-,N'(,,eI(Umcs"\S
%J8k>k:_'VCNf$;P=+r>M/#@N.f'hB9,<"KJ4'4"@]&u*69%GT@pFXb)?E'W$^ND!bG-\d*)W[kk,02o>%WAjA88_H2_q0_f4HA?!
%KMT,>iMDu[U79*o%2jj\%t-;EJCsL6;R8=KT-?:UM\hC4`Y_)N!_'8,p]A-4^,0a)<K\d"qt_Jf+c+AQe@HDRo,IGEaNY:j&/77(
%RPd$TJJHZT!?HCrDKdq3^W;Nm%]?o3C8nMkd!8PWj_jiX7WdAf'>gMaetAMJ$&HC.-'@^*-NOhudj56lk4Ri#e(f5q]1$#D48Xd=
%Y$kk9OO#U'WR!2f"+>>eHJm_W(=sp'D60D6*YM`a%VYF)_+n]a%DVLaN9DrB:@fEoWJKWEdmnBimAn[Pnc5%-,>8r@O_S,4(tG('
%N!gQ@;FpYTrIZA^$dU1/s&jfWJt2ZTFOR#/!J7X,Zr_e6'SeQ1WT%u(b3%1<Ok^?ALBu1'hT'ffX<cF5%dQ`ug<)^b;.U6tK9PEs
%jp\)Po4>"F+``1KAsC'en:-8Xi%V",GqBlg(!U'\]@(,85nl@F\XGWZbjA$a$e^,)4kAL"p]!@-gU-W#`.(LMJ9^>&i1o(jS^<Uu
%mH\3Od+V7Y(0bT`hS+)MXlE+I1i$T60Vsgsf\uAH48/]"`;)&X%UOPO<kh7Y+M$5ESN4AT%KeLVV4[H]'RsVmKW0t-X5r^$5>Q<@
%TtP7:P`eZP'*65],(5U/`;&s,:3oKX/nFe6&%Ua#&CGpZ:Ic,6^Mgl*UAM6%^P_%:pAQDM49#8*7!F"UrNC^K.'*2\1k?BCWXnR!
%2NKX0F:s@.$H2>A9b8-;kIM>uk55`-Cpatm,j4J)b,D%[Z,i1\JA2<83/C;.%hLOk<ogLL_sJV3]:dt#[+SO-C;s_s&V5_B(D@4k
%d"ri5=tH`ALLDob;O<6ZW<Bp4p!XecUescNrtY1'\1f8Q@=Y;46W%0tmJG<Og4WC.kEgD!ggb&QGc-AZ&GqjdNCZ=W_]e5Wi>MW<
%`M81l\IcD9^;QC/kdC0VJVl]j5p#70jVKhK]7IIoi!1:e!rq3b,sYi8FPStLXtKWZ:1$2`YRm%prT+A$N3+AWVp\&9X8kBS+'60;
%cW=FHA:rO!l3=LLM=s9;,PAt5d+^`+ZbKa>f>q3F2Cs$2:^FN"r=^hCQ[ekZQN+Bq%Xm!pgHk0+fG\+R@Xs1`)5U\hCp7;7dfu[A
%P?;j^F_1?=iilKj8'i22V''qS6(G!jd%Cbh*<om7ZUs@O]!`/rSn!YfS_s3QHTT5"2?;OQhV>#dYI=tcpnL%&/E1b+%MZ7.,DDjY
%2'*XcRRB(#gR3,0&H24J1H5@,^\s//57LcoI]"REF7T!NNhO\1UHO.2Il;dL7q"+A`CF/le-@P<Bl<7,'KWFj0fIWb@]3OlrH/!_
%+NbF(H&I53g6tNopTfFf(L>l*pFVP$%cUq=rYlFQ_>?WZIIi0L-_a!OH6"NFA'9<LXD7@*;4_D01]+/2R1VR@Z'h%&V#09"S$c;"
%"/oQH9'sH'&e#/d<(7F#?`lo9:d)24\[H7&qlSe'87Mf[52")`W\O?2?a?"5cg!)]U#cuD*Ckcrk6fOh#?Y9lE(I%LX/2W@j-td_
%(46']*C$Uus6K^_s)5>n[7UAl^Y^^O*T%oR76tB"-<"<#LX*NUQ;45MbQN+.AXGW->IUXF.ZQ]bm(P',]@qHBJfSKB`3_2C<T!0N
%!*N(+9ObFNJ?s+gNLm#Jpr%ujEUI-h9pl&6IYnMNSDiU19(unl4#&S)a5)1B(u"<]d([L[[nCHT[$?E;RpgT>RP<Xdobps5KcT'-
%hh:Ka^*Vn\WWa:qLTdlqf0p_C4-Y&.Z[M#,O2d<"]Gdf2cb;U3].X$%g^W/Z4m*Vk\5/BI"eFPT%V8rS1U!s;ZY7,m[@l5NR5-Tg
%(Yofg4D5\R-^Z-,VnHj#7@l=7]Q>_4c&FP\pjE+E;!rG>pKjp.(/S5mbV+_='0u(n:a#@8e4pF3gTOmiI_="V+j9EagO6NlZ`YrS
%^fbrK(@*j%XKq;5p7:tIjXrS>en4sJ)d>jVV"&jB<:A!IM=pG'ea_8#2uE/ch_jB-riuC!^tHJE:cH[-Ubr6rJh_Z`#3]:;S'rrZ
%7Xf1FT0!1hoJV*L&'0H2,fl7)?D&TU@G&<?Y3C[9EWK]g:M&G;HOKfu!s:qf^$&T`SnXHW6mVhib&*%bo`BF#FVqmq_$V*%\Kmlh
%F47Ro.Yr6Z%:`8C!;+q7qusd`8<aPVWgqu0aHW@$IeE:Vk089t!rZs-iW$>XnF'5[!pj`O8(^RJ\WZ@G^e/\E>*U2C"@e#<o_maM
%!cdmULip[<YAf,,d)c^7T#YjqbE5>#!`6@nA+7r-/2]nY*lBeUUt=O0M"(Q+G(,'70Ei&B0Fm*NGhZAjWM9Hl18WR`CU799BJ%o\
%g9q$BnW[2r7VE7q(hS'QNWjEpC;l$pOK$[Jgk(o741h4k0IZp)89Mk^f#!OU@TQqRbM%FeRj-r3$_maINKR30fBm6#,dCM:7p:0X
%"t7!A0+:eB=4!/M-d'),Z%fZH+IbS*#CO\a\9>Ua2Do^_8F"Z2_HIK/-5nQ\f&=X\+oqM'MA'XE3<m1khBYU\21@[N>U#K8HiXA)
%=^M.'kF&HmNu(YK6+#uc@_cm+,*lJ#jG%q+Qgt=?![q=%VUN,gp&*VX!=GYi_:CS$B,ul$P[[9[=.&DiNCi#W*W\6R.M67W$I-Vr
%A`j18D&mq>Y0W2#<!?_JL:Z/*2bTk-6D3>(YJ^*BbpbX=NtO*DJ;b'[-697-k5[,odRC7;@cb4dfI6WIBq]++>pQ'hVes&Sl9ZnL
%<i]!^\/\rYqjrWdf/ES1V7MBn@8XD?Z5Drs"BRPucntq:FEo9^XlNaQhB0r8H7h((=^b"Da/mOCdn<>RP*PfZB$3$GHFs=aUucmd
%;K:Y21l_.n+KN462dI@+&+`^*I;trk\tm;)]17q6(i>467F03^1!S!Zo\gFh'c_%:cb;6sMYq@G`p;:$#gnp!3Sf#pHO6+H_"f)8
%d&Vl_U`iqdX1L3QU&&DO]k`)r\%dE$T_Lg\*DQk1!dQ:cg^Y"H5=nO!Mms=Z2CFrc?gsI8p'o/5-u3pT/En^36"HT>Gh#):"iikr
%$cu3EqkXQ,!82`#W0O2h$(;=ZhU!B3k*"B^;9aNta5:)2>JY[FNVOdio;K/^],/6mak/Ifl0ql0&35Nt+Z@Osf=<GO6+q*J9TTuJ
%3WL5$Nni\B.`MST4DK[%2(*E"E3*I0,OWt)XrTN`pbaX(Xt.Jhg"2I\-h>ctXAh[(c4^XY"ML&dkD@>Dq-L&4q6Jh+F!C2\EMO'&
%[.BLWe)8%9k-E6Fj5@s\72HPlQL&Ek/*H5kW0B,IMh71n5&ND_r-m)88$XPmf+$!NTOS*(>+p"oRRX$_]-*N%S5!s9X+V1&m]PO)
%F_LnuG\L=N_%:uCiuD<8`WiDCr=*S=YeRV2?nR%1_baN-3!=lacc(Bg<jW?iqmbD3b5TpQTZgUW&():%EZ$D$DdH:^e5m%rUcFkq
%PR!e,(iqK'q&<n[@c`I<7^rWnH,n@?>M]jKs8$Bl7l.?$J]o1IGp%:Sr-rALPI;]UXZXqeJS-/1_+=Bb0=mlkgsT%o7WNQ3A%D>"
%@\9?jK9_CJ6[)-6>D0ga[r]&0;9gBUim'4,'P@H&a)`=!<SDO)-%al.=oi,#@W!J+]f)!8pHp;/47]<L]sSa?]FGJa)+/MP4V,7o
%NCgW*U:O/OfOp[oaJ:$\9B%AYIOsJ*K!n,XN@u-EVBs$^8?neGLCEL[0B1tj:DJ6.3#&Ii%0cUN3Hg!k/(m-`"8(/!o;=V3?@#/:
%3o=d'LQT<fqnS)%5P0t%"aXNM%AEsC">PTD:*@1n591ohO_4rtU23rh_Ie$]`W./HjDdtX*;gZ]dVHM32D1><iJ:pSFCRuVS'>nN
%-;nUY**p$m3fE'T'=/^K,%]B11<-lKJ?K\\-uHq?ZHl*(g0ZZtK_-2%1:@11)9;Zh;8$)oAi'F1O1Coogt)53iO?u[8$laAlYB"F
%eX\n2%JiKsE_BGoSpJF-l+)RJ\X:JcZ*j)HN+N#7c5Fo51!d(V*W\L$YAnoAel0']KMs-FY"ETeld*U6!QrP1%#F'pC]9pRRMMLF
%_Thl)[AfH-hUP0P5doHYPmaq:(;1_Er0e*T9l0l\9[@bCPKKIR[*%'&*LdHL*Y/OSEU84OM+rAU@Oq/6Kf;'hnkHVijq)%YLW\T&
%k6RKBksO&nY:\hd!KO"IS7DUd4q(b*D$muPJo*L1KKJCBWmfj8>BD$[P"M'cjt+P=gdd<Q,/fS(i)+R!+6RtJ``cV9[b5ref\NBh
%MQC3ub4KV""OW;oa<Hq+ddFRJpgIi-/m"",i8O_k7Bjt>I9b+,MfXp-PjPOqQ*W3F_m,,kcU$/\*(>Z,Njt[<3BlZ_G5RsW$KW"O
%ZPBtuh2`uFIpD&".8S`d(-+?d*_]cWeNl!)!2\7JhchP(#T5N4[1mu&3NY+%$C\(2E=f"3o[0A8I_)d+NXUGF<J*8f&rp=rS3fXp
%8osuO%\)3n3fbB0b*XR!7(3fI;,\H;!sW6d@F]arO1\c#$!:&n]D%EqU%THrnTMk)Ob1gknS["tN&`(m@SFan\7W8QGVbXnaALZ"
%I'25d[:NO\i!BY6j_UqREYHjC3Q[Ri^HPIGnT*jlnopRC2KcqD,_ZiF1B;cTE-biqh7$VO^MR;IN,ss>M'Sr:`!XT3pc`imLl/=r
%hoCVXWb`ELrdCX_oFj3DG"FX%'L1HpKaXU!'M:Eab@'%_gt75?s%c1p\eI/!\Ot&SLE?kk=m7f.C6(kf<:F>rPa"sScZmC'HmYJl
%1f`d(YO3V=3.\nSNY@eT_&8#tob*bUbUY$4,&Ki%E3+?Kebqr/a>\&:j!!ZA*;LTRW"W;'7P!E15dtjL9!<Ph*67)eJQ\N<H?T4I
%Mu%J,@[)EJ?m6?ID29<=<b4;.5tm\tW8.;]Hoa)u/qJS+#dg.PiZn+6I$:uK$:(#Ri,;\dY.(eDZ"8tIOY/-noW8AYI/Te^;_lqC
%%X8\]66X?4AJ9YDgg^J_clrD7;8\in^3u&ERL]Bf^c9FCq6Dh*At*FIVW,>3OH9s$*45jf6)\Pp:@CR.LP+!ZlW>Q-s,]E[M)0V"
%&df";GT3T=M!M)/';;=&a5CK/,;!1agR!s;[\:lpUF5==Q\RC`pNdX52d)LjbR0U04fWAl\<2C7oGu!AIuVLb-&k95PClVSJHom\
%nU]]<!Y0f/S07qlm2Xl%SPNZ=cGq[DDRbNg/sUN1ITQ-Od9shfphIbW[quSD`S\/S?1keT&*$1Kf9Ne%J"@'*hB<>"]"7A<SDU2N
%.Xj_'MidZEE3ti'S"6JM&3/-F4Ph+=(9q*]nNU;FAekpmEcmDeX`p96FYLHN!^tDV;W@GM*.R>mRc(qdUsO8?#hnjuGDhm.0/r'0
%[k&gO8[!:IK!T+aT1opP3mV:5k%C2<-'k(T*;]%2$,\FFDAdID7I8+Ar"BJQ[fLn03`%A$f@1n<[J_$fT&M5NMN!eG'(SK[IVu8?
%,X57n9V"WNJBt!@A=Fdp@HMfCXB0*g7:4OkTp*qi]>$YP0$'AG[2shTB"`)lio$c.gP@NAOEeuA(I-kjHsjb)cZs&bI<m$%i?fhM
%='Sb1,(3j,*t',21)T\?AdqK5"c<]b60Jl>&`7DimOhL2/Vo.64M7RiZT1/jLHI$&,A"sqH!]p-s8'4p^OH-YWL^u3^-ajjPs#AC
%7pcD.L:)*4(!kdSj\C)(S8[1nQku&X*+M?[3(ma5Nj46ER.0.\a3+Tk`"],=%TPtNm$r^-[!ok3Fe.87kt$?N5N=6G@WBq[PHKNp
%=Znt@l6@/;JrNii\[=PE4l:fE7F$ZaC-BkZGEMm6GG5]>'auN\P5r2TG=75b&F?@3WEk'_jZ7&;9G7r7D\KfGOV?k%p7C=`b`7"K
%jIuRLBJt[K"ORoD!AR`lir@/]D*!S,4GBJ:+DB"%nc7t'70MV;mHEBQ9nMRkMnp9]C+Xn8143u1jn"O1s"WYmnC^76CNtN9WJ1f!
%mW[_YL+Q_JQ>n*N=l:S;:1?,6n\jRRD\;!.U&%E4l@9q]eBS]L9_%..M.Q$n`0Y.rdrAep=%R%?O$Ck>MH<ndrPUY?(@)uVq+FD8
%:\eV5q,*7W-&O@1D]X\N2JIe0id`Wgge[H8">l/Wmd%"\ETD;;s4cXncT>A&+0ST%a,?Q.MGR8h_Trc6;G%Mb&E9&?T#'Wc`55P:
%`9Qs\!&n[0"2SYp<eG[LWMLRRK&ah8!JsU\D4*0"$(ao&gY=r?\rKrc_-qBH-)E;<io9/>q$Q'BinF]hama\GddgTTC&&K6*b$Ab
%B>A0*a9/kaN8R']f@uHanI;g)+m+q;TBNI=^R1-j5J['Q?a.>'MROSC,&?rOh"\(&@t3!XAkf,J8E`_*AX1Ne4C9^eX5g2c[Zj,&
%(1;#2+$:ojYs>fu9jhX03A;>'a(?:n[*'Y?^T>F@?0Ae^rRq"nDYQP:c,'XiQp/dX`o-:\]tA7uhb@F7s6C2)q!=iXp'k"X>%k:Z
%l&-bEY`JPMH_5KB<.%sR"YS'ca/78m+HGOE.BU45SIrnuRQUr?pk!3$!Tip$iPLZ?[:[GV1PpMpY8ZYNXg<[6eUXLk[!B$USPT7a
%MU/S8rnUicaCok3T]k\<mIV!6BD2HO#)V?;dn3Rm]3b_4XJjI!#?<!*Z"j"/Ik)fbGjc:_hDmo+6]tC*Oi(`tEu#E$+LVs,Z0%:"
%_AXkD!2NtA,P)7P(@^t+(m]GAoam8oFhH8'_*X!g`Tb.@f\m"dp&)<.<R'Q0?+"(IKEr.,PC)(nTqpr$ROdeKH/7hP==o!D3r#>m
%Tk$C<_"\m>h.qsk.V,a5*d1RbRJLGo[o/iG#=K9OfAR,%B'\t5[d,"T7TOri#cK]okNl8mqMYspbX+l[2%/[BX9pmkf]N6"HmCmO
%>3APeCqbFB,#:<@8TR6hFi*OY5co4(@=BJl)Kr\QV)kkgrX?-lnTFO96G]/Qk\j=(3h7Iq?@m(j`3]6\U5$8gM_hH(Wd?Ir,ok#f
%Z58)\s,)UPMnPn)^t(W'h(7/0Zm*#93*3k4$&:IuI51VA8OR)!g#bQ7@UNnTiNc]!Ro+N[P'6?8^iZCG,(JB51\Pf<jtHOVA3A%c
%q5?#8<Q[aISG31bT@Z"_r$`^SXt[1c+huKqX!FsH[W?Q<[tu!D<?6CAW)HSPN/aG32Dmj!M@m(2'TF(3O9%0-60H0aL:D8`B#G#E
%l#-dDWd;KABkS2nJ0Dc]IQS5UAs9,lM(ZnfCPXt(Bbr*n*,pYHr,hjM.@OTKbFq2e%YIZIq9.sIVkY9aie\B]='l3[M^;jd`)YV:
%qF4!>>H7PiR"B1ke2Z%JEa<t0B4F^'VfUL"c;(91V9acTLum]f104L+,m@f.<.Ce\<:qkNff(s#'1aZ'"L]-Ki[_sVl*ISb@_L'K
%3$Gb&/=''>/F!`<D7m>=M",Vg,HZFj0j8hm@ESiU.ajc`K,"hTTjX_Ld17GN;/Otq.rEL.4':ViL`Q)PJ,5c#_#`aUj(t!P<r'5G
%^>j\@@4+7^#lN:L-ar^a5FesQ7\DYAG2)$r*B9@q*%`hpb.gM<Y,CF"B3BX1Ip!6)oQ<OQ.f\\L_7+Pp%_u<2iErbHBO>-2Il#9D
%=ptrmX8c_7S(%5tZ/:].(X>CaFccO1\Z?o3p7$FS<j[F;_r1uOn1o&Pm4Y04'JgD>Y:j9mCt<"0lJo\F+loedL)$(<adISiJeQIu
%Q+Z/UqCuI3GoX!CY8Nf7BZAVi@lHD'#1blb3Oc1.UUBnar$$hJF<F2YU*$9^=S9Nr^L&G@974mrY$3I]SdR`N+4BS'J,QtIWpn>a
%5b-ceF&6egk#&\SG?iMj%=?1tlXS&e0TR.0[<0`MdN'li!1)gYcjWN,`7bM*oKrJQEJMi?6GM?cCN`n/`J4eWIT1[$UMnn;T.WBT
%VL5B*n5S(rUV99f`6bt5ODEI/O`'`f*Ng6jl3H"O(!mCAh\V2!U4Y1jQhj&G-@g#V[FBY8MC``t0.U_7ME>`q(<\mF2qQ>j>p&cG
%$U1V.s!c4mIl5S.d"IW(&dpZjbtB\:*O4&/b#:KT%I-G(.c&.][K(`7"N/a\*,$o@ZG&%20.0QWI@3%p*X$:'ES@hN(q<)V[SQP4
%d^G@tSDT\2fk]1]Oht(5h8<#lOrJd?8c80Xe%H*!(1t4D:6iuq_'7V"DMuqAcf^k-CL!B9P@O'@!sp(s;iHM+s647!"M@t0BAHoY
%_N3!$7#[bEK0TE_Ec.i-0n4J6^l6JNcX/lXe'".%fV'`?a\;j4<(rtMg5!k%`U#3B^V)DLg=QVK4p9OS=P3>'N_j*6q]DIY-0b$.
%]s4TtdpkhDP(1j-EZetsIVOg7j4pZ.j]<<X%INZ8?R[(Yp6?i4KJ=Okn`itm)n#Y9K[e)<ZUt\LWi>$'fO0m7DT*]!'4:rX0ra2e
%N_GUf2?P`D1DA.!mT7JX,a9"Kc4DkRDWE'BEK<q\rQ7e0P7VF%KEQbm.:=p!_`9Xt%#2eSp1"+^@*!-&dcUJ%K&;pmED8`.=GKqp
%ghjNY\K[4;0S*V#A]#c!W!8(Y5_jL86s1)b5&/E/WJ4B,F:-R<,HCaqaWRfC<*a]`L\!D_B/$$eaH+elYi0RXPjih?+4h6lTC\B$
%YJ,//i>Y)W:6GJaOfWAF;_Q#V$YTT80Vb#,IH$`POSh+9JXJciYQG<DjEUY%Qa8]5:2^ZMV%bYU<a:46Z-`-Yd\]G`^s/$,Xt7B\
%Pi5-.YGfr^BtK<gPS'.FcTCO+2Fa]c`1()_oLY2!SN<&e+rO>qZq0nh8cXXBc.OgcGm*ChC[d6<Z.*(>RKf[r<JY.Nn(.DVAO0$P
%ULB_W.,Mao)K9PD:0\?2/tdf&.@AE#0=FQJ-Ud?8*Hgs0g(#K(-%18*U\-TKYSH_L-A<WJE@=u<H$ZaZ't*kTIlZ.bnah4K+'03P
%-nHkgaO6l7*QNc30%E\b]q./$)Vp6q:P,7uCT;r##XO+.T;"#_%/+8O/"r55f+jDPlG\$K@0Ii47Vi<Y)StJ8>(S>,G:W[&U*L3!
%fO>r@2(]'PI]+]s,J04d-O^&';H&t+?qJ[fLil(%,"e^q]`NL\"'T>?UCZPl]b;6.dnRmaS1uEpj(VHpd(1k'%TXuKs7qEbIp>o+
%HV`O?58dd/aM`h^LY@!%3ShqOr.=SEI*3@_LqMjam2G#!rJ7GnCe8GoY^aH1b[=893%TSi=+?H\4)\0sBdH%bA*G[4f`PDT,`qu,
%=<H'jSO"Al$nGSoNI*%5DA@/0)h-\)0Q22"KM.c_l)coV*.L0jm/iKjZ>=OsN`g!<&o7!AKG#e>.'*CDLD>;B8am"Lf7o%QR+=<#
%b,frBk5NTfSX*bh'.7;">YIU:E)?lk:SI:1iIo)sen,fj$Mpk&'%Kn[2HXoRQDB[c_P!+Jq7\NWj,-_:+1nSrDP"r[;jCIUFj]Og
%@*8X.hOPDD3XJVJ,*N%5!,r28qD`!^FLhY**.IALgL.=C!!(;U:t0_p)`7O*W`5ktf#F;dT79u7a&N;j:^,#Yl9rBXAYgNIf&Dl;
%I\^Z:6H-p,>kX&#*39/0Uem3ebp`[r1!UJ`%]F&8e!1I$XD06S.-t^LEObJN=PuZgD[ZQOVP(ppXZG:b"-fPRFp8@CDbHH0RlGjj
%OjIdCVJp?jBbZ;=eS'<tBX#p_Ds5S.[=]ke?qqJ2BQN]P8HEoq9S;DJe*="i'\A)'E3nP"lNmq`<)T.2Y%.,1Ab0?E*Y+W-dhf&6
%LZgu)j9NYnC8Ym#iLj[G/?60M$b1l(XXHZ(JS]X,]cD)eYC#/#k,L&:mY)@SWuC)CbobOP'Ki=./u-ZJ*(&Y;W)"\V=HE.s5_0W7
%?Y:]3*6:M0j[=c3<!Nf`a,UuFF@*sE/e2AcH6;rU6)fau13Q)ON9lI7qSVG&R$?2;s+^kKAlM-:d'$t28$2HtEI`AbWG<W$Y5lM0
%m8OkmQPF/=`=C&#0;m:d(aLY4?d</XjOc20nPnd*"3%_4jZQ.gQ&QK4g\Zjm]mg#IToAV3]KW3mYnUItrh-`JFk@K&1!d`954@+'
%SbMU68;cP89oe3g3Ab,4#8;\\3e.T(GbZDkgLiL,f$&[``c)u4rJZ'tf+id=;=FkQm5e/3/M):N8+RIA`>t&QKl'lT"=cNt2o[GW
%H1dV.*Z+;%M?UPMld]cnomqm_UIe'CYoT)_`Hqo3Q&SiWN!]90pZ6j/9e]=/2>%-J/5pX,+\SXErW7J2*;sOsi)41km'3c"YYA*O
%L\dI=c5mAu<]r1oe&'0bN\@J/[j_1VkIbmdZ0Wc`a(okc6'6eZkjX()o>_RL+F=LuG>9CJjbP2j?,'n;b,jH"/![o'(N6e(R/"K.
%MKFQI7oCa@D2+^E4JF&,PsS/_FNkY;inH!.fj55jF<#o"0FhG,i@BBV@DSR:Q#/%ErLVnU]/[SpTM4)/3bEI=@Ano&P-%7(FB81O
%o\(3%8u*/*XTZ/\0`-[+erXeW`0?"M(qO0qHq,>?#E93._H3BSP/[4T'tQB&#u,TPhG:0Y*[*Y!I:2KX*_.E2+QJq"E&69#>daVI
%[K-#n0j03L]Sc5@Dp7Vc%n*/Q8C'!g_nBsM[9mGgHlrbWGCS<h*X4id7iX:qk+^2oIDm:0'4cku(sNRQ4>jY5e_=LN0n]BlBdgOB
%3RQd:ED,[0S$NTWL'd4*2KPmroO2Dk$X]k76:q[r[#&)eE4c!qe2Va_#;&EL.Pup9%JE0GXn^q6JkA?5qD.($1PCA>@QLFA]6,5-
%XP?=>on78(J9@Caq#q@<N7Bch6;dCqIU&mK)@$p!Q>cUd%?/&N<cC,&'=7Sj(SWs1BqkgB_Te6.XX]S90\j)@2f8>H;V=/PoQ3DC
%PpR82WNdoXgDlQ6o">]5#cnZip_MBl)s]N^V(0k[MUP'+5SDT0.<5D8Sb^]ki3k`Ti$L^<2[fVlVVi&f3SiSp6*WRX>qpi181>*R
%j=Y'oW9i)7]RY__N5B5k#sCFA;fI:kd&dO.!"'KqcNPZ,E@>RefA^dbH,nXmCp>m-XoA79RQmo("eG\Y90b^fpL0,Q&sc.2\j^3E
%GG$En-ST4IYHgnqA$%*4+gD\_@'[EG/nl.Ghh`TVFAi3FXo#2)%[]oG\sbOJ`tbdeNJ^,*-Ni:N9E)<(i"7F^2U!GmXt(>`V'd4'
%:i*//#pG6qV"2)i,l)i=KuQE6S#&r]s0P1L(amRr6fu8K/,nfo3D)'>D)MK;aP5(Z-70)31\ncAO6[,7iM`j`)(CJ7A6oLbTd'm-
%T_$p/`PAA9^UMM"&mX/<q[(m`@XMbBh\I6Bc!jmge/Ooqkgb:T5j`dfDC(<g*5%0ll'<XZjkZ(aXsXMbJ:p*q^bhHPKfFi5V]W80
%4k[jNQZ*rmEP)%,NfQ)L;XL(id=WM0e?,#%e\+WlCob-U@;XX&`9(6k.`POeB+rX.C\IA\B"=PbP74Y,?O]?F0B>i'G3C5eG"5<J
%`;qYQCYAtF<l&">+c*"FRPF,[/N0P9iCbJ8lh*0."&b4]5lS)%N0sUCBLug`P-hV!]BX"QT2lXg_AkNR^#K+qOP0)E6+HHF^rc`t
%(sN-kN$XJn#p;;[d6jO6]M8ECMIoqInDNph!Xr6+$]fdV&h-%=TEoViVMk+Z`Lk_H`'LQRPdGrp9VE`ms(=U^['1kM-#0gjDG4KT
%$81>d%L<H_AaDbdKqd_JGnN"ANS`O&25FYi%-,<YM.46!6lc@qC:M1L(Aql88K=3M`4%!7dbk&pZT(;,hC%[0j2/-qlc-f?*\%Nd
%8-AquPW4_L81;H,RS[Z0n"0+V(3@jFK;=FCj?[E*?bQU$s+!,,#c?CYpqqu@.M/9eZ`r*r5(0-u<bT_@.H)_-iY"]7NHr8>&hHY+
%f`;:k\h=?#JC$j]PWTfTi^;kQRiV$t'FRG7$cJL&O2ld6V&W`IfD6R4%.fcJUhX[gEF<r`%smsE4dR5R1AJYhf_CWO7rZ@EatBTn
%WP0#l#hb!k:k$9Q"(l$:%R`omZY)SM<_S+F<DLHM+FlZU\m=i][nYI6+am"VBd[1JX?`c!6dTV*98+*/c'8F`:BdkjGrTX;eK$o$
%X1k,;Nb+cb*ApGQD1YSs0Eq!R.`c+[>X5I'UWQIdC<"ruNc'6Ri_O=s*`3([7<mZd>UYss>c6':n;%+3miES=&sa;WNmVhnJGhl$
%WO%\>VA]ERRoNJ-UIJS>i^E<'f9l<*(IFPMC"?O=U<3(Gae)V!6*u&h&E#UZJ^W4n/\ju/E,\b_MFXs-3Zr=:_*1.,J57HV?*f4Z
%p.T/nhuHPRDi^s9A.=\X:0SLHpsT3uKn'4t:&Kr>JhX4@DH?[L9jn:869lNCZ-7p='O>^)G5QP8^2!?=3MU/eekpA$j=E)HE3.X\
%GQD6rgC]]2U*&NH?rDRn,J0lACehY%\\sVbLFnC:mah8L2;+:'dVrrR9@5n/J?f_b9#BfE^`6__8XC#!=+fWNX%hB\mnam_<J+V*
%.L?#V]YM)l-qH>T^gl@0:HYd<_1VnOM4P1!:$0gIeTnr1kPW'V:MU:e?o3mS@d6Y\+g.ns;;'N2M9'^;@F:+n']9=<MB7\!A=p\L
%8U;bM"ZgLfO+!h.4Ac,TVL%'3-OQ*B)rSm.32<^T_FV2DP.o3<MEe3n`c/IHBH]bjAHFEt-+a2^5K#_KK_j5p-"$j!;Z&Jr9i;c9
%]"kcPm=F?bi9!Ru0#sIaPL]n1c[d0#X8r1MAB?'W9%Ci-306nRe`'8J?h1*PKhpk$^8c5M^Ra^a#<`*B7B_AhCQ7417PhX&AXa?G
%Q38r7:7tr%--32o_U:P:cj>qZKJhlJ/Mnp+m_[D:+:sf'\68CC2$G5<'\1#"mHJ0dW#&=MYRr,h)nmQkihK`i<b$Na,>mEehl&P)
%XGnmj:gYmU!$%<"(4o*j1)D%RE'0`CX+71+.7f*B&0+eI)d(A25HOY?RY'b6&="%0dd!ia31taG;^9+3(KP$tP]S,uBNHf1GVD_p
%Tf>.]C7ffWe<#rjj=LA\Gl8+`j]H=,'3h\`.4b'.OibJ3\QeU%25MT.Vo8n[^`+rj6=E8%.[[TY9Q70;DJOH*-EKhCR/8&MdoaQR
%WWILtrPJXGiVA"\:Q%TsSmct00'D/o0JD#.Pqdlrj`ZmXIEeD8'g12id2#'uNnOfN[2IkJqH*u%QRq`(3b2gn7H:DbgfNh\#\CO;
%"27W`!;\5rdoh@24L/]3'"Uob!/D/l9!uUkHBhgN0DO"r;W5.-^]Y9(qC*hVJkV`4-_Oq#dIU\!HR:!R[LaRh?)o=(&_9uOi1q/T
%N#T$T]tPCYVD'YgT<(`Kj,tF2/!<I>Aqt*!LO3#[/,loM+B+R'5er$lYB0"ZGNeSYAsf0DLl_@ZBUl>PcXDTrOW(&m<;cr'M:b#6
%$5dXNo[jd:/;:.VoN#HaX#Ye%6G4>NTXtAW>#A+`UlYbbV*/#<)8d8@5JV2K@V6P4Ed`m!/Cp2.>l'S7aI:^/OY5!4Ia8eG#;Rb,
%d%N4BS5<ZdA@XRa-Km<#!58j6D8i-u'/[rm2a!43En_&a,2aeqNTaH\i^Z`54U!?jf?=`obYL0'<mAJ&Jf(f9MV*eM6<7IWLsYro
%/b*g"#]u,Go:aiU2lCG:RYF,fi)b8T`D8!b`n\/klTl<$K:YE7R**q,g$98]BgnJ("H1_RYn^lC(BBO'<H2SC\>EIA7gaemCo%bd
%@>jYQ<HJ,C1'S`dQMVaHOZMK`i(uB?,QU<eXU,C@LD,GsBD(QZ6s9/P'2kGSNh2Eh`</--Ddr'<]R!?99]CkL4j2mI$i)MF&@a?J
%V2$\a&R,"=hG8&H-IPh[*N=eVR$]3bB1K)o:)HRWJo8N55h:!fjY_9+iLQ5Ubs>SHMBuP\W*kT1cSUi@he=d;B_g[s*o)JN`U<6-
%'n9C]&dgDS0!^:%-$7mpJMNVW^oGWm&rT:'TV84<0,M:%^NMgd,EN=o+Y_j$`_i>OZ'KW6=r+#5eYSfrZRkOBf&JT9>O@2g`#+i,
%*t6%Bq+s3#c)97b;gQC1jNo!4'oC5N3Cu+LiZc7-->2Hp=]m.F@;uMLEO'3J_h<kJc%CZ;`<(9Z`(e:mWp'2i?1Nc9"HRNc89D@b
%pS9eYfLgB87N9i)jq]<[Ukh%sd]q`h_K_B7P;jR5E,ig-p/_L3A8molg$r4)3IH;QbiTfR9(bJ+bO]F4n(7GN4lKfA&J"0KDVT56
%OW,lk<oG%_Q#^D[l0uP0B=]U=\-*9pBeuVQ+Pst&R;W4mSus%L9@r"2"-;QtKDC!;Tc.O`PgTajEJ!r@MEe3i87?b@!Slcl67?"4
%5(u$EpCUGDBa1gS&]+e`2c!rf@4Jtin8Va0F7`PHIN<ka1#>G1A5-c]@UlKtF0XLV1ADI7<UbFYT2l[pl\DMDVSY3Y-H6V(''JIV
%(s=j%-UOm/!iY6[]#"a]&^&?92`,%:5'@[;08Q@lV)iIpLu[WD3%$B"AN6&_AB&el)E^X4nTq\*:[8?790#]GhQ=t]</CQm:>b-8
%\+cIH&2P7knb0D+"DiGZBbm?`hZhmYdr/Mee6YH095b.;5a=)XTN/j"2%HbZql:'Bjl[`:r+T_.a?HMX[Ti>oY2]'l?jkWbmZh#+
%OB!J9h\^_'aWX>+&/UC86l#rTJt.tBljqr5`H)(?Jt(q;;V1`X8`@g[j,)23C?Ecu5HQGLpR,nhU8E0i:eFE27M85Om;TQeiPT+W
%2@gJ6AFi)V'@UFHA*-4].QRL<+&r=sp^"HC'Q]Hrf,oYkEH5Q';$r-G6Au5_>On[lL%?pFP@E0gOY^h_jd/NhjY4D&]<M0PK-m-]
%X[#aJ-i?e6bSR\Jdkd8G:-DP[_)7Xe7&tJ:?SEp-V@*#6iEPf]&ZLQIaI@BHrj8h9HBukf5q4fh^OnN.;5OC[GM'$.Q;Qh?Ho"6Z
%n?=Y&ca#B`YL;gNIb*k&d)YVe".8jl3B:\uqWfs;lH<S5QuOBVMQEXKY?ekHo;@kMEU_dkb4VMLn@)?&cb@?"e&#:&c1.lp(o<&8
%=[T6N1-S)k^j?nja`E>SQ\78&^/;f3Zr>Xec"H$f8b9d#(_,#7c/EA8rUD"J_[Wnt>O\O*V%M(<1>g.Ko%%%sAhR9nB@KTkIs$03
%#UpS'GTSq\;G)(&,1'Q"W(@lU>?e1;BV,bF'QhQDnZ(lRammDJ,")*VO#Q$&=>s49QhtJ3WMjV*6EH4D23mibmPYjE\8:h1Q1OHr
%:+Xpij:G?lV'%T]UD@-E4p%)'pc^n\oIVV."&'JS]YS-)b)l<NI@lAtP/S:t%L]jPnu(#kDstd69Q'_V>GJqk'1%h"/)OZ5Ifl9>
%]R07l<pkn0h(bA6X.mtYjG?m@.-AF[d(%?<ZiXaS7flAVlA(WNDmpZ:H?U+:=n/CiV6GJ..e-^6@a],=3r4menH(@fqhWUVjhDn)
%n@j`"DO`1EEQ[e?/Z>(!PJUObQR[`!o]#L#4D"mHC=1T8nU`?La3Apb`0N%$mq_p0Y2JtcNj@%N->aXP&<Q/lUf_k]gBD5kp-(PK
%cZ"H'j#@4lANqt1\$GgL=tH+C"W8f8W,Za,^b>%?/?KH_A^b>XTD)"X\?;LF6@0F.]k)l"T^YYji[F7IhCrYh@1JWGBP<^%ATWFt
%1hSXMi%3QN#JJ3Y&OjbqN4KE[&t-lJ`%4\%JOrL3lJ>p]o3lAn"CGXFmbNIZXsaTV9km$t5Ore#pN!A35dMot=g#B41U'GLZ17B8
%Acm0$p&*Y!Y$t.tbJtqs-3PmsgP8:e^O3EH_AY4IPD$%V94LEMcT`uVe!^>_"*[2m\Fgb<_,2Y@5\3\9bUhcdW_?U[CkpPZ#e)Hi
%^C*t?EBtJh+I]9p"go;o[6GfDVEisH'2>DtJj29opP&DO4Dm%F]jWu@M=56Z['K$gUo(sJnFD^krU$dQ\ke_\[hoR[^%+(plNQ3Y
%rq=<h+$5\9rpm#Ho'VaDWK6T?`1[h$`%l-kXA85<6.$+3kDY$d6%9T>mG#^in9r9Jes1n0:N[9mC0\Ha*V:gL6j2E1LhelUJ4`]B
%Io7sK+I;K.(8(`6!>p+uhUDI:!f3>aKcua4kiOpnWmB;=#\5mNoQXJBaoa3uW#GKGYP?S8P2Lg?UrL&ZnMkB##JGe8#.,fl)rB,`
%#2lMTG@+Z@J>(.2H&S1FHo4u;+']#<N+fBTOMNKf**Ao49qi,+C"ol<^,-,Yk9!b&@81Gd\cgR;R(R>GoIM7nd-L2LdY="+'_5Eo
%5s(+L[P[Oe1_e_3%2o>2hHbus[U*.k(e;eJ'_pSQ@U'%g`<9Wp?PI%PGhA`"FLU6?CC2-14C8MaT)aY^H5N^8oS,+TI)a1+,FQ,[
%3c#/[54%/bPe,;t[ia"eN?X+E*OgaNFk&=aP]3K7K)7au(o:TL^psL_59"UK)_-%^rj\i8_kt034tMA-6=HPYN7U-7ZRZTJN(DIt
%=.?-X&qEYFamC@9Eu`.!K.oHg%Cul4Q<4.36.E]g'JIMq'?t)NXU>cRo0Q+r^+]<BWj;Hs,go/\R+OXENk,;1d+?9T6$^cb%2=<j
%l?*@\Ot(A"2OJMk>M83lpdRORBfQhpHaQf#&!,3?cra5QfKU%Z",8YfcTeN+e#EI+hP=XGc`</(!IHb)!cSmGb\I?GeY*&.P;Sq9
%2c0Ij03Xa?_)n@.AZ;"8#lCr^Xq4r'42'CQ_mt*^2bI);*Q0]9_Uf1"#E[iQ>On[l"lZbi$JJ+*gjZ%se0d-4ag.?E$SSM2Set;B
%_+]*sU5F(YaJ@p]JfDBms)D&Xc7bO,:daO/&1W]bS(.`uE>aTC.Fp2=:,ZL7[$Y0DZfY%6bM]6'"IB>^/Boe8BqWi/i![R.=H8sD
%081bJXH@A;%t[NGNk:#8E6<hHSVXe2HmuFc#VQg`74H2@9Z$Id"mU5><+0M?W'OeSDS;[nPedd=@%mqT2i^G/a`]'P:2>1KQ?7Qi
%P^ePB2(%d1Jl9uHd]4&NI6,'&(tf4F8O_M_WcpED:fg7T#\U_:VDn;PJg__'^9@=lH@gSjJM;%RfCVE6D*9m%Uc:MAYCmO8)5NO7
%?e#CAZ@!,qR5)70C4aZ_O@4oVj2LulYlaNm[qfepemLENR0kYiCIh/i$49dkdpCZ'EBU;jpNU_OL+LPrNdMR(mbI!i)Z"R;o^8sZ
%?gjRL/jbf7@O8`9n<uh>i`SL`FTF0LT-eV]I2:uqgOIBYd?U]_07M,QQqG[ZFRjk)T@O]6B*J&MZ2]87]iH;<25ZVo;F/Kf9_.$o
%H@dLg-bScSQp!jd'Bqj"a>BO_a]Ce50ZbGOB\i:F"7Rn[_<qa+'96GX2%'!V%pQsP^K^6+FeuETS9I9=kQ!93`$1O<g#4\B&dMlh
%gG@lJEc<P+-?g17^c@umFjr8;>r[t&IDkLTYq1AK&OqX;f2+GK[L\]reslrGXee!WDV"`*>sYf`!/1Ha"63?iWMh$NUsCbX<XX4G
%%Tlpl?$[.lU+0UR"l_W>aG%A8<h"/Mo*bL^R_8oOmG<X&qQ*GqNcU,V=d*:$T@S+ggar9]b0j+VUJHm+:S2g`M"R_)3?2S@@?"h8
%W_H1?!NA@Y8SXNRTW@b^(ac?d=OcshO&f+/K)#G27<f!Y`!=d=oGl73JkW%NH`=!$p#dFJr,H:6LX&0l[]i``QDFIt/DJQ&Tt!f!
%Yr]2Y".p"?g17l>5<nq2N?b$JC5k$c_ts;9@^U$e6al<"p&PRB\:b,"?kieZ">M,U94>N9puAB;"=4GC?kXl0#c19jIp:0Q+#W%P
%2A&eH_nuZ^SL00j`?'!UrMV3r9Xda)jUlJ2HtcR*W]j#[6rk,fBg%G%M/7%V07f\W73-SFrj8O>H=@&8$H-3E.?Y&)YMnP#@a+9f
%2b,2aNPLcZ!#S*pActZ`jp.oQdT:,1:!m,OqN@t4Mmk``,oQFi49eG]YdgKs"<F=+MfZRM<r?Z36$,h&%;-U`lkpR!]>dL<>oc!K
%8#+(nZ+mu,4L-*7i<UUK)mA[.TEg\$0nL:J3#/i0g.!8)5U2r3`O!dg';nWD5uIm"Y<W&ki/]Aqr&$pL?uMBN$4S>P^s"M1[5i+<
%kY9$SS^RTT[hWZ;Wodn=bZO*RR[^JpQVVo.#EN[64Me*@c9A?=9GZ_fI$>Kj`YdsrJj6Cc(ndR"/9lBSo,a<u5\+i2*DNG)+99Za
%_ao'o:`Hdc_u!l`9]5*d--,V`*,nRQhP[Pbe?S:7X#Zb0jFN:FXsl;R9E)Gu,W$"LbS6f:r-!D25"c'q=\n7h[U>`nHQnVBNu!!*
%)H,6CCk21c+I43*7KeL4GJ\muj.eo4V8m;(nom5/5sC!<:_ol?E'1;8@_T&Aj2ur[55b?7Mh"/ENH=VFE6l"%>.#?j\_+&,.L*69
%?</^lr"+]FhEDaJjhki8EobqR5R&R#duc&YR*pSPRI6+d)LdZTbT&@&pD&0]<>sX!`R5R=Ea;Z`HcE)7)_=Lm&qMW&8!?")^l@il
%nqu#8#uj=J]7i<pAUuH3FO!JFSY4S"U>Q]OJp78TiqWYM.UtNG%'Z8iQMbGk6$.SH8-Ke%p,CQb9(OK?W06?&M00UDjZr*c%\(D4
%aXbBNFq;>FeF,2;%XRA'%uCoM)AC:EN\Tc&.".X\bioOcSDQ,Q;/G2oh5pD3W^<Y*4sG-&1YgE6,MTV"d'LXIK5O;'"50al]i.E1
%'Es,*C?9'^`)7kGN!N(9I>,=gk0/E@90&N/&%gd;!Zo5BYu_^-O!A&oh3pR2.i=<+'*;#W&Q0LoD%3/sa]U0"\12WO8=WiO9)4Gq
%#4P+5H24O-,9V3"f?75]H\4gs:Fg"ISVV+L.aD-b\QDuR@0O?JpuA@UCIn/#`o+'8VhuW*2hHML1k<5>U-cqWMl4]Eb&m_?ig`+Z
%!LaQeIZl=m,;#4jOa\9#84^Qd!BCYA_4nd`5)n1?c&+`g.%#qVF$phiokXRA[oFn:pXFMp!<,IL0FhHc6`Ukr(0SPI/jAkG%.k8`
%%F?t"J4ubjO[$e%$GGB;8kC)1=P9dP+/-EOpu@eU?4KhBO/7FNfK/W:CNbXudT''E<7P!'^QOK(3((E&<uupH!Rj")*T<'#=X0UR
%!@Z=FBI=kHFq#Ncrr6s3-U"s"aHe54(Jt.j%%dl_KX3&HnV.'X,cIS,C)Xu.kheU3NR@"Jfl:$:ILUBTJU:e85<>@\`b;es/]'8m
%IHp6EB?C0F;TSm2<W>9.="g(KN9F8hX_!*W>CYK&^OFm>@<$cc)Oir-<6Zh)%:bR04gCXU[!\Nk*,+b9]3XYB2$"NbeN#`CgAT^b
%05gmVUIDY3X0B)<m'h&WKpEB]<_`O,=l*b"`Jn\+MIS^uf]M5M3QGuDY)e9"BC1S8mU(Fh4L]KZA)'>%WcK%@$OPcf4oY!fTQd\.
%o6:`Q^!sI,mY__F=6rqT&IYJGVH&'3.*sr/]X8+-H[9!I3S]8nH9);S[l?4]gFUBV9'[4QA+f&`*rk[_;pr#mEtL"nhtuLMVuhp<
%aEbLKe'pkr^4jteD\13Si%0LDgi?AS3*-H.(TrR2OM2LM@I8;%NS6O3G^<8=-e`_+T=XsnWIjD(l"S"kaa6tk#TCSY\JIun03+IL
%$JZPu$4UJX!Y8HZN<rJE1@6TcP\5u\8#oaoOW#Ru1L,'.]+O%pc7uCkH,U?okjm?g$73@[5mS@7A'PmmG(-d.kE,IE<N"r$ToaTA
%3.r'_h()LK\&)G^qm;)5ZcCTl7*=P1,I?+38"/o3*`pHNZ#:l5B3]rYq<O4Jm]W-tC(fX\D!C4ZgZM7G^JsbLJdc&9L>.ZMVBYKZ
%opp#N8J!Am?UYe3%:#6<p'?\[B=(p#J2S%>n_":)[I@lU?Mr=7Y>5pu^F4Y`@(Tq<I&5dT%1)GOHI'3a14nYdFW%OY39EQ861N]^
%ZVB[:fR&YG\flG:+eq^IS1Qg8MWd7GA_@:pZ(YqYAbu">QbP^a^e$F/"B=-7,D_$-/*p>sI0GH07u-*$&#00S:q:A[(dYcL#m1^+
%`DlPCM;,dK?t+OI/[q\u&l@V+G:oFrSUQFYjj+utIAYqN"I,A!T#G<"Ff]gD0N63c_l-+-#Jpa(#de0DmS#^sH?YVI9D`@R5,Q@%
%"<MDK)fT99m]`oP#]?OZ?BVQ`cW4B:):T`krq];Sas8Ji%.Z8Wk4>,Ndq>o23occOd((=R9/87@P=,SI_7N636:!Qf8uE8P0j9q"
%&eI04c2tmiB@@8UF]+fGGq.dr`utoeZ-QdL.kH-No&sE6aM_gq0H!J.S*&5U"]MAj;G]2`m,J8hnjkTs\`_+H]eJ.f(=cc0pe#fj
%ZK/j"qm^[d"7%R^)5dbfd'ZoWZ,cNMQbP^eTGShZMin(C60Cm4ape!NE_I5_$u#MCYqpJ$JE:m<MaErC!(TIfMTLHpZ>]*6<tU#!
%IW&M0);]jCN,F8=nMgUgRBp?ck,1CmHa9;(7tAR-mp.BhNNcd7>0n"G#jd"*Is.g%!Dl(t1Q7WY6u>Du-p6uh_g:u8J.]0?gMc1C
%ZpBjB)Mdn>:n#$.%mpl5R!I%7QE0rZ%mBpc>eqq%I3B`Jn#>P;!S`TWIiaJJKcgTC!Nu[+BRWfXEp;<Z%mMmN(e:B]'KY)$_*upt
%Nrj[XF;Q(m-1P*;#ua6Z^ogql3RALKoD[8"YKmnB8]ilR?E?5E!*,;aKGDqd>Ve&L$h7],i>js^Z:Cj\&mXo?H7_;5hHX<E-IS.\
%S[6DE"/AXB84g/ORY%]/qP=OP5Q@Fh?_8ZL!Za7eNl&fNj+YG(#^a0e9G?X7$7gab@HK*GdeQc[!.WEo8K"VU!mo^Tc*@a.IXIR"
%9%7C"2r)BLO%($Jld1P@a=+uTWHRj3a'YGcbhVb&0kXBn:f'hn.;7LIGc(^TS1<\`U]pS>0IFC]W2qXR]KMtqWYMI$S$q/pgWnH=
%^SWs':D=C.i,Kr_ij^HG694<]*5E)5rq]k#H\olH&g4>5H!#$I?3.-;A]S5ehZonFI98cD_-M.oK`smTPOA<:<"Yg,#q8g5E!Y_J
%"p6&[HJ,@4^rPQ.5\u(e9&er:NKE]R5/`LGIs\VsP>_qlBO3u;_I9uo%9(C_r41TUYSL2t72YOE_\d.JjZ]VXXHa1hWY%5I0k.7i
%,HAK)La66q\/^+16``?j=IiEalRa`.q:+SGc^"sh^8c"oOMM2=%PMD]_2OEgG9BG4B2tJLajn=C]0Z\<Bh[AlkHQ-7msScc96'cM
%g[CQlH$Ec8'icb@Q(*MdN$-T1)bbI'lLWV?$a-nm6HUV6h7mer9GR8[j:nc!6lmfX^j6(a+/T/CUH!g/L#*kn.'>o[?`4KCTHtlg
%N^ap!8<Z),/kuG`"&F9&CE:#JTc5lYU!$f8/!*ltJ`34E7fn#PUM?_;l]k::A=6S"Jn!:5dlFJ]PRFZMZ<^Jlq2gn1eUlW`aC6/@
%5jflc&e1a3`<_R'eC>D/cqCe(M"m0/nl(Ua5#V`+dFU<LLjDk+HW?QJ;L$t3s+E&V`K?3B-Il)5i>Tm#UX[/b,UXQdERV`fMj8(4
%GXpQolOr]kUf%D%1)RYA/BM0pfsIKjn5G+W4AjIH&i'A/J`CVQNc3ts+qusSL]llroDkP49L"a/XdDp]h)6+RL%-X%4KQ%8QPc_L
%\=`,uKo"]>(T_qMb2][=]L/WE!MmJZII-Kj-OT`!=?kj/bEB$H^09`d$sDf=]qZ!o)8d2_(bb+.,^9;ufN+LGK"Zh[>fI/EM>M!:
%UeIe7iNn]I]30,Fkgj,fC5S1t@:G9nrVcRLaZ;ljTFc+7Td>^X&oHr6mQ8-0\>4VR@^\1s*@)ije.<!TTuP3dZc]:Fp1Ug`m`)8M
%"7iHp\.lkk(55-RSnKuDCT(oHR`a.Qqp=;?cP#("<>>t>#dY9(rbcHa'K'MU!anl,Z'97:8BN'p:Zs7o^]CNLCdC-9ll3$]7f(V+
%Fg5Ni1CsgTd83KG(7kO&f!Lmm[o(j8Y!;g]mAU0:Xft$gTMNC@_$GcS"CBoS=%3a2ZCZ`7opHXZJ:(G@;-D5iGu1;/;[$Q/;\e;i
%8\F5Jah=j=UIX7>711;l7j!m?YAc(Y<:u"VIsn=^(sXrEoN+1$"gm6_DueKH"c=[`lGdH$i7\46W'JUe$7ZPM,MkDDq*HPV7D)Al
%>&2]-n:F[u4%h\NYS*RQln%iu(8JJCpHs/>5"VDVV_JFulgucSO@r1+#m_NE]TFiMo%0\Z_r;Ra(8HD"W%\j[*8H8TjfS*.47V8n
%G:6stCD,hUQbt7c3@TH67P`'eLSEc(0fVG.V0qLu\*"&g@@PaI5eM=ND^hXL]Hi_$5rDHg@YD"EALd5u33J*`<_f3M5!>]7JYuQ2
%'D?bdM1KNd&;_q$@a#%;l[g)7ELGKIoIX1((9;jG#=%kVgTtHF_4m&NP4rnLqbXC4Pc+).Di.eTDRh0QT[(bh&ZHU3:^qa@lkirF
%&_q^Fe:sBQ);1df$VcSW=bnO;C:YU(hR9AcA@4XEq!1i^AL.+i7B`X5JHIFjm27re85tjb!\.`5.IE*]4n1F^P4&#`Hpf)aejiQe
%boC3>G`cbLPqL!"q7%DdB./M`]&`?-pMEP=Id$@3-ON,k8Th9`n2#HIBfX-7TJ4!4jT:;-T)*WJrYC%Bdr@9Bno6&^_VK81_)-?t
%inc+G<TC"EpX,RV_cf]LU_:q(O\Otf+/HB7^HQi:gJ\:7o5:[(KLNdU!CYeObRalHGj0cO2J[@X6^'N1E-8Yh.e6XmhB$l0#sP"?
%,L?[Jr39PB8$-"T&/H)W9C2=LbLi,hZ>325):tKdrq]kc!Ju(RU"5NW"AolYjJNl,<keD1>u3F^AYMhL;RKt7<Hp(M&_\qUT'WFl
%QrFjp=bAgo?VZh',p(:3M#nT?=Oo7)4=K[\T6gG&WIjESA4Bk)fdZOtYX;>ANb$XufacS?M']VUQ\j0+W;159+AT'lWYpWf9>Qo\
%T%u6&BHpYH)1nCqjoV,$h@gRt,/-,e<Pu:9f;99,5'HbV;[&EdJr3Jn'D4&/gO>Q=+)Ep]2+R]kbqt"b3>"b9)P8PZD87^dBX$Db
%*6r*a:-O2aHa5b?Q<K>Q"r#^&!j=_]0XfCB_p^(=e38$NlZ;1UH^F&K>2i@Q"(XP@o4^Q]P"ODm*f@[QZ@iMAnP(-8n5,HdS.=o%
%Q3nP>Bc80Pd^sYnT]_+WLjNO7!^K4,9%1#A@3Idu(d"PfWQX1j/&:f?*&RP8hj!Z6`G.5;5RR&Vg7Sid6?jC2irGL_Z9BLU_m$7B
%3$Pq5UX[;i+)JR,!c*jabTEcS8>Ckm8L<_=:q1Iu$:SMPbbkr#H_sd;9j8XAAi!Et:^EQY&ET==%KP4NWn[`SoCtVp7*nFUYQVjj
%l>>uqdg@CteIY\F6!*O&aQW6rlZ8$D8k:T@!)lT+Ctg2chhN8&H_M2Y0_"W@j]==hk6lkdFM;1uXqIo@5U2UZm,I\*eNd"Air[1A
%00Y#a_F6%!9Jg7`mNZIaqcY<J5pJfr'T6B'c9\<iHF01je*s?_hju@^r/b-?;U00&nbW@u`2_tB-(Ns:^l_k"6d[-G&@Ig;-Yaf'
%NgC!M(shZjWkUND$3\0sGB9/t"qNKp,W_&ZrIUW#b@3r>]1mWOIs1VQ;rrTYY7CkA+EIh)5,82hHbGsI"D#5IJ#6Xp<C5iIJH_Sj
%,AU+7TnFh1/%dM:7K)UN:MM2q6*r\j-hqs1*?4PE="/T#,CJuZO2!hT!6#Y+#oLR,!3fW#0m*Rf2,heJH-CJp@Nq_oIh&]@#nRDQ
%$48E<CDYajD6If&X3Mt>O-[,hRQsY@F-=K'KVENiQ%"F,"gS')5(@p^i2&ha]+PuD4=[l>niVH5Q3aQ7@jq'H`L&RW`5F-/:*1du
%nXbU6?,ag/=k!cO.W3dj,k5hn+W?aum)/:gFcWG3h)Y#4qZ<=<IHp@3V[E:!(BSCNKH)WM,m!lo;VVU/AG.acTHn=g(OGpl$%YD<
%1kfMm?7C-\/=?_YAmGm],)P0hgI0hD+;:qV"[&q!8i[0*OqKeH,lJS3++=.^;umh(8p9q;79+rK'tdN?=5oI)QNA,`2/L$GFW;9N
%@l:MV"j]R?V>%9!TK^&!7=Z9">&8,rS=+&d-n^EI<)SUo%8jsZaO8FrIK&qV5pmBr,f.-ocr#a!7I:>3r_B="e?#f%0ko"q;mCQi
%ZEC#*@nC\>1A<D6V6hJWM$1QCMEq,91bp+"j<]eDF<2E'h2?M?)cZU+a5<I<GU8KuXF-_#bM11I2d=p-c+^*k^JMc,,2jbbb=Fg0
%?Kttc`,283_1gMl,<]XM4d;OF@PNP,*hQU?!H`K(Mb8]`iY=JF<X9H<eE*m['Ps?b<JSUkSRlGn]gtsBINX%Zf#J<WFQ%:k_<)9X
%a*0gQ>(J/=\+Cro!E1qM!^]FJ<`mf-Co<MFs2E%7#M$2$1&&WV'B'&iG&LK2O6b+UIsJ?hV;tOVI%R%@IJk0>V'#j+3J(h5WFG61
%JC5f[-UWndokl9Yg5NoQhRhQZ>U)(F+dJmel\/N&mV.JH\cgRRqbEIfO!@1b`f&%lTDJKIfn)t&JdDbn!s'MR$fh=&a3T8MiP7a5
%7_U,nJhf]Z^4LR(.oQW3PuUaJHQ,QpWV4aBMd1h+U9IG!2;rQ2EB*`M8Q.#BXqJ`39A'FEZd7O#/^t"TqK>DmHG>/>EDtS<.olhF
%f(lo%LgUaP981,bC`B1t"X/oUYu\:DX0D^:NqXJ(Ho\Wr2Oa&'_!b+k#95;Hh!N8/q:+;?c]h!9)1@JsWA=uTK)R'7+=ql^m,Sn'
%WJs>.f_k/?Jm)R,#l)"qJmbe8dgCY]Bg#haf6Rf$BGsq43$^X_%1fT_j=F<M$fe0A`qB'iIs\&C10)eN'j^pC]oFe[l5CIWH.CB9
%.Q!LY!6.m#GG*ZH:)Jq\Qn9!sFE'2kh$:WsJDa>Ll*0(EY;P"\Lh*p@LrpM'\D%`82V,b(qU"DDcPC&aF=fp5:,OYp<>Wp`Z!`sR
%b$Zrsp6ofk8^N^`D(Ee9"jE9)DKO9q(EiK@`<CgI0Db9b>*`hNN/a'4*'UX!_73*cL@n&t^HGSi$TYSb,B,?,*i!#G;V6%%/G2bX
%o_<iICoAQlZl!mgUnaaq6<;@.MT`0B$EUK/V^'m&6PHrpQ>A2g9u+Y7*04_a3XVK?r9\c]>`0RG#f#G4L0;k5Y3';UZKdAH8L?Ho
%n\0V5H\-Ig%W"U?R.ESMQa)%1P%E4lLq(7R1.AD:39*0KNC7[gIB-79J<A^4TE!:$DblWfB2,"s$$YubfTk0CS\=&V!G%@8JDg/q
%:3;@f&/Mp/6K[.O&Wmbr'9!*-\:tA;E@$(h]1H&U85(3=HQX`[`sKl*Q:H=YT7-_4Ck9$(P@k6hicNHJAJ`n2"peG#jT]qn'Tk/0
%K/')qV#tun$kfA'/HBlAOb4a:.pei?n^UFJ(^fHd"N"b087KQP8UChf5BHT*qU"?-:DRng.U7RM/:qeiLL%\PfU9_?4&rSoNVGX]
%0V'IVMStW9J`>VG6`IZ"'\)UK^a;d5rZ9pVWtr;QQF_RJBIFt"=pPs8dEMO%a5<I<@'L=C&F)o`a17-cL(G0*hhrDNAApPYEN7bq
%a:m=o[2$TQBb_FgfXj+X@B\FhYLEqN[bhV4I(LIZ`D8r8-s"flDcI4PPh,,s&,ar?DpK.$ITGk8G%4]eOER=D@BY$\+Lp93I-XOY
%CK)>h!Nok$U`1I1\O(:i]X47\0J=MCJF18u7%$/A'9VO,f'Le>7Ip(H*WGb36'+Jl#nZUc3Qj.niTQ@0KY@0,cF^E,Q#<S.%Sn]+
%'8.:-Be;0o0-;]X@6#-^7X@`.>dinMic1=EYUN12fJd$cL`,u]_r%%5oF"0:TR.XMScZM@P@6+%DCV(MggiK0:.cG3D/8\u:pj,B
%K0mJt8Mf(1U+MKEW*rY<[eTf;]Lh$qp8nqVj5g$L_r%%5\8NoO:JfWQ0XjD+;2Tj_-&,Oi*F@r+[cTKRP`6"nb')._//q*+)pp?W
%4+;B?0k4B5@X[aQOIX<q@mYfRe(2]FR>eBIeE(Vp'EkmIJ%mJ]>t3DfSDt8OTd]#("I/*49XkR!&1,HOV\*6+B3"$l`m[J,QucU$
%0`Ug`N)XXKN;[SSD3&5V@s?i(D_l=d^VAU6B,+IO%gWG(3J_sLZ%LX!Kli*9h-OruW7[W<r=8ns9:mpn8b<9Fs"oZ8[V@:$g/Df:
%.?FOG6KJBXUCL35'>..i*j>#I[Qd!kh7)Ph1.PE,a[8fk%NrX:IDef&,)h+]@`%+OTb0R6lKijf\m-(<]BIeU,GjJ%-5n<j[^AO1
%+[3$Mf;^Al.N7UsH=P3kX7!7lg#[.5$??,^T1J'!irnc@g)hRM,_jO8mkbl35b>\SErt(+J"TU<:s%@=L+0lN(Mb.S\l#25Vub.&
%_^\UY>m5`Jj"bk8Id$@3f@lK4mMri7.<2@n?n&kMP@eDH+VWLu6q$_/OqDC=L&0c'KU=".d_'#k28gK^7NMAWMq<)6XcIl_Af3&A
%)o(aY;rpB-^H>MHVCuCjTpH@Q.G?'p7PEeI-cG":fE]G+8H2Y8/:XNHTubo_`^L-D)"9rjfKO:,+]F=XH8slO3^\9sGY4p,V97qU
%*e/I4TT@C#dN<?Z%O]ESRgO23</@+:S.eu%!rW77DiH9mCdr$`?GfK4`r*+Keb[-fe-%)SB"5R7OUlUdmV,TAim3,<n@'df"L"<S
%*b980=WZtip#<A*]6]LK_L6oH6:5Z9^pS1T8S#%/8pfrKCCVY!7<QeW\A8"27MGM7HLC9IF<c1@73e5pgJ:!3p-aITG1u]Q<(!=K
%eM1-Y81(aMJ6b+G21mGRKf."\V.F-CD,-HO:Gr&n>"a+epC7"J/9+Vib.;WcJf/<FX``O!Yg0>GqOtseSghUVg[.D2@;IBs]<DCR
%OD52"UL79Z_%RIM&H3^%0=Z=I/cb.=h,u%?UP9c*h@(>n\ZCW="<j+F0Rh:fMGG2'(R&sFT=XsfW</(KE^bM[XO)_k$%a:MY[<@7
%!B+a/7L!d63!J5[c(7lLR9&WK"0^TEKu!P$Dju_s7qrqX'6XpZD#$O(%c$2d]aVKHgATgEqQnB&Sh#o"9#AU,*]1R0!+T<dNlWgX
%j8d7r$r/6".kUW.jFZsF8AOiX5kS,UjGl6Jj2`-MI"[M'f#iAeBVTbP*h`Fu\HP?/X#c<,N8aZ\j)<6XMF.]LL5Z,RdPN?`0q+7$
%OWQ55Z8WLP-j'4l!8nqTP!LTF$<Z/OIGLt\<\FtsGIEoA%m90`P61Y.'q;10T_p)K!nW5_rOou'SgMh<d75_>/q"^<"@uiH1-FC#
%L5faR3XrkQ_6=:9[95=f0NMeWRm^Lt>>`1-i3%JE;A&>OiN>4g"N="C2C+Ph1a4]ch`Lc'8^d)<Ni[fkc(R8X5hG,nJ3As_BhSIU
%MS]E5ajLV`:8\A*@8,2Y@^(oB`K+dmb90Z[de82sr^p['_%h5jWS*q[V<9OqVWQ3Skjm?g$&ZJS+cs]Gfn7/(LeMao;1M]@<7iFd
%4LsZ+,^P,mUAu]<=N"h=%?id'N**=Yg&h88iL6b)U!lTJmu&P(C<S>L-eQJ<mJ_Hn^HGMqCJOmP3hQou[Pe8d`K^u2`I(jQEhP/o
%^qXB["C<db+\;02"tm^J]+GAu'QZ58NMKu^%2.Nb.?H_-qqMgFX+rS.@;pkmR/ZI@\#2e$#De!)fk(,3qh8(D;o%qjBi<$6-\rH(
%M?qc6f!`/0;NP/"3\*afD<qtEm.a1li@\-,+i?O]Qc4YEJ<EBb'<IclrTWBd.k>6sFnj_?"?8WNL]VIYE%g=?!)0Q<eV-_`UoM@I
%'dMCn4Jcfogd19<3*r+Z-X9@,AAl`X/)D>&KlJaL[3=1g#\d?k%pLE8(sk363=6(8m=p,Zo!`7(_3q?S5N2T!7Kp$"(0J"-9Ws%D
%ep7]TgL>:B51t?(lc0b2$@#G7$c_TN5e!;nLOBj].`"7chAdY*0o%6cTf?5B_=Fh(Yk-Je/q85N?t1/qA!s7"%#q@#$CE12r:39,
%d)e&g4XArb]E38GP;BIsDho_XG30#%p(a[Wd5#>DNom=0,hON1gW86BVL-m_'="0Ur9^Hb.b_$B-uu7MO%H,sG7dD"h!"DtTPi:;
%(:sS.I;qn/P,2hcGO`u)6#.G'SX*W>e<dSs53D>L&N?@+TJn&rX9ke7Cg8te%,C/ulgVB]#p`WQJ_6WGSA+P:mZSBf8D*9Sa=na9
%6\\9mZr(X:?Pnnn_\HQ\WL+7r,m#O>X3>6enuu[b8_>(H9m:'$'Z@8\'Q3R9pd:C_4\n=\."Z-LlaoG9Hs)$.Yhb@OMNsLM;pLM2
%Yh?rc8/oJE\-f#>_lAGgCM24%fR61rnVD=ZfZ(UE(H9cnkNC<O7%s+Wa\_`0/q8;Pd!aE6E.FIREWLA-\.WA%\YVQm8OS`"JUVk$
%pH64*F,j-@MPTe88NNd'JW"lR]p&n/Je#6$jbjeX6$g'<qd7c^ADcrV%FWiLet5,)p/F<aPse\NS29+grGB0@O"/lR/A:F.3/ZXF
%<Y@2GE-nT%\O*"$d)L=(lAS79k,EC+3d0.^>9%EdiA<=m+W^2u^t39r\WVeZrqb:/DblXV-$E/-<H.W_W8N<=Qk3AWq_]jRkRNT'
%qMogc$J`6-ePqOl=t&#VBcX2l0pL6)@dfb<cifr/K04IlT/PaZ?[ul@kCXtb)F!PD/q8/LT_!H>DA:H3B>XGL&fP:8?lSW6W0^@0
%"gX=cbLT+BIG/Yn7roDrq5Q+%WXA&K=o_)A3JdQQ1N=erkgbBiE.KF[LD5SD9U,LoK`'?]0@(AT1:qLaV5qdKT8SY0.M5'hN^D]d
%Vn>Fm#>RD47TV:bA<DOZhH1O#Ab<s,b6Z>&+rlSAl]ku:J396\$PsYmKGs1RjJk);C@aSjHX)&Dq<N+`$DgYO(sa1C"`1?A*GUHL
%o9GE0&EXfQ,Z/;W+TJKME/_]mke<r$6;ZZ@5[f#\P0Y1C"0aS1YEi$hV>O`ML$Q/J''*eC&rG^W++*qQWA;)I:G.Fk^&V/0R^49u
%[Y'TsMZV+0<=EdgbEL3qa>lYXJKfech%H)ZDIK_q>IiK*,V!@ENSY#6FpZ>GacHr:%pd@N-)58#RH..,rq9%%.kQJ%&cN12.G4Mt
%2f6BM/AFr3F@C6NDF1A2K=f8l%M2oCWuF`8`hn9NUH=fGThD%qQ)kt!?U)A!+j[Ys"d$&B5ubGl@@\m!T6gG&R=[W&&;VSN!$6,V
%#3D&eDum$@h\5d:-0c50$skb'65d]lf+j20!t$'Cj2!)r+c?Y\i2OBo)+5g+n?f>-*)A)TJJ_ClXJ';"$4XTX4oY.KTcc[@T$2't
%$d@;3+Q,QmNVS-W:0icS!._5)`^d;D62)2=*irE]&CUJE5R$jHCa2L`@Ji0BR2Z)',us%-h%[j+#KY[KrV:ea^HP9j*qi+I&uO9:
%>Y(dY)hHLs$GRVOii4Y]!H!XQ,I+"=K$((TOKS%nEs<,oF$35o2'HApPYh,N`Q-N'%0[`!SLn>V,sY,[Sl*ZeY!;d\m<O:7etk>g
%pm&Wko67jsWgd@pR,k;k`$WJ%2&+$4-t/39f2u$@rUsRbKS_gm)TW$X=tT*ir0"O[J>VHu##dR-R(*It[)VmtV]L>7Y+Us[:k3TP
%8hL@`h'hV<RK;o_pnHGQK=;;-3JAhB?'eo-LMJnL5#Lb+'*:jI&^3`aFgt^bP^.M+QY)Y3%^%r*3Xi(3Zd:K`X8Vi)4oY:O_.?8H
%%]!r!%V1Yr<O3+&pf]=>*BS_J#rJb0eJB'N`BK'PPEP!dZ?&;p3.d&0p=mdS[]^5p5U1CYS9m1M.$9;*2>PB[2)(O"WQX1j.e(5A
%%8DSn*`JmYbTUTj:A?gB:F*X%&F1FjI\^>3;l0a@A]_+DY:'I7nf@'Kk7D/oH)%>d_-8tQo"?Ss;N[M'`NZA2RN-t9kcdigrq9Rt
%nX&DAJMUNE*f9>('TkKT<cKo-g1\<Zi3n5q8J\\*!b7Yi#D"ZkSoWIHs)DHZ]U:m[`T>H[fX6MCThMJIK>Z5i2_Y=mCp9OXr:R%P
%UY'`fgZAk9qXcH"0IE(o\XFpQ5KnB\>",#'Fd[SH"Lg6(5D0W<=Ki_Z>saa#"ofqgaXhU(bHkr]^lms;YK0?]ijb"FQ;^DJ]):rp
%!]%"TEa\'IO*j)H^jhGTG31<nZVaUN*;8B:<3(%D-3P,GhK`MA7$0t0jSn@:B9KZ\3uK$bd;W:OjMnuS^P,_c:gA5s9+ZO:o!de>
%Ur1/_>Z=*+Wld>[p((S`,cQ*9<$F:kSr:<d/`KG#_o14a?Cq4LAim1bH@<*i-TBI5q-[Gp[qFcfR7sN1ZK3@9P_LF@TDJKYa[1m+
%o#n,b@($!gp*AU(Yu\p98,fk*c&3&=$r3+a>o#n;TK%UDbG;X56MB]X&inL1e$#ETGE"W:BYtP@e"GAdNS:7!i$M$JqY)UlIBqc@
%0-(7;XCj10?rr\>-7e:8&PK/Q'"[/XetVNeD+#.F+!2*V@@m!]D;8]D[_)UpBS$_eNCFsa4KU(^O/FT+Xlrr&]G$06r@6.'roip^
%k6gc>Ef%kk%g%I"rD!EaOUFBc$K-8g$33pf(F)c+Mii1EnC?0[OWKbN#:n!W%YPHk*V`TY\6KGJ#pY\Y?0\"lQ+0)A]dM;TdLH'"
%iG[$Vil37tJ>0go6\:gN,H=[=859lWLdW5==/OnR"arqH1'b>*_c["<8a1HOf._Ig)Q?*]TD1=hP\TkV4Df2R4IAhL8>'W`M='U&
%*e/U0JA5<gVb"u3@J70;Bdb(PR2pD3[h?QSErp&SS2;WSldC2HH?Ef%WQQ#jn@YD^(./7mLAi0'o<+NJ)`:9L$=G2)/CB6S$uVE=
%VE`;N%Y&nuYQBsM5*-R0r&4nb>bZfq^kSF>o'--q^m?0BFrN`X+F[hiXYgJ;<RR%8@BWO^#<NTVC1JbL!<.tP%1KTiK2-h\eZ^[m
%?l\D[m;`*XkAO-2F@&lIppdfrkYZo+4`"_V=g%tX\TSM!9K5<f?q!e!L]ndMLdb=fO/BSm9<j.OMi+c9SUpp,JL[niAr&A+[T6;!
%87iUX%h`l3kjZ&o$KeS"KIQ+&C;a,:4Al1^KSK"N(?]BhZfm;Z6=9kQotg\5Nei-R`J\7G=P@.IL!Tq,0*A5i!WY>7R6).;A'B26
%80:u?90GTQ+1hCCM#u)*WdtDKKPC;Q:6V^3&<QtMYs\A<-!3"*P%0Z],6+^#kHom"/^Yf\MN;*Gkn:gFBVBIV@4o_kO"aAH!85@A
%ROTV>F7?Q:$daY]IsnIB=flWkW!#DeW_oJRX$5cr41WuaJ@IF9DTAdh('l-"bl=?QTm[U\UC&kLfu)`+_N.pP0lo'SkM]'SMUQ,B
%#&Lb90\icc%/p"Oh65-<`6fk^"odPh8)t;A6?^3[s73eQ/A3H:65XdG!(lCKN*?4s`+J,bO:jM?`lgDJYVul9;,/nq[a;<jQZ56#
%q(tc4Q#V%N@=I06O2!hP88P6n<fh"bR':,YG+?UCb!_H?A5GP1?D6[*`3i&j5+kM"[Fma59/nEO;Mc`r7N!H"Psg>TO.+;cTNeCO
%ELSFt0hm,cm^Hh#l@FNe"3:W"`S\*__#Rjb3>.!qau"TX'!e8+$mBV92aWD6N0f5T6#+0og7LpN+8,c?j^5IB9>Yi]G\-<V!:5s<
%LD>D.55"^:ZNO\mY"hSt7B'u)DFYCSP'C0s&)_\256_PsG8!$jfNp"]K^ab'*pTH;/PpgEFMM=W$6,ZJm6bQs/:RPkUp?UN(HogT
%'P6]Z=FYMilViKGZlF=Djen"d@;gagR'\:1Qb#Se8qnRVJ61*BW[abg5Y+aj(mDHO_!fd)=q:8k8Vg><ME"<spl:h)WJ`1L>$8\C
%r<jT8<*K4LkH@Ysmd&XB,WBXk(76VS'M'70`Tmhq@6+36P=.;V(mE_bB`I-76'$,AfGs6>9p.bjc%@'SX@qT"H\'Vh_pbW;#'\ZO
%dCVc-b"25%*WGn78WY"R,"G\<LQ@%>Z!-Y18`fq)gRB&2ad^<H=;Xu#A2B%c$A0cD=eO8"q-<Yj>nX4@R9\KZ)I/@D:"2g/#]*>+
%QXEP2%-W-'n^f/2"[[?,#Y<39Q^Zp!\o`HFh/a/.$=fqs@tO2G<Q*qWMGXbG]@Y6`k!"XTKDAi'5(3L1],4pb)`lC*nYf?R:D7D1
%P(;t'2m;Vh*e/O6TT@N/!=<4*0&plbdh%bRWsmK6"[ok$[@Do-09&V&Hk?L<6b,=(EJdSFMR(_;&$`3CEru%MR3/de+j!K\9)",P
%CMP\"cV<LgT>*Nj0%:]d_1\6f8[:3)A4b_r!BV/*\R94i<u&Yl(.G31bUPn!4D3]DUADUcCjXEh;T%tb_GG?5_-c1KV'6H""]\FP
%"aq83/N@]5Fnt?eA\^UmasC#(oK=\$KnTD.JJ#CoP/=C-W#@0F?u48^ld3*`&J9u@$G,`bJdN<;<\MS/P"!)7[@B+2:o$hq&9bs#
%hC*$_mFTB2IsnIb9jGlV+i5"/6G-7Ef0aFLYRs-2-+5nVDFS`mKc%YU0.m!u\&W)'ItrQka=1ImWKPGW7_7^c5h+Mmn2OHa_^Ic&
%]@N!6pp8.NT.A"00OtSUk])<cJj?m)9X&`V\`00Kd)R8IcE(<,Yt,@e4P<D`idX[Cb:YQnbro0';F!TQiFt5u%q;oN=GOj-b`#Ej
%BleN2rp94-k6b%XgchEEF1F&omo_VC.FY$X_UZlS#t^L5SB;#S,TS=ig?7rS!1(=,3R/^SPVj]46=$0uQ[F*0_GiIpPR"hN,"VBR
%GJ?=9)Ic/%%[@*!/0<;-NNhS[&Qm[3JdX@/3TQB3Drfi=*2gm-RX]OR2qL%/8]_OtF!M#G<)Q"J)i]O"*%CtEpoq"$m-iQh#YJRf
%++d5fq;E0Rd<T@H"d_)mh&HsnVU-MY6_>%dUnqG\gM[AAd06&5FsP^A5RA_W)f>@=CZo0qC"-YSY_j-I?/&$@pE"g4SlB+53C>U`
%c`UnW7,:.M$"u$:<BDS&p(ZD\;4rah(:4fG9sd$)>fAdIQ$@+l[-WAM2+$NM75BD#+6P<KZcCso.KB5Dq7X6)VQO:XYQ+1nq+q%"
%rp,(0^]4-`s0)HGgOG4_roa<=s7QE.T3r,%q!oV's*[":^CmW#d[JPE>bGg-0E:M@A7^u>T3uLRnnlD"hf9!EA;T:)8h*gqSEs9M
%7QMO.C]FB0@N+Z6Ue)]7bB3)41YfPAK1(DS:C!lM2PLBERTu"lH%'Q<G()<,;QhE4i2[A6C8np87=S<%,C0+`AqtAe!a@YN5`/o"
%kC&f\bn@,0B-69Tio.$USdmQ5PJEf4]GcuSjSh0Z@2h4ic_):CIYRT2pA#E+/f^MNl0n/qpPXHe$K#,Gl.>t#6#EsZT2Y0^,D]4\
%PX.]R/cc-kDSp11c5>4kjTZ3aI/Xh`<$b$4[!<Kq?i.3+E"S4-m:g^+*Yo"8lW`&@YJ#;[r:kZsh<_%*q#AY\lF*fjs8K4js'D'3
%s!&I"!s:"m"Rq-q:OiC^cT,mdo+Li)JfKi>cR\\i)BgiZY??Bn=$@#.32V66dCIsC&?_cV^hMlMo[5nh&5Q](j(T26V8e45F9$9K
%!N>1r*?Zc[YU%47$P7eb:u[h;kVJ&%Ggkq]3iHn"eUQIApE#DI`[NE1^;O$,T+]ob>@NDFD)MML2#oZ3VNBmhK]1h&#5A@[,6/@@
%4H)Koi3<BC9b78;Fs<r&pLa.#OJmbXRbhKI([.dMLOEdL(nacl`:Cqki0OmlMLTssP^mbi)'C]tS/hUoNW/8(<;Q$Wr742\YFPXl
%75H_-'B[V0o>@_""(P4kmTDA#])MQ6BRit.7lj\qCb1n<Y>oW^cT-(!pSp5WI?r.*L"EVuco/rPM<nfkQVbBPZYfc.k`1$3lXkaX
%,`lhK2o%U^U@6h%#.CLoMq>Q!O=oXBpUVLJ<'p*#\iG`<0f\NHh&O['lfREKCY^!/IFc[5@aDVG#2ut-0Oju`O]j]I#nlRddqnlq
%k.:@!&"rrRZ\Qa,:&-b8r>`WW_L?`99eaGg\8O?_b$plpg%GZNLWof'jl,,S-=r-Imj]c5U?iLrX#]Ib#!&<3Z.:AA:`a-CJBc23
%7ZaUF5h#\giW&\]LaY7^n,LbXbl?$YAt`7&pYuEJ>DVR(MA7\@j8e?\>X/q4CX,l0#\>`HEa*\l[Ed<V\eH3S(:h#T)'8@N+Lfk7
%#h:>4a6kHA0!$?W91IIZU&0U;B-Olp)!n.as+d5AONMP(s"i9O5PgXok'ut54$Md[I+82es8C!kE8GC+T>^cfPB/MK5PY+?3WYC*
%gcU`kCcW\X:4toa$ktND%:@E"0),[aMEXK6+`C.R2iGSF5SDV&aOlF74fH[tiaB'T3^P-^Y&G+[H[Yi,"9Y!"*3_^_![XCcfTKH0
%Yrm1:0"%@S#*N=kQaihBkmUQ'f?0@'k9eJhTTLj@NG^!<7=8ZbmiMX'aL7I3jS=,U:e?<kgV5nY@7O>.C$UOVJf42n=S^"8TtK0Q
%s7",es)h?.jIXqr%IVg`&k`6)3fjnr.L'G@s.Ju?8ND/8R3!=8q.YVi&22BQ[Z]hZ<4*VXNs(KfX.I<qI4qe\8s+8QMFN@aqY&N*
%]SkX3s3mnR+d9Ol:g%nG9+61%.A9R"#8kJ!>(i4sX$04\\a>dHRDh@+Q77)+E0:>9dCnPeK9tN_o':F7s7)PiDh%`']BD+l+oT`,
%duti'VTte#J%tC>fq-@$Q@KaCc+B7Urh9"/01[HpY4;,ZW/.bscDsCPCmpMiK/YLEd+bAS:%d@.dPDLNPHI<59G3nYd5e=qOl$H7
%Db6We5:-DX'.O2C0Y,]"EURFQiN_9Y297>&AlDm<'6GA>fJ+h_Cn"mNTK^^koD.dl1eI#@^OTFqc5!8Z64)n\JB(c&,C;TPjl*:%
%4(1pd`l+8#HUtVCdRkLc3Tk*ehlo7:GkCed.Z(J'-#lFg;TLqY@/)tnL5'?qZ)pfrR*b2)]m62M(3-%fXZ%=%2Q@9eBHBBeHpL#"
%CCZ3//=PqV4St6rBJDX(hMIg2p?7lrT<8,MG<=.Zc7VsSbXL+hF/J$a"R<1g`71+E87W0!>,ul*5ta7u*%K)[3<m!C>cG0JTu*(Q
%ZIGcaTe;G\l`>I".%9.tiG>qWh)=/=#U<P=LU0eqc]=,GCFj28;0<9L\65I5r9$9Qcg+\!Of6X=!sm+Z1^ZXsDO511G0-UQ+p#\5
%Ff_A,@FY&qpH@EKD3/!;_?@T#U*.?^Hk"tAcTo->9Bg.*]UgClG^Vjss8;D)YkQKmq!cQNpLOWu8SS_qau)NOj?=NP1OV"/J(_;n
%L?dNPK;UaU#0MSL[QUUa&=V[Nd2'4mQV'U<pS)^a7FJQ&HpLeQN:Grg;FmZChJJ<CTI?G]O2h:MSQe>U`g-W8;\@sb?%@U:=80!B
%NQ4looaaFbRXT3'00apm:nj_'J1Q3FgCNF7@B=T>Clu>Wk<Cfe)4r5Im4`$jCStGY>uAUcZiLKeq=A$Z\!q$VjJS^*SjNn9R/>QS
%(T#!Drbhc7"[C6h-qZ<&/YQP'<C2u0Z+gJ_Emq)g4pMUF[%e.e\QRC2BKr@*&$,"ZKmp?Mm<n4!:G63S!2,s*6#Hn8kMMU>%Z2I1
%TXPpM&Gc(n6qV[d`:jB>WC,*Rr[\6"`35F&C#mZ0VXMo^HYEIONQcbg_(Kc)+-5`P-2;=?JOd:X8j'fDV,K8L\+Oi$I]fSE@sG.(
%d[a'-qdVd??mV-]l\WjTq7WA-lf7a47)J`"e^OMam1rS^g*dLal9?<ohDJ*Q@m,sFs8$RqiDZQMqg/,2K$QRVs)lTcFKs\<n/nga
%4E'P-`"j&iCHEB8l(13.#"g1mg.'$80J6DB_mkX,#c#[W\5KH$p:kFYYKlH(,8nI%rQ!rslopK5WF:V/$(;*>s4o:7*JG>ZgW=rk
%7c<HIj/$ZR\cn2l81&eYZ*D:``^!f<J9/"lhZ4(),>;tSbP#c=o;e"LGglJu9A.,:0qITSHS,9L>@>Q(c-Z4>rV$&9\r_G=;Jb_<
%n%XA)hbP_&dJRYSl[+(os(<-Ef2+p^LXra4!*l!dp!jJ"6g1#ZiU$o7OJK1[nQn:?mL1a1Pen7UBqUa)_K]EoS+L3g6SgF!\2_t!
%1>(*"3bNT;0K'\q6R_WAbJ_?25FPTgJ.>7I!)c@;(i7>a,U!PB,9J``f@REioKq3>bE'""h]B8S4W0h5UXhb^Gtn^hH_/6VW["q@
%fE_&%)$,8XJmtI,/"5<J#Vef,bfrJ1kYI788IAMShe9@0nZ@dg`#9L-QikB[6Y52bRd/X9XL_7.gYo;P+9*79@2oh&>i&2j3L8R?
%A"3IHC]N&X;qu<)L5D8*#MnY[qoBc9#2]'RHm.,2'eom=oG-3S@AakGa(H8:5&eV`c\<'2gDJ67IAL^D=odu=`Vr2`Pa;jSY5R/d
%HVr-3[[+R`14k_Of5(57.EV,B:FkkrU'(QcQTHl$Z<P$^STZK,AnfBtOVi+DRf[2`Jun8pl=PiM3-h%?O/Z-lG?6_M)Vp05I6.o8
%CC`bTWpp$YHaNC6I;cb5Q.84miM/-a9CRq7iF16JJ4-F8pali<]]2/W*ldeO%f<l]cS5B_rHOUZQb2^K=f'u-Cf`6a7Sp\Z=AR6I
%%;EqsVt4>8i^hEcEojf<0c4&fB@=\JZ+bRcd&M#A@GJ]Uo&5j"LlfW;2NW`"ouFt#\";jNfq6"8h"TU]O!%E)O8QU->Xu>qj7Lqf
%N8H]6c,HU$j%S:h92bb$HY*dse0B8uY7@sYbD^;MVbfi7>iGXga+,PXQf<:?q'NgJNq+%TVLSE)QL.\dmD&DmF$pf&!o:`PH&PR`
%54(=IG]'7_?I;1Y(GjDl?F.A)qERSgDF\>nJdq)-^@r,m*&PUQqPsLL6]%oDgs_W2_?7,Ro@k)g)[Yf#^ZBlUDsJumf@pR=IjdH$
%p=EP4`o<WW0m5dJ-gFi7pA9$C%f<:ul3!p@+*H4Ce+uH/^NBR&LD#C6j)?/tSoWKNE.OV;Qi>%a3fG_Ila1Sc/!V4[3ZKaVal@4[
%IgbU.+r**8/Kf7:7sk#8(G<0W50`,+Tnl2Q.W9eE>XW(=Db9pD*[bF+_hCG/*;Y0\>7#]LX8VfJ8hO1]PP2I\j6:J&p;c&_>bp?+
%g>>4Kj%A9u4oX#d,AVe'a5=a<9*+bU[n+XnfCSOA:?1SWSbDGhU#J;gm4cqE3elhi[h?=ErZt)ma7da<DP<kM5N_LE&;ut2rchWI
%&%2,K=%^POXOo5nD36OPHF[FG'kqrRG71L2CZ3:SgH'2L[rpEBgU]p.?f0_k0mQQ5lbdc?\KW\S*Z]^51]%7,?N0mo""qFC[C8;M
%h'1.+kKpr1#`U.oEtj#VoB3(^>5:-pN`-nhCp!^)F2;2RGTYZoVRE[1H5u216s9@I[ZPB/Y3.n("];ZaIm;5@5AREnH(E\3`pa]a
%=s/m6hf51@YRf:$53Fh_Z_nX2S_Pp%[`eQ>PPZE-l?^n1aaMni'Dt&(0?fEC3r=:O%Gs_<GPgk-rZ"A?&FGB^N9&-se,CE/oN^5O
%_&i!bhP/6ST?QK2!7S7[6iYj=C?G9Is-BVfMe.1E"+U?T^E3X4^cDB=qs23c[/X>I(ESM;;;dCi/t@)S#`$9R_aWkfU4_rNY1IU$
%,-pdN!9j4J!ob[/B_F-k%r1(.K120EO_;![:Bu$,N]r+n/Nb%;If-k4dHp>^nF'F,Fp?XsO)[5In.-em3IG3T\#@n<*B,S^?2'T+
%NuoGgrA8j<?fQ7@-$FGIEu`F[r(Pq.F.@&G$VuP=+$ZrP2#I/0r;4ssD($@n4&n*$]o7Rp&ho=ChY3jr=k7A>/#%O\Wg20u-SO_O
%mm[j<b>1Nm0i8dc9DCa`rFiDnqu?;,19`-UffmQ;X_O#7!9*jVam7"H$MT:S![eqkg;ap;,EpQuC#:??d@.<LWB@kRK,LVSd9ZY@
%7gne%(d$m[:Ni%K+6el(#6>T&D<=A71OL0o:iBY.88/LhRNnHu4a9i@r\O[U6ht_b;HD_d!0<6?3^4E5NP!MIK=%&5'&(Kni[uS?
%<>_o;,<X4!N&!B6#HG3bm!j_;mJTV8*&%jIAB:Qsp3mj^5+e.YrYg_YpHMlq9`?EF+90UT`=Jef#X9Fe#\[tQ'V`K0MdWJKUb4r3
%R7"eY\=07_mebB?@5'[/SU8Yjo+9&M6D_Jf="6L'AOWoX:g[qcSgh>e?&Y_H_0c8g;sCtfJ:j@9W)RN07G$Q,-ag[<$/.N5ANt#U
%m%fg?<sK;4Xi!aa&3EjI*o^bZil7gH[gm(PX!eEd6PWM#Cg_kc]ugi@$r!t@#bWC$I"Hd*hDo"C>u4g#dj"N-34Je2pptR:E/+Eo
%lC-kt`\ioJ?moL0Wkn!DVTWiXXC&u\ZZ_aZEMuu?%1,9Fp^.,-^b3XrQ6^+a^F)mFWkb8f`C/TkBV!HnaY1Y)/%>a=B0eNc)rRj6
%UlC0T@m"/3Dj+up!R-sB;`X\BWr)@D`Z(X3:^<4^\Dgo_=htd9`Nt-dYH.*'gLrHj5_)R6+7BRfIQW[T+#WNR(1>RfB`\<]l5mkI
%c7\K3d$Z1[/(hP<VFt2\9hkIm`7mW,P'$ta*W/sNMk82QRrUcS5%%F`DLATJCo.P5Tu:rdWsKG0fN?hE&<Jg$8&RZ=bWr2Xr*tbi
%fXf.Lf?Q%sn#:8u1jsjFIl)aoGtgIdDs%N"*M0eA>RAAJfts=>SQpR_"ALT#X?`]i_s#dP>-IcU&@o;s&MmKA$m)m<NW#:)UtM?0
%im2Y\'l6jejGpW8BH)5=]ujH5!;DnL<%giB&oLeDK(AbLbBQ`BV-`Dj+j%\jrn%r.M,b\mY.Pcu&:,`9B"Q@oB90&PgS)!>l!PMN
%'9n[$`:@gOPJ)n%%3d!AmrfE8;4'f,@Mg:qi;I`smau3J\RSEa4h4G:6n5%FRjdpM=Xo\aU#dJ1.j1E:cQ>i;`U&_=&7N[ka*WQJ
%;8$;!F<#dKM9nhbWg.op<b%q+WmLXL6</)_XnagZTSr$gr\IuU[l7US'GCjHB2&^%f.;TZPI]>;.1<hX>#^<k-T=FaOpTFZK`H+L
%.gZp#<t3,&/eO-4o`aAP3p<sg.okD*HbL:KN(!n\H\FiV,5>Tmm/X-sh>GcLmf7!MFlDH=A3b$^):j(L8<rJ[$G#W]MZh'Qp=T8t
%Bfn>ne%U$&2/==.m'TV*?Mj<@h.IBc?;0*:l*d0\Gb#;iLcsqB0siu]8E92e#9?TMmP!gcVNWS23kt*(j;h1XFZpl<juH*m_plOe
%FYt29??RC;R_$qYgZSAeae+4c=:m26iE/:)8)]/&?bXRc.US3nQZ.4q2.#W&pZL3G?EV`Ts6i1pi@\^dXu<l^n/ss*Rt%%*X6g6@
%\U8lkdID82(%W(_Sa(#B5/Ft"Z>/,Kf9)\^nACJ3%33tc5U?*;X30(VKe'kFF@i(ABtQRU0G`+m9b`3sh"^<4]'5+S@\9HWh*_NC
%Td[\h[-].k4adc69'XW%FdK>hADprc8taSJNB)0q2-muLX<QE?KZ&0GPXSn&WL',c<!_qY^ng>>Z(]7?MQ^qp8Ypb0VQ5!FY9d4S
%A6N&\p+5kPW@*O6TmYEZc"LGL-gP'Fe7-TP-F;1$A4)W6FTPMcp;R(Ke9mSR*ZtVS6*,6fC%$Za:1g1[hKm='li9^SD)T;*A+2r=
%03$:=3s:U$3`W6%C&`!XD/Q*FO8IaC:UiV^;;u:*4E!Rg*4lS0Bu+W5/*u\ur25D-CVLZDnjYaq0a?;'$Q,%:'Koh`+pJ]ia3\uY
%+h^&@c^b]$pj=b8;Q8j30u[K##AoS(pmD6&(=-Z%=F(5G'M"+Z(0eJNPVutlg=ZQYP!?l>Bb>2'QZS3A]n_O_@M@k2((eT)d#lk-
%\(;)E"][)o/$,u[$7Dj>,F:"ON!6/&/SD.il('$n_E'6OEB-0-cZng^oU(Ao?Ypi_NmIqYj7LOLN78TIPEY>2fTVb'R@a:qM_68/
%1Q>c)<_(QW[i\]o5;7"-Yig4\*`U8&4q3*,SAeFqVZR$D]<5pn'jlp&X_J79;G9G5XX&%bEs1DW,E1a3@VtC^,/Mucb1l`D18]MD
%IY#=OOE?QXk<e-"&TgqnQ<+cb*f?3V2%+AALr-khA]Vhi9d^O:$eLMOKqMp"ip'F[bPB@c3%2tXA:&dC45l1ma("!"93KkZjY.?2
%<R8+?(fRHdg4!G2a+5^U0pOt=(WN&kMArT9Go$S(?X!T[J`4-,rF6u,DJH!"B*Qmbo<,EX9aTn"/L^h3G;/MpmgF(#Ff4bX420"@
%[!#;)lT?Ti><(F+6iF8KX1RcP`qd>rYLdsd0o/694rQOkBqHVPK?)>&-dM6&Nl1,VABuuRI,'/,*>@Bo)37A\S>+'rHHo_j`SV0g
%A)9Bs\S(\^SbZS%jema([3L/SS-^f'+h/Ss6Ru%AUo0-FjX\"[H8DY'H<0k%pDdDSb=V:(d9[lZFrFG`-gt6Z[e+UiN]lb!lAj-W
%nc+(0'`U;5XoD+?o)%`ZE-*a09)sC6b5H[=V>E"U(uL$'9iuI$D?16S*Rft'$F@Y)::uXt5H%f$qOB0A@AJFfoR^UG]Ph\:hs=j+
%i$j@)-AS4TP);oSPcpJi<tNNX"_.X'79(aoqo&uYZne7?/qkJ[PUCP=j*`^40!ZJfBu#O+L+X7'-$'[_%Wt@G^3+@R<tBDm`-jZ3
%;F(.84rP,dVn>j%iL(GFW6FmN$e:!AF7-BQ)BJtd9OcB\Pd-0@LB[da&L_W63B#@sCQ>,S,_jLV!g2*H,C/^("+k0eLr:(<RZng(
%QO%1UluJF"fHtAQ&^M;e*DoZ9<.Hh7-u\=m&`BAsJh9MM.>#?f+(Z,pUtg5n65RUZ,:3d<Di#3fq@+b(EC!Q7$.Y!F9(N2U,e@=7
%/aa'J%f4[48mO\NL5E^]Qr4e??HD^A&K(0N:gW<-j/a&>cm$7A>6D[5H3F_+2>'qT08#fT:FgkpWmRDGD8(*8-lC@oo?;FIqpf]H
%_Cf2Y)0cqd^2%qcBI_9F_LJ)s-kb*(iCHJ1ndj*q?EUpCnS`V[-;G9rI,+<B8]Lt(CZ)FrA=_/d%LtnnTMt5!9PS838qKB?15Op%
%p>KE/BaC#`Y,r:c<%lj),$')<!jYbh[4,/39%hlG-KGB1K+.+]?T^cIofh-iXp!Wg:'&Na>Y#2Ea2eVF.U[H>ZT.M"en\P)*57+`
%/I4X(:j='>OE8J+6N<^hne3a3(,>E7"%Tc*h*I,oAo/X^pYa7nho<-,E7hK;9/in<nd/"6gjPh#P,^2:&MnVNHB<cO%bgGfLu)E%
%a5JLoh`07OBUuZ*`?.m+IH2D[k;Doa<(W*J\sO!*DA%14<f/lOE+cPlYLdlHE^GTcbVOB\4;-'+3@:XW7j+?9;Lq#";f8XaRlu*I
%eA9U#dp19b\;ck+?4t)PZT!-2+)uA;[30e5$]RBj>e!g_X\-u7N9EU0?UQtK;W8g(.P_kO?Dk1]psN9Pj$j,kY8LSFfN=W&m^S@Q
%!5:r"P3Cr">1-nL'^D"RH3c)>!d1p*l,B;*7)5Y.`p@%f=KTiUDWss4q1uo;NiQd6k;l[\cSOu.V>?;%<mJ`OAp@VN_7]#&Rc+lt
%,r<lYnmmG3eHMHi]!Eu"m="=LG!:L-9P9T-GDO]+9[Fs'pn-tJ9q/:\5*]!Tg:tW^l+W=Mi463hjnDn33gfs.l!*2*`n7gtC8FLV
%Y\n3+a8.GrO\%V$o:JJX4fX(R=_JA>9Ug,=USnu`Ei3$!k^tkN!1X%-NgSk[]MmJBSPbVmdrZnUNH2V',8WqkhFhmg$LdMQ=:PWW
%MS-+Z?kHU1GPuL"OBQ@/l*oRD9=NtbI*TmT;p#9FDjT[6i!ntl:bI.Oh/2'l",oi0io>78ad,gk:P7<AoXj_R`!!*5iTV`jM3ei=
%qi)/4=OY:Mog'73hl^^Q<FPq4:/>m7.Ro\%g(LpY-X[PMaD6:/b(),j:.fn:/OI[EV+(BP#*$K!cD&:JBeB;,;e&TU;N<2Aq3m*J
%ed+.58NRor:AX@Lh4Q3t"SR'h"E/0H]P'a8+`fnPH1HuBKd"*Xl%mi0oKh@I$?*9g\9@[-$481ufHXPMn0P:1lj-pX'j%El,"]dG
%gRqX'r"?9Z+@k@C_J;pK7;LElGrDmM0geiG>90GUpK9?I^?E8D!L[,V($6i8DX%C>_(.E@D7:5k6ueu;DdF"f/4dbC]oQf[,k(%b
%fc*-J_Z8^h$N0F9#kH/cToZ%#$'176,H1F.3Mb.-S6sqWdic'S")k\3b]nQ7"7CkF9_Yen=k]QVSnDRSD$O\54MC3Z\F7_p_$_<r
%gPN$/P`BsdTZrhc)NSte+Ak"k>HZ;$7[HtlTWlu*-WCF3.L`t<$L6o"77HHh:pQgYW3(iQie/L$j.5l#:(79:c:0qa:F0qS>VOCF
%Z"(uO9.'J@gTdK_]$aoG$V"E39.-;0)AQVCH%s2HKAtgLVM?,c17fZ__nI-b26/:EG"()>.eM`b\#R?g'Q,;mI'r>OTAsnecGuS@
%Nja^EY'RV=rY"eNQR6FB<rL\mBE.bBcaCQPJ^6CG&=PU+j3'O7co*8f^7&_%b""Ya0q,f,6AnL_1!Q?VdBP$)=/f[14nl*hWTf!m
%?HZ65\O_]p$1j>#HQNu4\_*1bj9:\A'($)o.35lhD'MJm>WpiFfPVC=_]?-JH]sDuch\BdO6Nql='ofhomK?]mV!'iWJeK67jjed
%p8o+?kpe6N*8JsPSK_uR98iakT8EsUTXW_MHXpRH5O+3K^P*DETWh^T+B[X!P@r")*#^htWE3UtB:=DU%"n%/W/PQu#Yd%Cj/@>/
%=,q@pM8UA=n.W,g:2:#XMT8RAq`>^<p]++F8.L9iB1J%Th?=_R'9TRBU=`p4'$<t-d`'6J0+US&[#Bm)@Z.s^_Ggf50j]2d:9RdS
%j((;m\\f@b"HO;*o%]gUT+@s>br]BeO$@kW&V%e>?WhDE7<]UlbU@om.32Ib^N9EQWs1S@WOdBoX/A!R<$lh]deY?V2'ncL3:#t8
%Z:GQemumTh%12OF8_jL'rAc5g3VX:]K%15gYP64o7;d,=[X.ocXDu/nT5=X<0Ka:!%R@pQ[<HQZc/bifD[!/J,TaeR&7@8l5RGVS
%!qaE6F%LNi1HL_L'(2>RA54kX/pic@ata*<.(VuYiYF8\@7#`N42A)34:tJ3;.sID]P%_OED/c.)$rCBc"tL;5RT1:cuQY_HiWsM
%e8Ns=]VGrlYue7:W.6fh"Ne6\&RO^/?0e2j(sZH-a]GQn?K<%:CY;jDWjJ[oif:mXqC<+(3SPtunHl.1Mm+Vf\QbZ1=`[I[hX_U.
%X%71QGAV1u"!Yj<IaCUIQ:kjSG"g_LP[bSj4$7Pi1Nr?5!N!Ya@eJ/9fPYg4q5$ET>94!hCD+Q$DMVQG$);\'qp]8b4&%=k/fkur
%k.j9b;s&71Q3@4K&p3u_`"Mk/6K,kZV,o(I<7HFG.+GqUUSr^#($ccJ9?p>-?B?_0e5qtI%q$<h!hSZ+9WtO5[^.]RZjWdV\1D&g
%j+AgIr@?m)N!7!%R:D"BH-HVmGWG2\je@n0\S"nOJcV,[)7Vc]KaX)UORkbCFN[Q9A)E!M(g6jkT`9A.^bE0Q<u=$L+SL;Q:("dn
%XqrLKlU)BR@Z20gh^gjLR_tQ+bpfWBYX2ijrc?iIYOR!/#\[rL,qW"%fLr4;)X+d_Ig3UR_opT(F;j$hnR2[5!3[P^<X_+C/1FK@
%0$#J[gj:j\`KQi&r0RKpM>-!>47[_,^_DiefPn\OT++f^0"7#h.jPKF--oZ>`<9F#e"atpAl[4nG<(-+,+(1!9>Y!l%s5F8;e`7W
%:E&&lYT>[_/TTXf4-E0?1GQj+ClPqJEn9O$e1#!6I\$'LGI^<uqdV?'!1!:<4tDE?8Y2d!)T0O8d(t.],M3U&Gl1^UABQ3'ND\QB
%o@=d@JY=qq30<o6/RLgWr!Au)L6m;HWONoCP2DrU^YRhAX?.K3k_O#8e,;6RkErV"\m'nQC-u6Q<)?%k]r<r%bQt6l/"61m*5U+r
%J/iW\JIkp\7B1P-Wh:Aimq8-tJcaj$K#+GR#&F6.JR>+GiPT:+$BQte=ZVrp>dLa)1Hrbl#jVDeO#qoLPHUCpfgtD`)AKR)3=8hR
%]NE42MqYeCe+G_m)f*=-_r+C0;#()%50reJkViKQm0D*-?lpkaF*Wk5Kr!$'W%$bF^E_[jM8b'e;T-nB>,^gud%_JtICnq\?%-`1
%!d8'O:LPf`T*-An(uY]]qM362kKDh32/89)mAMIc$/e<-dl^rBUN.(Id`;B'Us=FC:\t0@g)fAI]>sS,)Pj!o7m&qtS<$JCFS,*O
%O#MA)jk&63eD-l0aeA"B\$$sZ]?9MSKW;nsIZ?Y&@jC'L58M,q>r:a@X:.\d)V9Ja!@fTYeMcb#e#2.MkL;i.^8<F\S;.C=$a"ME
%=r:>g>O:U69S,p)ZkfAq$>G:cXIGo2H_4@b(Z`(tK2[t\\l_Dsp("[rr`ZnWO;*+5/9:.\8>i8!7Vqu$,Nncln&Wa`3$Y5D5<#!J
%7+eR[7(@Fd4KHV+J$q##Yc4M@&iFg3a/)LWi_J+/BNQ5;84p>R3?g&PXVP'AXQk:Pb6McQPRQ9_M3*>S\k2q4fb^PFlY$lVc+ni[
%]bu1nd*luJlM0E`UJs=F#5SikO,g-YWPZ!"=`p7&8tPE;Na0TTBKo9\GY]Y<H&bZ5&i^<1%pB]8O"d^KGt%LS;[?5Ai>_h3mR5DY
%HuJeV6Zfgka+25eOm"r7"Ir2)47Y>7;BVf"`#U#a,g^J.)'/BiA;hK9OR2[ci)lkj_ku0OU=-LWK!m<95hkKaCoS^!Bl6'2LPLV.
%X._Og?Z&333HF<AoY$3e7/K*Qno?,6C4A78l@E3Qdn;j9]3X.^`O>AbNl'a'+!^J=e]6$#m^Ko_)(#hph&f@95C)qBa*kW#@j\jk
%$HKN!mM3bFHYsspNB=S[D_%9f.3bb(fl2sI+VXPa8.3;dS`@HFe\aZ,^0D]%9\6LG?Y`P`[[ef/q@05/_6RD.\c`YdWQcPpST/*!
%`_clbJ%jmJ`TS5_H)U+$\)-/jHL+qKi,Tl%],\#kl@QI_5l!+\Y:[#taQSd]r/`g?KhHD+-hKj>16&rYT*V;3YtBUQA#"MY"EZ,p
%#jgpA!KW?-Vuf9pPgXgeRjTVXP=^j/7PIHh=nWo!gnbpUj1&#ij>e,a^2\g&I#\Plk&?4h>Qnab0&tD`h)^-I3m*/#S??;oR4lcq
%7"u0Vi>"hV2kfH<@SUm/jEG-gc&+9RnkiZ)I0?iPcPTShJl7bO2^E-t_`U;FY>F;Ps1?-%Z'fb9gf>>^'n=u-8E+6CSQe;$#?68=
%:bb4O"`PRkf\At?"?='o?muu%$!h1Qj-a&ukTIgg#K,++h7#sd9gF\QhVn21n1,Y`Q1.nXrZ5GnE8*;dJ5_5L`.?Y9IYkuH;kcZ<
%'d]Fo:-jI@lt\WFKV4H.!d]%aEgc)8;I1#n-hG%q@>0-s[(VK__iDWna#@1%\Vubm"<`$%J8)[T:/?'o#rQ7@Z0()]&lX2e!kd]d
%@MaJ_%.'&!:7bt=,k[Vp&(*$p8hHhJL$5[ao%+>$M(s:E$8`rO*mB"Vo3j0Vc;Vm4@'R>h#NuBDr=]Yn2]Cn\3/kr-).aet&/1%$
%Xpp*;H=-Q(',KDbo#AuA?NLWiEltRDH1>)g+uq`8l[gkiln,C@\/=Nm<3kYFnlsR%Z""%h_#)igT(/g24g:=k=W"Qg^;!!'rJ'mL
%cR4@M0"Gcpj!&0q*W%]-.aRAQSi09r%b3W-q1V@9KKY@+Lh-)D6^638Xha?>V.'*,5E2l!gL6/>j&Y>YN?(0,/P(':4M?+7*\[5g
%F,bdsJoajML@!SZNkp/;Rc@%[A',AdeRs5G@`S4kG.V6>]XC;TS%b,I!aqZO7,mJAS1q,AIV.X$+W=IRBBi6V-1f>C-99?],1nfP
%hZdB<pTf'n=-&6ch&mN/Z1Q)c0dZ6\>OonXa9LGr9B^Jg(Nad`*%kmX:&hh7>6SaVD>N`&BoZ5@fQm8I4+fF-S7_85i#d65T].kB
%fB'pAWfgXSj@K'>Td''[a;.-A0M5;CbA@H()k1.aZ.o[l.i=c!e-geC"F8j6(Y;eh,41AVOu61cd,Iq+.A7+F$1`GcjJ'R^r^VQE
%6eG]"6`T6@M(To3(hLe7M'=)=Bm_!ef6L?[)K@SqLs7*'=FF#a^F7#A[kX*Dc/Lk5nRa=E@VY*D"r7:-6hhNTX>aEhO3sL4X^!)7
%`HDBee].;.r8$;r9r?9t08rT4/p*ZpnlkMqJV(p-,pc9,G3os>iDQZKoi05l8VO#[-&=uqTpgbbq\fV\>RKO+cD'<M'Du@V?-e*I
%JV)]?rsgR3.EL<d,@1-AmFg,1loV5B@X+hK0;)C@*lYPI,-UaE]RF/N2-?-*(VB"^d:aATCIIq,XDZ3EY<&p)*t6.=P)/;M<n,>r
%kkU_RbQIJo?^$5pZ_C"HZ`Cqn0##[R1D+o%el8]YVelT;a`F+7q/dJ2Vb]L;.P73dfk6GH%h<Is/+VrnZ[.ZKHe,_s5tgt-'TO>`
%Fq>1%G[oHCN\BqVR/GY6CDZRIm]ZTWQjp7D;,]tA.\PQ4l]``!KY^_"<jS+0)-S9-Kf+,X0MEkYSE1"urq+4aiJg"dk4n%E?q6F,
%@XL>2T0s["#hMs&QR@l'!QUo(iIq$q]hn\%npaBGk3G4M(dJ]3(W)E3Sp$-(1I)%51U2Gk.+)ACYIUnT;O(B6(ph;,]8H#Y!;c9k
%).8Q1.*,c5?U'!r3'^a>G+7-<`AIS^!.lpS,s*oQO8M<oFl3Re#_A*&;Z[!RKtMs5S1<,u(PXhVn@Qi`!;,=r76;eJ"l+\c!o:&0
%gKcL"nc%Uc)21V7)!\Mel(XVPlc_mf%@B"_*'kZiM*V<]]R/!/HKZtP6-sM\S>r(1-dHi"^J:*poqlaXlb#J=>MVWK8.]$VlGtl_
%#VFWBITrI"LYj9k=*,:R(n01`]\?KJbt6qZ)S"D;'P6`j,B+4&WY6DX3YcAd_gOb]G]TE3L@P73#\RQJTb957EMfXD75''T"QSpX
%($Y];Um_tUrT]>k2A-kC\8Dr8$3D8@\0&_W?ZOdtOI2T`?Bb\^Y<F)!gj2ri4<:;,4:;JkB$(ft/oWc=0Q;(:/*A_oX2dogG'.Z(
%7TYr<erA6@4p?,/HI!_CYeM+i!P1_q""Rr%cU+Yg+0u!(mKcIR+d9YE^hj<D'rFVL$)Ug]k+bR_o$0U<mM^tD$=c*=lU`cfPOfeF
%6;!Fr$<fW-T-g('>\GUg+WhW91G2;_,;$p6kh]-Y.$K78gTjkk%Z(!-okpOA@Jf>0VK*1ZrE]S*F>5Vlh+!jrn.jRAYr.fVKQE%<
%"Cu;1rq)8D*=mSfFqa%9=<`)1GOt!ac[PbuH#1d0%^:h!.Z_j2@Tha\oE!gCVNbaf&6f&Q"J!"p#sABF@[?m5m5;8DlHo@tq?d\>
%1<ft7n]@0Cf:he`gtNX[h'A7VS26j1-$?nu%4F`@C2$JJMPS9lB91.?5H#*@a$"EnR_G\FH;/Aj[.GbhH^7#fNaFoR=?;XSU3jdZ
%R>_rMOQKZ"g@&>uP5+RCE!VeK[kH@G9_UlW?kmA7(-?_o>/@g]ea1pT.Q$%@MF+i)$q%+l6*6+q\=G/D3H:?u(LoEL-c*==rU)MV
%!D8E$n"aU&Hd>\6/>-rucprk`h>DN*BAYqn6&.l'qp1ou-d"0Vce3AeMq:7;HoR[36N-@K]T9g;2S>'mA*WDjeT5Q?c<ngdPt:Xi
%5R')ka6R8#VYPB9N[=49(QS1[p_I1MjlM20<S$QBpe,?*RgL:N)_LaVp4JBRiT2kXJ?Xo0/)eG4=\N3t@X*Yaq7G\_k6E1b6u9"8
%ECM3][=6j0&GOAlmU)kf8*%f@&Y@u6M>\C02+\Tbe:E.]X4hSKNBfCq7bX;?[utl^Z17W*b$^D&Z-YIs"1TJ$Je=lSS^LG0($40E
%W0U]e3>+JVHoMp3iPQsR0CY7==C+jGd0um>SO&YgZ;ZUu32B^rS,K#Obq[Q@V+__>o!2+dW9^Z%-77inTP!XiM,%qL"US&!lgtkm
%n@:s#<o-,tiX=m3J3YP!0-:c]@nkKcZBarf8$E2e_WHIQ`qqo#WseJ1nfp(/W]mR'2f9DcW!*I2=dPhO'`m'F+hl#f\"jA#L5@Hk
%<pEf!(4r)T7r5oChSsq\A_B$1r"&[24uZ(#'5+Y<K0j2mqC9Wu`4kCEUQXs2)FMXDeWBB$p"hD5\B1WR>.Flt_U,qB+2a"H`MGfF
%\%ilgPEj1D!t$N7_<q'8O>J_-opH:L#"RIU1j9(4\XjZ4%!i)UR,8_.U)DXMi'#70A?k_d8ku@>9AokEFI+\Fn#N(=!p$%(`M.Sm
%&E$53lh"(Rr%phE=I8$q-Wb!hJ>8ELgt`.Tp0nOk`t$4t1T5iW!)IGVEWJh[&TPR*LN/oB`pq`Pn:XNlJ*^_<Wp#!SHQIbD5Q/H=
%pk=M4?+%CrM.>kNc$#RA[Uo?)B*VU;1AC$K-cc*8qlT@-.:X:(h8^)BO,f%h*\YkL9ij'i^d<tY?9.iE<uC\p*>2\,4rJ`sLCTr;
%M[Mi`C$'1XTQpL.S`M_E8@hcR`7skkGEdF,s#VPPkRq,spWQmA19%p-cZ+^:6q7)X&>XVQ?rX0sls&t2<8Yf?f!DO-Y,LHNgpc]d
%YO,H-]'G4-FY@lJ@AcE<kIuHeo\S1$!bJfm<B$"TD`>JV\9+$@;i3XmEhh?_0*bPHC[cIQK=0a1`qQ&"3\T.>9@%5EY5<<,4*1p:
%eF)b2Sa470^k>C:UJZiGJ(q>8c]IB^=cQI+E1b&2q%,TcJe[GEB[<Z$I,9;L*E1p><$(Yn3EJ)Uj9*=$N7k-toD>cSeBRP/p;qbW
%o#Ctp<lE0inF@GMk<]R$bba9QE)j%kZ3J6"lH5&#>Yk)`/)<&Yi<F"#.-%5OUci7iQ\2^?)ED8kjO1K$Il_H#_bq2"ahp2`]>GH_
%kr&I\_:/EZR>([_5jO<mTp6(m&(R'oYCG<+Yhk+JG&msX30oEhf-laH5q<"VZk<,"c,l)+Q37;kFbDJ"ZUCm:beWe8m-?_"D?4Cc
%[':Or"EdWEE"tVa*K!&N4lbUqTOLd">F5qr3/poiZ\OsDr$?f:JI4qh$k.G2SFER7a`hkt1;kP1/0LnMbmt8@\=-;,GcaNHZ;?iH
%?pHjBF!.VRJlRHE`JYbTa<@Aal9_,MW.$U?'ITlNAO'3D(nn8)*//$Q0s,W7.o#$D\7\fpc$HmM^F_$]TLm#.:4a>N4\tPb5]Hp@
%!_C+Hms,GTa@]mR>?)tNL%?@=7C]8,^8h!l`XJ.`a%=fB*CD]R$jCb<I#sTT7MTi;k/NseG_2k!$L(s%1qJ&kT;L?==`>uP3q?$%
%"1b,d).&;NJC,?npjOYaph%5S!WI^V"9OJ)[,YcNP(nRm+Hk);8'6kp<4aDNLBC?bAu;;[CsYF[n/aZ^!qK$?[J]NE?06AUpS&>Y
%_W:e*[nZSXTZtV)E?%,'3)o7kj64%?T,\&O)@XYb%o=iCX)6n'1%t='E(O[F$Su_mPB9a4d$'lp"ZdK(#K0k!$m7rH',n29K6ZOn
%7&C0oL9euEH;+ug7<+:9(3!RJQ[Lf&5?Wo-==:b5)bY:Y.7LTYTHY!F!/DgBio^2P6;N@k^52CK?nU>qE)?I=b!<gf:IRjI&Lh>=
%rXQLuLpmO)$`@SNcpROa-i(^]*Dm***%6j!As351eaBD,Y`l@0iKr^S4;a)mZ/$OITBqp%PEf+DE(+&ON>O,o5QC,q^IUE!h&f(R
%1OR=t[c,(s;:^^oe"08#R+T!@J?!^<iIaF@"EE#SqNB#a#E8ip2*Oe(EC#2(S@iep(H9pZj(]/P(bYP1?\.[&Gah^.OE"84IJuMN
%*EKq+bV_NECo1+78aL0GN]UQ#g1iLi<R0;"R09F6p1Z(E/#Q2X60Qe3.i\8KX05Tihp\uVpOtDcN#JG<Qgu4h/dM+caq.L[]Y`cg
%.-\?<`<L"f.Ql+E.G&O"bu$ocq?\mPEjK2BdJ]3&l@gWBap_8]6nNKF6DD7="6eVP8bPJgQ'_X"BOj]KiPj:KX?7)0_ZS[t!>TXG
%adE!?^hV+Up('nUTu8JOj!kBYB>]`iTU=)0C-Cc:#[*9B0AL'[Ln^J?1c.Nam-kN8XH]]O]WhYB_1c_-Tn^thbaD^p'iBm[<D9:M
%7+=P.alN<^=^e/(+KnPiZAY42Ds/)M[oiGl9YE$=0NAF]QpWXdkJ:/&=,9e:/OM][M[YlaS%*45^b8hP6qDASV*tlh$mX$/8l;i^
%"e#S>#n("KaVAHOJNB_q@?nLs#X_[g<o:E1!bLRe@4bP(bSJRt_'afTWd2,44=9*/H71Bd*p!Y$o+c2g/bmq_7aDiq`T*s:$Tn=.
%-&=.4gr8J^Wa(S(m9CuMBB$tFZEaqn>:i?9=90hI@C"\%jD0b'<H))1Gf.*bYS9do_?0D=8fg82@d!=Mi`;sjW$Tng'5F&8$9qh%
%7u0;+!dlFm=F;RcanjL32BR<I?2sHn7oF;UWiCtu7ICZ%MAo('>$2MQi4Q5p025MB0ok/To.k&b*Uq*D19.R@"&Ud9-F_pF=9]rT
%@p)-B21BbnJSSk)l*8%8kn68R_D0)/>ge0Lp01W?0NX0m&*rp;j@5M>G_@S\6Xd'Zra<Rf]"E6cY`sJ>ceR0*7D'g,/A4tu8WKaS
%oS4u#R@KGo^*[rYI15%W+YXIB>?hQ,G(I`e2<`aDpD2I@V\#DfiU'[YA([,LEFi1UB[_A=Z5<uDE+5HHK-nnEDYUg/<:H#U2>g:i
%ST'Tk2%f!W$_UrCG4#/Q`&!BYAP"kQ'PW3)*+rE!76KU05/W"K-nmuf"dm<1EEV;mD!H>4^cau2<M?Ypd32gqRO^["I:.Zb/(IpZ
%Ip,?.qg9OK.%Ff8$spea/\D5J7,_%bVjWU/Q,(C$W[Ed[Q@a.1DMlMsWHo5*LIlB"/BTN0CXN]L&I:S(W$pSiai.j]gt?:aL-9:o
%Yu1uS/'2u;qJ&I&!,ONZqSXhZBJu*82DQ1J-&'&>T.a%JD0"c.8qps0ZKt84h6,l,L2QB1Y],IUVoL4hDf88'!I$QC22gW6)^*88
%&S$Bm`;I0t%Y'F^[n;>eh%7-K1EX"si`3tSVZ\<9G'a=m74'Guq;WI%DY493Kqa16%YHjQ397'eoBlrAhD/tU/?0U0`%=bAH(=UY
%ksF0k7h?-.muj`(ABdr56Eqk+Cb`nWs1r9/!S[c_KA=h`D:7Cjm>9;=7iDC>F<tk:jHea+B7=*)dSZd1GNVitAM:>d]EDhXB36Ct
%l:8.&ah)CU,ECO@^%_,bVub+no\p$;7=JSF=tD9_Z/RH#Zm)GAr\6+RdgAj[*,ftTmcZg:d2H.;4)hscebZgs#7Dc[i^:,:-'SpZ
%P;d+pi?*ueIPe71)9`9;HP0GCk;5Waj[+IudAs)Z(oh-:hnhHG[L3n4\8JT?e+K:DqTpA#IGTq>Y/.]/$Ht$q&XO197EjM=8;X#!
%#bU0;i@Z>In8UeR#RHeJ5G<GUlm#W-fP]RY3hE63T.oH.X">8?o@B\G=Z&0p(MSXnAB@toAG/Fu3=%.C9AgqLQ:!NKKcqsQV7Cb9
%.>gH)&IDC1E%5\2p57@ZQr,Z=9d%1$o*0=1,&mjD$7g7ZLgnM(51kK@A?jjB)ZX.2/r(k\?RcP^bL3B:Mi0(/?@?32GUQa#0^Pqi
%V]NS5muHR\*4>a;Q?'L-BI8iFAf@1%gXXQ+NeUh/&W"V4D57S7(aIacSQ,f+!5_9GQ;!;YLglgq56.O'QiKLqF!jFoqpcgeUoOp%
%X#^NtK<n)q#T?H.2;eXk&QKL+?&lp_Hdm$2iOUU#*bL4?Z-P1\B.#^N>)'AbaSrjmVa,\]YFplpi?qC8Q*&3%Qk)O0qY%I:i,"0h
%CZ%?Z&n/]aNqpXRh?]_=M)]YJbT;r"?(i6jN.ps\(?2r.j-9edCDN6KK/8ue!bt!t'fh?0c0l!pQ)RAl'Y7V?E4gp7gjSWHB9<Hg
%D4J=X_;i2+pPdC8\Q'1oR5tsXYU\B"b?&R95:6>W(,7HR5+?Y6^i=G?$+A<gS@#r\[e?U5gF70F@YfW_$k(/,K.B]*W7#o<!BHtX
%mC3<V#%ED";WZLu@o6,f+!F$W*\Pl\XH9=;(+I$!G')%KZqB#J*D70u55*Yta>R3U@"<H]`OI18F.7<,ZT'4>8&"kr'O:=m&*3?,
%7J0_<oa?E)qVc#<()m6nmW?#>#VcM<ZMJ5u<HO3:81_pS[Wd6iArn@4nq"k9Sud2A>/g>/\.LVjbYRg2lY&_gIL<s)>S.(3TqZ9*
%A.Oq:7RZ(tC86,ce2SYdWd@\!ikI!43187u6?hJ&>`/P+U6=!CYMb9T\krkF@A$;98`;#-*I-J8ZIm"'j*5&(<HQh`5VDC?\+,UX
%jM=ioN)o%NAD-'Q!;_Sh'.6j-5loH7$=/bq<4ib:@S5B!-$eTBB$(Zu#TN$N8.`1cQa*)\jbPS[s,dXKgdL)gKQK]WP1*h33.jY/
%c\+34YuESAb!R8.@B!P28e@f)Ad-fH9DKlud`Z31EKRn"A4=KQ$1SpY+_LW9Yth#"7"KrtX!g2US4i=(h>`A.`^GtYW<-DlW`.6(
%Rt6tu@SKtO.b^^')*JHU(%.W8D$KCSe?[g5d[6/pP7fL-L>^`";)@PEnqCumHMO;Z>.eF?hBad1ejg1UX1,u6)_9uLka*fBN@U>!
%KUM/#Z3!@\;ViPbC/FJqE'0f23%'OD5Yt]03H4>e0*0djVH_D11DoT-et*m-Jul3IMjW_J)W554MXlEP0RUC74Np*&KW@fZk$]'E
%\=BH#H+FYC]YkoqQ#[-rgthYrW!668$:`dHCGo47mk+l$Xq_*;O!4hNgC0`0FFhj&bMAU6D9!fj,)+L2?Iulo4X(6``B4]`=OXYV
%Tt,jr@bc`qLFNg+Ks85"F";u2%.Y^T`Jg;(`VQ#9be8O;odrJ^K+g9hPbunD9L>TlbKIAGhWfiTQ19sn@hn73,apu)OM4/H3/igt
%CsM_5(B_$Y-bbcN.S3HAR79MF6")oeJHR>*^cTI\96mI*46qQBd4T$X!g20LPORl^ikf"F;d)$pmsUhH8kL[<+%1:K<?!5oL'LSW
%86?ZDI)0dJfFnjJE/Im,2West+8**W-.nN7T'su/4pA2H9)4t+5<tEEdb4k#6s-\*2[h5q<"im(f$Y5jD<+/f$ZPX\Tf401N^T-p
%*";$WJ/dS_,J74"(3%#ok_g(.#]jO7;$&sMc^P2OmB-.mRlq$e,,06qTW]5B%ZV8^8dP"4i4h=FaGIGp]Ih"PW:JF)'tD+Y7?;t7
%3C1lK5'5D_`ZZjmcW2%maj-!m+LqJ"RqaELCO,1<J;=LV(Q.^b%=WqQ1*-=Ng-HMnK%HH[RV4u:$*8Q"10h?>lAWd7VK<aYb'-dH
%AX!.O?XAW/OGpA2N#9e2.W-F,QuphJX<WHi7!(nH=e?62j__:qk4HU2E"A2;>/9\:",L'SDNP3b0$P`M\lCVTA@!I,YE"K2ViAI7
%JV^5(GZ?-p&>;5q@+DUY"Qh./2"8ff_VW+6cD2*$9;.p0Wm[VV!K$uV4@9ODjI2>O47Q0QVX+M<Ig]4^5(`1##a$/KY$\=66(D,#
%jhsQl?O2os"e'CD(K7qG0Q%6i"I:-@c7?=B+fQ<g;m$ZjBE]b,iQ-X?",XCKaP>>^7u%mu<8Nn2$Xr8pP/E$rh>.e_p([_1P9M3N
%-0S>W%&sRs10%eJ)Xr<%_A"].Tpi]S?kpMs&.Wml5iN>5!+Qh;/C*W_6WXB_%olL))No/!KeUfFFpttdR^==U2+2>Vp_Guu+hWP*
%]NeUf/OFbj^)/O,m+TtF'R7\rQ%9LLLbYmIV0j`;'=m_b/FF68=\C[\3([=C+_PlK,mOAdp9+Hq\[)[ac/?W"=oBG<&#4n$8RhiO
%#u9i<1D`l<lu1$r!ha<aV[M:4/(1OM@W6:g#Dk'ak+9PTV`PjSO`=>o$KW4B"pH\+_F,LVGEBm1Lc.6/!jXS$Les*uKP?X&PhY%1
%/o)E3=C!4:4Z()"Ec7!(8sll8AX?Y_5Q)?R$-IrL"$6:Fm6?+#Qe1_,<4deN9@sG7XPrH$XQoih-'g'5^sa1D3+-9:=Wq1And_TH
%+fHB4JYN1E6mJ+=Hla_s$R'`e34W?5VaU$9UQS8]B-=B^S%QL#7nO.0n[X7.#WWYHI&+JK+%b_`VAN+X1fGJmB6=AO;G4N.1%Y7]
%(8aX^F,J]e,[%U67jA&)@KYQPP?:9,,mMSA/,>%EKsBmd<^8n5j'$\9&J^/C60Tu3egQs$&70DG/g%Y70*h.U@NJ^SB-IKg88a_;
%LB%?0AdYEc+p*j+MXiuo.9F:oM$8`L^aB\0&poht/>rm`;mV#)-jPBa-Qe$]fNEk^"S`4oRaO1*Wao+\_)MMK#J'pl&L,_)PSD!d
%<P1"gM!#9q+=,Wur;XKQ+H:jE-3B$P0dm53A`H5=*M**GhgD9skn^=T&g[;-em1aVSJ"=.V[:iq@rVgbM^un%&gQA/]^[&'eRDWH
%hK[Uf<^]mIR)iD'*7<)FLe;3^ml.m!4$uP=T:7JY^PVJ^.31%PL=$/-CB^nEgLX>d="Ag@#jW8F*O\fsJ2/b%pQ#t!Do+AubPj*-
%dg/8RlL+L12d?Fd0-MWUI!d;s0e!6I_FuC]?,6*#Y"Qa@apRZIEAArBq8ZrD&cE<OK#r?-T$<JliS$c$n'[T>2k]XsA`C>CSIj=[
%9gPNWUJN,D'gIQ&.NS[d2G5a2m&orl9hHSG$W"U,jLC?'r)0)dAr5c`!N$Um9m)5JGClP_RWa[;b6sYcmemE-_IU+7og!UPcnu=N
%7TO%;'S\,qCU)!HmQo1]dc>SM$m7mq&hU%]4k^4+l_1#gU>I`Xdd+\Tmo'DK2\#ntml;K>#M_<sY`t..<_p4_%gDQ&i(su]*#e<^
%ThP)b"o`i_"n5[)!qZ2_da=m*(DP)Lai+j(.4ZBHA.mJ(rCBuI"C_@4M?#tM+l=rs#YI^1p*"a,5@$n@4REiH?r?9tOp:&&@9*N.
%:*9?`4sGB-WA*S4_RZfZ/Po+4-5`*3IH!$.))d)+oEo/*qC*lJ75+`W\HuEY=UC$dJfmfL3FGM4B":](_,`a$SeBnA?T)c(f1G+q
%E93_R:QekOfSED*<#0ABD[>(*kZB$D&m+FGherUG%>U'G8!S5)Y#[sh$>Y7p%S6.7_3CI"-86(+fP);M+Mtt(a4b9aA)sq$H%+3Z
%KbRN.oU1u_X?)2kdfu]\D`!DD5+[">VurXd8gY6I_7u3c[OVSi707RV247:*Z@TNq3=L?1OTK2t=YftL2iOFKmh@JggdXbRDAIC9
%-%t<Wn.hXp9,1DcGn&NuB>eqk?G>>2HeH>(M7XEeit\Jo1g.qsW_-7GI'[hPQh2QQ64*H'7"Dg=38dM6"-dBY()hZdp2DNm4=Vrs
%970E04Cc_IbAf@;0-NYW2\W^AV(OU_#\+p_c*55m/.n5Ymon3UpYFPi0jHmMEB2mp30bX(?063b2_M2e&HF$)J-E*hiduVe\FK_7
%l9QO=Vh2g:O2dq2CKfR7K#P?nViJQ_n.6l]\IoQnBRG!5#Z1rpOg,=8?YJR/+_u`fI'&(_XamO030X">(o:d>$%S:VJ<:H+0Rb#"
%c\n"ki"j%[:[&g,4?':&+Nu6R5\*B8Ba/0<hh6VM&K4,hm-"LLW_\Ij&L0e,T6d=*JRqg'T2DOq6&TX%+?XVpd1A:DCXFm46Tm:%
%QAGlMZFW=9OL3Gr0]sd;7"e9P0-b;U+!DC9llm`(EQS0qE^9ot2W4W<0S4)&;*^?h?s?O5[Q:mTdC=qJfJPhU-&*;8<FD_WLj8G.
%;<VWa!MYo\:*[_sj)WpWlD"W$Mf9biU;cd68D,b;MhkI`>S)N0IKkr@iZ5o"2`aoobMMi\I/n^Re!!02=$hb'3U@d)*NmesS[iU;
%UF9fH6=?uQ0AXcbP]NHA?[_j>#SmqsND)GY/Q,2OX>T,bU=Kh+()+&"\F"&rKAJ`S&IIp$7@&Kr3-jsAfIJY9NnblO44GkCMCInI
%rCG^/Qn&!5MSOXIqEV\JP$T(!f*7!b2l^ZoM67RK:ClRj!6H4!9:?3`)"(\/`$Zd&%-]mT=`o8\gSELKo":>JL!^L.3UWH.XhsBH
%[lTNQ"/IB'0t4eRi;4`qCShTV_!L(a9!r1V3W0tfDGudb9'ch6i_^C_40q)fPC1/k.nU7V`SrH#'/;iq.60&6(3o(T#s^D">mZ*-
%/G/SMl,k>U.Y75#.Z=%KjLd+qVd^[FG%P\t&7H)3fI[qI>[@+0WVfH9<L8PoR!'^_RQ3E-@,X.6Pr#6SiK`XP".H$M+@QKf[TkOi
%i$XBHJ\1Vh&#.@]lWOcpOK-GhfkZ;u">Tp;\,[rMF@K/,qMY_90Gi@Or\r]j*6FHlgD87P<c`L@bt_CuhMS[<TtV+dK`[H-$@i&n
%l9'U@aD-R8h<P=1&TE!$IIG]_^Iehn.Xpr%,4n/c-.W&O6Kp`cN`B)G,f-Xh!#BIa`7Rr(fD0P)o4k;U+I+JUb!J3K`rR6A&fGB4
%IuaKuTrR:0h\arLcrg4H<RlAqgbK-YS:PhcY(-.D<AbNiX0=mmDbIf]"EXbDQ_8kb@0Kn$`LO^[rB1e2>Dh`-TRfO.Q'c--'`el$
%#BkX)7U+f-@<#Zjpk:+;4@9fTmdX!jb\/WU5]"#_)DG2!EiE$m,&"bP<W#ioit`CMQU'c>^c4kNPo'`d&HE7`&inCSX;2CB0c,Xn
%CI-@lOPBt_P_qS..&J2$i%]K?o-tntH18Naq+A.3Bd(=HH0FQ8^&[VmembNX,Y)3(*6KA&LC'S-p5I`1B)^F,AV2oU+WWe,%mEb3
%dogejOa]b"FVL0M3?H/kRO3\5\VSQ&DYVp_YNq*M#J?%D<q4nU=m1AoCdPhdS:sAEN0fqH#DU\1H,;5+0qMcC2A6kZFTtG0Jrne(
%$5<5O_g&U90N/`f'#kNHqo&H?/o2o@_peA2C@Y[Yh+$VTZ?GT_JrL^Sd_T9elp<[,:jKIVi[rJ$q.Jq$!!YK-FUOkufj_P!"ZcY]
%Qg+E*f+InG'"q*W@XKSEnLKjsC(n!frbOP6c]U,ieB(;Sghan8C=RLl!A#nLdig']52pNh>"HdI\WVaSn!E2I/THAN.lNF:p97ZP
%<ofkN2<h[:9"_0(d@!gC?kEaM_+9#1$>)2<6Dm)J\&4M2JM3Cu$hfXQbRd*dAu+K5A^DhYk6+eqfNY;sKh[U6SOj1`)]@Z-Op(`T
%0)aO;iMd*_AMQ36o7-?**HK65RfDR]=P]iP.5g`dE'`M%WArhYm0te4p>aQM=RVLo`_"mtE$Wn87<B8uEMTp"><!i\7ASAGU_uF+
%1*7AuTC*gm0G3lV\,qRTT!]gj&NI[ML4h3JdgH#o'IJ(piKr&#?C#[OjbO5=,6U_#BN4ntEFTbVR8%Km$o-B:XfboSX0/DjN"KG+
%kIq:T4K>IQ+N:aoSEl>*iAmZCQ\S(0,H@JB_#CW]6P(-?3tTT#b2`<@A=nD<ZA'P4<<a7\7er;0T8;<#[ncXMaCC-J2&;13_45O>
%b[WNJRPq-sl5`??5X6b23/H..q+D!mL:FLq1SOB>LF?;8U/%*LQoN,pER$.(CW%5fE?gj>UZK5:1)Z1-QDuaX*t'J.d3Cj"M&0*X
%$EibsUN[DZh&Wdtcbj;Yio^1O-4)`CEHuq,Mo!F))G&YFT<n9&4#34g3[\ZC\)i$XXj=8.h:R:&f*cQJ3ODm<(E5$3a/.h7Di]mC
%W0&6h$T>Dn^pfdq$q?,A@-"'i3ro2R^^_cob!Q3Wmhi#6A,G$J!sb5=$BDC00#5F^cG3C=l!:H>:bd_8It,>bHFD2GR.P$kcdm>#
%,"--7b-X^h!AQi!W5u/;JJ++4;lIq\hPitDHfU,X!/6'&o>4ZIT(@u3YXOXr7con$RB\:qGi`5*(MEFF5ToD(4%RDp<VbF+pF'[S
%%.-#[IB<QWkS9KSaU+tg'3Y"QR:EaGYQ0X[]e>4%<YlS^5Pd0jf4ip4#67_ri]3B'abP_MO%RBs$8S>shHK%C$5j(Cc6+7,AY?mb
%E0LKXD+_7qW'k1`1]g9:._7a_>#'sr%&@^g6CYMIA6s&)fF/$jrBo3[B)o%d3aBa4>K+Qq1RpVQeo=Rd:amk[^uetK4/B#6Lmk_>
%[$t4SA;'Nso5"_:j'e8.kY'#*;B8K@'^VcR!3"hV.:\Ct9i?K>E_4)BbqpTPa]:ie_@.Y2G#6dgg%A()9AN*m\>2/9QsSpSiZa)Z
%>j,rWWL=K6C`*@l)=jfIE@$>N%McU.62,dAj4SVah-bqQ8M\d:Fq,^)#NJM4.9n-'P-OZMENdP4&#FcBO2*d<IB'@IfR:+7MV#pV
%2d6M<*sZ+BjIYO;NC%-@>c6J4iS:4s'N0qEn7M:B8nHl(*5?-5M'N?>.U#!AKF1FV[`nur+p*XBIToPRX9n_!?pZ@7NJAir#a25C
%,L<30"O^X+]Vm=^mTDk-@Kjq.Q3Be+`&G!;oZ;PVAaBkQ&L2ZsRm:I"H2])$G7chKQWKcFm@mTT5VguG]ImYGM\ifO_+*!-BMlY:
%UbtuId)FF#g*'Z:[]+S:csBoK?>%&efQc"bUg+C5]G_;hRrWTYb@Q8^,"CJcl\1cqZ,ijoS.lU*`f]ii8h"fe!IaOAkKLsSC]J+-
%r?-)ZR7<-c9Nl^gF5E$*O],C3PTtKjm["Lg%SKkkGaGWloe*>m+8L[(Fe5WBIWDV1`!@ur,@;f"*mXE?'`*Wa3Wai'%>flUX%3>O
%dAqi(55b`r+u0W=i6@lK#h(Cu*eW@kYD%Kqk6ClqSRgQoIRP6Pou]7-L+nDkap:8E3]l,-8=8m=e7SOa%Y\!"*sSh!W3iHX$'ql-
%j:UB3D2C)4n!Ah8m0?%cVbC^6k4G5hLZ.\mCf\0@XlJF'AGK:[<<&]`)U/i$OV)ZG>Bp\E-7d06SYZFRaa#$BU(97T-&IGKQl3>L
%"PuqU&^(TMYX2S#3^NEi*,Io4i26s/*!KTJ-(g[b(X0hPG*T9YU0nOrT)K)2i%'U99,HXt<gJ>udKG+LJaReONs.Yam8\?kW+9Sr
%70,m[:ZSJpiH0s@6ZPsaFYg0%D<am*`QB.ZJ5#-!Zqr7.fEVd1F*_!+ACsJ?=!dY^__KU-@NNfS]@RNJKZVQWrP9u*V\\t*E(go=
%$ui)@/nBdS:#qir%!Ui,cBTsO?"bq1<\s]mX!u=\Y70F8F@M>@i/,A<bOu:N9r7RamUIE4=G8@T/"A`9;BA#&L^tnH9;7bChL>hQ
%+:\VhVcMkmO\M*o)F'"W6aCbu<lDK`[q48e^oUO98X]\gpkOAECb7E"o)e*coRAP@G`Ig%2T\PuWt7Z^OA0ppKVhsllRS@I"sHlA
%IkWXl;Gsfb*g3>/#se[%lF:`>,p)DDCT,V"aNPr@n?buFCV-[+NVeaq-nULF,%NEYLF;(9CLoF#4.W6u[j_nG,g7#Y#>,]dVh%E_
%OOuS[5+_<fFuCL1YVil'.%?Pe!><2jLf-X8k;X%lL'0Q2JB7%Zij/l__`!`A%FBg[C'p]V.h^QiD#3a/<!M*Bdp:WeR9rl(6J=O-
%Mj4aF.^Fjn]rWF/DXL[XGqL"c^Z)gL/e"4aAp[n(6tfN!edFlJ9m5r4$+ThO,"l<Rh"nGdI+"2]#g:1LE*^%NFn3Vth88$Zle4]/
%@>HYa#k+#=>&U8XU#qr9GoMZ:FfZ,S-"7nhcq-<<Sl^O$<OBdnG=F&gQtE`:e^#b>fR*^E,r<_6+VRr?RGG!-r:/;76fDN%Jgba.
%=u2OU%/IukdTKATi0Zk3IVakP*^=:*44!\S0?&MlFkV*RX(F>]#%S7P/fRY#"*W_[TBhXr%ja=6;1ipum9$)AcA2rr4[`Bpci=N+
%L+^bJGXpn_,.>J<'"N"mTUf\FHaPXAE)>Pa$^KGMs$^38PI"-&i\%2Yq$"148*C/a.Oc@1Q:jYMaf$X!!Z5<!$3c5L6.iDPR&`6P
%9ac9(RZdGi-eQ2--$3ji0L7I,KVG^;M*-%VMR(#8[X^q!fE3G>N.T0i%[QQkecoiN6@(rL[7hSP^r@$*#In@Z6Ae:Tb&7]pic$[;
%b/cPJ@Gg!fOMsIK[B:grbLTc4*>kF#<SScLc.?rsaTZsaOIPA;&Fu&7qV,BDYT`s0Zp,)=B))>NcTaPf?EQG'T@!3rBpK?e0>KPN
%J%0Z!T31^b'#GQD)$,s9EL;lB9L5<c^DW+=J6o$c&3=amJs_H^O53I_Yg!"1Vum[+X'Q5\2Da'u-R,=bRjN)\PZ&^i5aaH^IFZF3
%@9&>#UDY*+L5so/bqh4^d`/`)JFk`lrS*f,gB[oeYp*Z_WE++Bb#^A&KZq,>UE%L_O.IpOk->h_D5E"_k@tjelI'*GE*!T5`:6-p
%=cSl(YS?+?[X1Xk*_EoO=i-H(j@73Hp9aH7HbcaP'm.ICZG3'cr)PuQDENfEOnb>(R/3M)1Y6P[-)_j3[sHlI$)OUdX3%WkL^.Er
%.FZIc-#PVLAproP$Yh7[Ss?YJM^fRnD+(a"$#LLo>GGY\OO\Ph?tqVn`#O@EBT71.IW.=D*R86McB?1"fh8-07A`'T_,o.hd'hr-
%!6.NPbAlcYCsf9%(1'aol3s*[A@Gmb*3isaicht3NGD;><k%ucl37&;`;W?dZB=:'=!2Eg!q.CZ?o-oQ\g_;U?RgD9[q-TRAh.-G
%arqNc%p+iS^.fkMBI"6cg[0'V:E_!fECf7&$?)s2i>`FG(X>Hr3>QF?EQ2rGfM<E[lV,mhKQDGF-^e5\$L9?.+HI7)@=XsTFRpBL
%03"lKBL([$=G.c@lk0<N`X?/j[:ZZeE)%@A$Xf1&#W+<0&iqr$TX8D&[LB=#"uAMX37O_JZm/or<>0A1m'^ShLhF2c,Su28U`tIB
%MVe`62bb%PodllU]5r0-"YI/n((`/o]2u4E8*Sf=/4TFIJa(=O`4dG3/MR/BJ-]XC<g+9Qou)$^UI?<(AVKN!iP-hkgM8e5Q/"7:
%Q`=I=^=3=;_5J7"LF)Jr7IK=G;O-R3_Og$Qgn/6mJ"Fj,%Me1?<X=8>25.H8ZPdDf@RgeOQHX\Y7.X]qeOmII7:7JX?-XA0fnhS7
%\AeTF=9DmQEE+B*Kg97)mDG;n>W1S"$>Q@nepu"*9a;b\E7.0>gi1OB$1AH;&b3>BjZdJ7k[)ZG9-4Q]_N8(R):g@=;u`mNHT.eX
%M>i[X=_0cXaaYH.Zr33=%r.ZU](6C!m19Veaq6:_Eu<EGEbJfFl(+KMYq;8$m[Z[D@&pZk$8;KbHb&I_R01QH9&[*SX?8B.^=&js
%7G1-F8@pI@,&YrIOAX^?:ErA0RZpY8ib[\Hr8k(&1J;,F](aIeau.6?(p;R;^Val=/Z4^`i4WK!p"U\o;kd).FP]^@mFe\_*gj_+
%$o)uJ1h#n<Yo+-2[WV'*$Enm0O$5!j-BU[7n.oRdpm0]pOT=m)Bi(XGGLC*T<H==QiQ>!R&akRA9/8adQ^T9$+MF3YlrFncTHBnB
%VM_[kjO/l"-iuD4G\'](6.R#GFG32r7#X2dDX0A)%cE3:1d)NX/#gWMa-HaS<FJ[]ZE+0S[htNP'INsMP#L'L1Z\m9_qQ'<Kg$_U
%1oX2D!=L.VVkPH09PmV:7:cf<h3i!l--(\RA@b[q`)'SJXQh[Ar#(%arP\+';L8jliD0Dn7Bki+8#N5"V3uJ&j)><KZP5RFmuE#*
%`G_%k'<mrU'd87*/3"JtY$h@f-1PE.0C6ml<u+8Ub(`So40i-l"R8K\_$Xbl+]IWg]*YLdVhL=b\>I`06;'U2kRG'/,!ubjjtEGG
%>qD<.R8/h!\\peUDcROE!"g=3C^<l:ZqqKobU]B>S_(A:1'j<P6&WGXMTp/X^`)o`&;A>s,VQs$?+"Or4LMWlZ.or;8;i!fe2CSE
%:YQ(f\[>tf\D%U8!hc.94&9?=2MB@"km0M#BnSCna8hjj[Kc2(5_6IY9sYC.+nJ\60UWZI';['J6bj1g_;rKD$%>/cK-GZ5Ot.1=
%!^\ggIlttW6khq_1((tX+]U.ZEHm?)oFVm%Q:Sr]K2<*T=@cI%JO2H,D.ZbBXmA@q`V^P<6]!$%G.'DjIC>^fIQ6#C1N&O+(la"\
%"r%o3l#;"6d/hEu?TM"_8Hm!alB.fgIP_$cAYk*.i`DiG*3I@U:/loa<%bLsI;KcFPG#uG%5*m`)2$sh$3h>_b?>cc:>:6u2csh;
%(#?tML>[rG.8=5B<Lf$_C_9@h\=+m.ZUuS"#/smu;8CnoKp^bWVo"mJ?@)e,.1&<Zm6?l`g>[7*_$bMhWiqp`Ud((qJGI0=7uUOQ
%"[p/POpdWm[44:k<YZE_X"/=H$[H)1k=V-3Jo"7S>/Ei@gV>20rS)$1V!\f%`PNJbpqBXd]J5MP'('78NHo8HiEMIW39\i"HEJq8
%d2le;b"J@"Ko85&bpG7f;>2^U#,,##AW*3h`-;D$"/gpiWKMFR?,@Qop9C\bh4pcJH]UsDXkS5gl;mUDH9E$i83a63:gXo"Jm4Y;
%L4Hq[+OD2p"=tCh7H#^^TTV(SLO9pn8U"1Q,_:@lOa<NUWN!u8aW6>qpLQW!:mYrH\5\aBX?#%#1hsEhM.g7*0GFp+2&19TMXdpF
%KS4kmD7hp6D\C4tGp4aX1utjWcNS)Ze710\9o?m<]&\f)6fn="k9XFjYM"`0\IO0"a7j^mVdbUIJKoP2"49`n)jERqG-R!C+@f`e
%7fbOeM%i=1<$XgR@hd7\7@)?DPG8I7Z$MpN<6t_kd4,LUj]S9cP/mR@^q$Nd1HC,GZk72]C/YsQ3#`jp-X=DL>*Q(Ho3rkn6P)4*
%>Djj<nrf:f+o]uc#9cqGP.QMe1MS4di%$/XGQcJ\GatssU)$R5A]uHlaiiQ'$np?Me>/Y'g^?e1&7j3@^68;k,h@#[\2o3tp<;Jk
%Ju.Ti<6Sm2<T5$Q/$$5Jd"me4#'uG))F\+I6qh8A0/+'D=@8hN,BTTp=M@8"T\;m(]Ys(b`>NNEkF<J;&PCFc@-eBe:hrp>M%Sc/
%]dkbuB-Ko&E_07ncQ4LI_onNGoKABW?C0Y;86UDOI2?47[54`q_HUkDoDt)'Y/Vl&iLCMo70+gCG>'KCBSQ:^(a!3]lb"i7,A">I
%jujOnh/mWiD[m+'/B=8BL1r-i`?\)2SBTZ'.G75n!i&P".gN[l(=MB'JE%*7++#Q@Tup:'/s1tRFbA7?<g5n\e'hld.1/ceX]g)H
%6s?+tBA7%21?Y_,RrcEG34#OM*W&b%;43:l^mo-,@2a],-t(4RqVM3j4`?5DMR=koRR/H5B5BN+;h;7pZHdh0P5kqj.ec?#F-`S@
%&VGncf:n=RlAN57p>kCIT&,O,bf$(<glu?b0/k/>"<Aot^uC\bl/d)fH.A"N=Qbh$!B*a.eUsTCY)TmO\0@2D36UK^XS[?qSX_do
%6*R1n*2L#2M8N)<q>T;O+4c>Z)o"oK`TN!^/N@R$AhjjcW8qG"qB6P0,)lKm:2NLF*auZKmik9Fj,WdY]tlD^SnB;BBuD+*6j.I`
%15CQ220mp9^g4BdjKsj-dYJ<rW`33m0(>]CM"0WTi1^10^QVSJam3?X&9`e2_.)ko^lFdq/IP'=R!?bWRnmLVm1"$h[lr[Y/#JPH
%>_*D_cW[#N37-a(ek%aIaGd$1Tuu$2^aX)b=)FLJRW>gg819tNLi/^XYh(9Wf&@Fm_lfoKNWj-XM@m'SY]OB4-Tdd'p!fs`r7Ign
%U]>L_MQURMVb:<FY;dR8X=1b-V'^`3>Wk`3?(lscN+>LYe;5FNDtL<`n,_B)JhO5X=aW,kkHSk)h:ZZ`USoVoW-1gN]i!!t,\!+m
%%5%l``,c>=?.QOflfh$?mNNrt^ia7MDBoUIG"O53/O`2;>$;CfXqA2>-nsW)7k.$=,Pcl,*D)Vf?Dq,mfH'LgLI8+uq-,S4ED*WR
%2ANA_(+a)PE4F>eWR6lrXJ-i?Ij,6H*)2Ou08bpM0&ae5<d@.OR[stG<gtP8SH/Jrm]&CJHAOnsf]pj@L.moq.!THq>UQ+UQhg.C
%;je7Z4qj_(UbES=GZ-n.(NBTp"=#@,LF]uNf^s"(eR&5C\_l#fW82/G@)o*>_TYOfBZ!;_iTL?:J]&N])l+\E4+UU!bO'^trB!;e
%HnB;Z1iFg?^1<LEi#0[kLenEY[X/jJ3Tq2=oH[sL,.P[kD)um&NaX>g`6C**')6`u5^<464\;5$[M)?$32q8O5\:@_(i^f:bJd=o
%<mG3DM's\sWlU3$qdBIdZ<+op+F,9o'(`K\OF?WWj-;`YW$J!7Bt6ee`TcST?puD>m(>b%b*cc\#]C(<HL0)"*m#/8CJt!oZL>>4
%/$bXo9rcHp5t/2:.7HoR>$qm[c)U>eoWn.O@J7rZ'BCM%LW4:-,mM0YD-6ZJSGnIXs*dT85POS*"4dP'K3=\^cHQ]K4_iP]'AE8q
%Z&>BS`n66%-$,r9`WRY3\Qp(]S3j+cDt9O_3)TcB6e3"bH%DdmfKO0!!`:Q;+g%89.Wo'<!GIMt"4eBQOD$K,GZo9rQ1[l#Q3sCE
%\Z_Vo-M"Op=RPuE9hbN%L#ADD%>CRmE0$"!`ZE#5N'KVhl<L+6"!$dPmbs+Mmd^-m[:h'/l_u&k0dric;:1*'eOq8feI:1[UHh5X
%&,9XY;nSSVF%J^GXc)a&kIsuWF%Q`9-&i+1H`q'us,sLWCk4om8?FQ6A3)ku^k^lA<$UnlD(,JWj&dWkcu9JqZ!YY,UW2+c,$4mV
%Q`(4c>O..T@L7H.G8b\k(3kRU7P)9i</BseN8g%Uc&CK35P<Bi_VDkaViFbiAS'<&nReaAH93Ztq9fn3d>EPd6-*BulG'*I.5,AV
%kEb0FaLoYu@`<"C9a6d5hW&%ODaLA[SBehO,")e#W4=o`LLPh9m^SB<ST/aaB"\Vh[EMEc"/:[5H@V*%9tFZ!3"gL\hgqZ"CE@?;
%l>/ff)L[GVCY6?OgC?0KUi/Y%62)-3L:5>B"d<5p#CgE7,m5nci/C%$ON[&!V6a5<Uc=/*#U#.Kj?-I;KXpO"/fm0-#KXB4'ZV>1
%9*_Ol#m!6W(eM[^Q).?nm#n[uJCN0*LQ^m/.XH\_^]J1^/75`W.`>aA-8lV]h*c:\8rGs\RCS'A0(g)cR*&8*OG.9o,`\FIbIam^
%buc$oW$P+4"rW$Ob98;8e\U(U<(W+H"="q5#&Q.CS=GI'FO6^b>\C:jS@_5?n?=GTIQi#b0^O/S;I.+AS;0Z<A:TN=;.`-O2cqp>
%,j]A'N*CJOcgK^"N?U"6`DgWmG"fu5^-n6t'3]O\U&<5Q_'j$dmo0FS0H)4GU/2$0^?;[IKpgm&#$isQZb2dheOeiLUo/BOIrQ\g
%Eg`S-hNo)8=lc):=`d'PCfJ!E]rM)]U38h6KOf0WBj`Ao0tP8*/-ZNpD)%mm+NC/K\0Yq]"4V[2*2&3_ljW#KIWW*F7.IA-4ATII
%id+\NZ:-$;jIO3XHGaf\LlS2V%6;?a`LU+S_jJHEDD>rFJU&4m.Ak?&UOrMRq>UJ8EtX-Q>nU-IREkgf68\3QPnAfJ86hO?#BH<l
%FAspKC@h<p@1+m_O>-V+&ufAY>5&J-I8cBa0SY.A9e8@)C#o38I/mu\h9tk%QO.WTS#>DOjG:_YB]2$])HnBjWPM60X,_!kPfaY[
%TcVDEUmp=4?"$rG,I'N#<:8(F?'f^0*]-JmM0UcW&n_gB:_"Y.$JGuRR9r.h]*>!!*^OHZJci;uO+[cU!kK%D</]rVg)po)$EGsV
%\A_Y4K'IOL'h/hPg:)0@k3g-6oIuu3>HOf#?`C]H-&[mOGlR-eb)aQ[]T?mS?hI7518^-Vb?-#9*p+p(3es(_V&EdpH6f=V(.$&!
%5FKuqMiUm#T^"u1?)6G\K8;9YClu4e\kO]d!`/a@dA!;j&_"F$6(I3?1l%?VC40eMJ3Lq+>L"-Cha!c:pu9S=#st$U!YfXpiq!FO
%7esHhmslgPf1Im.C5UBNlu[nYe<"1-XGpJZceLE?D2L"c9#[s@OeeH=muW`s_Do*a1UIR!MW%Mb`S6sZY$,:i9,_L639op)n++^L
%j?q,Z:VER)0lN]=N3dQS2]VW>1]d)S>Q<Y&Uc4$G-"A6QDDG)i@bY?"0d;l=kS<>s,`]]N$A<?"hKIUe8q11m;[8KT-6W%`j64sZ
%OCs/i?J2-\?>B.(YFZq'O;gZt'e51).5g,D=lV'AGha6r[Rl\C1mbKZSjka`EkX1q;W.hB\o22S@B,i%5dU7&3_iM<AB;Ujn#6q=
%Mt&q%V8XK`%'cE*0SA%d6]YQK=H#<+E0@dYq;,fjkdFJrL[;?f8C)JSGt:j,$t,@R/!3@Pp";d;3F9kFFWGN'$7S)lAV;cBN>77Y
%oW^\2Lp*-C+Y!jdj=jMN*uNKU<#\,`:ufljk[EkK6f9!`P`%fGggMHgL,n_D%+6AiZqr3*&APqQ>R7):P+9p'(\k^(->)DVD6a;s
%-)qfA=.kIf'ojd_j":UCCDfu2cA"H`gA$ko>%A1!`rpHpZu0r-jBMjZ,Z8e]d74I?7"AjZS^Vd]c,1@CZ?T_-fa,&mqApeLjq;IA
%AqHt"]W`ftMLcA??$mnID*_>"3N)XD>jG>$/bM^ec3Q5d8%7VAFkMT+_M_P=B%f=OhZ5tL[jl;a]l^fRUQIlg'MFe<WpCNHl4<XY
%.c)<H)irGO'BS1$84P&,BB,R()j&hk-;b/8?>NsEU8+1(,_H;k)%jZSMCtX<C'^i`App'_PQ[AML8L+=6l??kGF*it)1HBjLa^IW
%PE9gk!XDE1;b0tF]V5PuE*Kq2dnn6Pp.D%B&>:Q&\eZ.eOqn\$JP9NYY+5qO8qRZ1o#?iT-HKFWB;?KCj^!qDqD;<.a=Gd%1Q'Bf
%Z-+uWEk/Nq_hEf>P%58ZA=[_hT`R&C'Gf\%5,O7J6P`@Fi8O@A7k!VC<UV?O.R=*N&2aJ<77<@ZALW`kqnW4i'5q7af[E1qN?-AA
%Br<ZWZ6/<>Eh#H%-HFC0`Rk/@m9CD0h:+$eCss#Ia:$G,lMC+;<$6ruQ14+G5`/ep!]q.Do3_r>F,<J_IUhX-6$6I2ZcK`kUM,jQ
%T6)^hO$G61_EK1C`Kl!+"sF+_rN*8%ia1iF/]m*qq$$m.kHPqVGlpZOU[i?ff5IYB2])Z1R:<j>P#)SNbO*X)^;%*,40%W^g3DJI
%D6&(BY&APk9Is@go>@6pS'*)jii[)M@rZ.&pSH';A3l=:PdM#W`6H$*)"2GkSSWHaK<CJ75$.0>m;#+I2Qc^C-em(JJY"L7^O@#p
%0,+M!]8?_=%\pt<h3]*2IoZU2Y_XmR_e<Dh#SmfoFc-+bSil'XBqf%*C2)9OK/gee4Nam1P9Tc?1s$>_4QlBB8s@CT@0&@%U4ihD
%p092GeCV\k2Db3e5J6a6"Jg:MqP6Pakt=sUa![&`?4u1J<"OaI\I"Y.fIf-J@Bj$]jE7SKX=a:>&NM[<W-Ue&@ahUh#^I[=-Xq^l
%8iniU`Y;/Ueic*N@fq::F&0NBQ->S8]p<KB4p3fSbDp'(N&3YKA7-9!TEDLUX`oHQOu?IA8_B?.FsC/3Yaf?HeKg)gmr'_OMj$W(
%4V`os,$D^q=_W%5_31btCt%Xc>R4Vg3f<i"Nja'#@%?#(s5#LGFP?GY[YNOP/N+ZJ-#?/BQSHP=np^R[J,>/^2hk0"Zj$sjYak0S
%=8O=!!QPF#9gb@J57k>'1*_@9[4TAkQ[27I^Jr/Tm(#g),+'8=(Lf'CYrki+Mu;f$9*uVHP+BS6Ze9Kg5eOeI/CC7-HBgm$XN;ph
%)j2[K]DVd][4rH=;\DsR).;>QKR_16'="9MicH:)DFn%Mqcn?7oe?S,G=K+5fVkKoj2<K2Le+s-@<sH0V)'a!/7Hm?"\7L,+K8<7
%9I)*EEMjGdh@j*4i/)K;4IUUGQY'kRqHrdgmc0ArOWq.W\sLr`@@Hf!$D\r)Fsf,.9,3MV<rl_4Gemd(c-2N;gGg.pIU*-D!l9d&
%0s1XtCWpdV/i2^n?IisAX=_#<*dSZHG1MA(hEB.hZ6Vt,5,`C689cM:D4t_7p86RdV"@/pH"-KA+JqgrbA;_kj8*Hg"g3pW@>?LD
%J5\UQ@GFFIm[eM*q&`pUE>CtL>8Dg$pK@0_`fq,s2CCJG^g'6_R,>D$6p=VODi<Kqplpre-Ur7mL75*4m9ESP_O3lIOOllk=ga0$
%GJTS([sfYc0P?>3H4SsH6%ZD@R*;<dkA]/&YYa@^n?4<4JSm8$,U#9E3";ZHTKN!V8pg=u@Ms+G+X5r>aYG6[8WbAaI.*@,&lah#
%9Q%&#12'7!Nj8qVQ"<F?P%>nV?Qf);Y7R:\r+)Q_b,j$/%?\P!%%KK:U]TEAW0MnP,4F\a]NtsID'm:p'eQEX+U&Y(`VJ,^`p0#n
%dUhUi!3BaC=ci%sSX9_m@69(?SJmnVl\6p"Qcffc+\*!GN7GU6EBN!mCaR7XBfJeH*g]/CI>2k`6BkoOI_1!!!N@J8.ee#[X:1#(
%-9g.RhY1$4Z'6uFr#LTr^l-M_YT!/pP(6#j22k]Q#^?f^'Q]lI]M1sN9U_jE]t3E@$5*jc#5R@SqLBcU/OG''A,=hab"+r@.t'N]
%VO6a$!F5lSHZ,GOrn=;9pUmf^lbc8P9/7SV.\mQ[kjn)82i_V?9Xq,9LP39!jFVIFjRIqZ5p!cKfo&<,XXMu.3@3oi0.\9k+C&7:
%(6_':_SS%O$!/ol;7Ni^mH):8phagpE^hDsA[u:8%>n"U%_:`[U&$MTAW$7'L/4\d8+M?S6;Wk+"!@W&0>@/1e7$dW2Q*5"3$?mV
%bWonro!(a=M(QMb1K06ca_o6U;GC?=oA,@L:.U6_ZNm1rG#)hg_-$2A7V*>;/.&9gMM*qEj;:]cCLppIFk3>OAsoVYbT@tT>qYG`
%ea`WpC0pJ?HX[Z<rLS#'l@EedhSZ:0VF\5\bp`Nnc'7<4<h[T7e:#&.%>r@c#d:YA[bWP'-*1jQWG32iMZNSdYATEI(WGi$B?Umc
%d&ZSoda[Pb_E1/p.16T)[oQb;4_;9]H7abo]g@Wb22]"5`E#AZF&ddL9ON[k's6XF$'"GphTs]e&7`')=?P"[IkfKT<C]N(3`*?C
%((qAL$=?X;J*nP5<Q@!=Fn=`o!Y`$:O;<0GQmjL4kqmY.'Qo?*S3)4uqiHe4WmDe*7iNF'k2CGNV/4[!Yf"nN)'NP>#n6G+5uT7:
%_fe_\8PlmU?gRbd)2bE!!!'n`jA4+,WUJ2m*@09g<I/0h-&R8`:Idbg[:1:-!d$oD6"GLM8CNu(\+NsUn`IN>HEY<)oZ%?P[>nf)
%aIOqWpFueH@;`[p?(ri)JKtpEaXAQ;c<+;)$o2QhPp/C\g.7r&n_5g-*FKW<FKB)!>-AnORGD[/A/Q[6M)3PiG^sAN+;hoAe'Uj1
%J:kAU2?H[.#,Kfqd;Q#h+AV;io)Lf2*.>;.(r#h01N9#'Ig2S0fR'paFU]SR&sAaC%>b(b68:VLZBq"8m`gns!N%:PS^*I4%Fmhk
%H3E%2*)<.@Dd!:WR'1qj2cMriV4IkH)<0p8Rs3%dJJTS='KWl!+M5^S@LptFBYhrNJ-!=83:u1C#0OeTS<=!#(L*'ue;l6)Ee%"V
%S08%CHX1%5U.3YC()uVA^.M8^cl2=?_so6U'gm7D`#RbK6VbAK8&Adt]`Z,r,no"C?J,,"c>IEsj167<e3d%WSPs1B*J6P4KPOK2
%8LZuBV'LVs.d#eddFd]^*5SNRPphk<To)b7"+F*UE?eun"mkG/Jh!n9"FR9;Y7["2H^O*[`LE!<i;n;K(/J2H7#boNb?]jKHM'g\
%>Cg2BRS].hT]%/^GWE(p(#fbP$@sJq?/e$IqE8!Y[h%5dm(.@+*2AEfY4OD`hQP1O45hsJ-q4Wa'P)]K`o?r]%#_^HD'a;W80F-!
%n@hCHXW:OqYl@u/*jK'(2[;9SC'Pm_R:#B<+U0rZ8q>q!8rt8<B&u;D;J]sLY&+7@CkAYMTOYU+_iDls;7^\4`.R=`6q6ZBid<\j
%R&l,n0b>PjQQQjal]hslZq":-[MZ@\3J2IoeEYu=jYl;M-EPK8\,iY,b93B`)#/>i64dF4inCnESP\Q*&!\+$-;uAC:G#?%;G$%W
%9GL?hLiTNF&S4thbXSQqh/,E2F&\7O:<DoK-h_M:*/!j1l>S.:$Z<g.'7,3]`gdBsHirSGNfs/;VnTA+(hl'IFcgeFOGbDS&lj=]
%R`X!%0U?iqoc\.<*!6q&2^M>ZSk\i#imK%*6H&FGp1Z>;_li'+=s]T."+p8ZBbDTK8tH%bQ3"1!CD=JaJ.f,QYl'F`6,lc^PgYTk
%0<qrh_?1EpR]h'0Il5pc1VQ@-b);%jEU&(%'[)Dr@;>a\*#2.>=3?jYl7^,,@pI3J4s:UfQha\67C_`F"DBibg\d2n-r(T+lcC+#
%PGDPT!>oe-E^;1?!Y`;BY.sU,[3t@h7(Q!1e7gSO>iaAMoSSf1B8_EhkuFH);8qS.B^l!2NDaJb@O?Ch@RrCY8C\cnIW$toU\@e;
%H`HcT`tZUpWVSkI#4>\!+\i[NOKn-aTB[Z,JBYZ'Q61BM]4EmXC:!mLbhaZrB\ZCIk-P*j=5UPKfkW*IdQsG8+&VF`c)@/!m,sU2
%%+_mM('+SY1*.6fNNjfd^`$K*]iVe4X<\$2qf5h/b[$Co+%+OVo:H^$C^W8o%'T&bJA?f/@5<;:bnQ6c"D@gSdTqI[KMGI>Hd;[J
%^8PL,YM19"6?muIf#=5FK:K>qjb=bpP+k2M5,IU@mDUYDMl>L#faK0eM#W'O\#4ZlirB_T%OmJ0oFrP3k=PPSW0OBjFk8NG=F.e_
%C6-$8o-/?YHP[\q6Q;[Ljb^I?4B:f=ICDqumb*1&pSjW4[T$Pj1$>*A-3QAQW?o-qgoT6Ur=J#jWOuY@k7&*@RlSmN\1G<JoaIK9
%SW5W>?<sEY"!pGCC8cmN:jKkHn;)Q7cRWJhGd?"SS0qNPR*@aXCGFlB+<=@HaT5$71L^cD?7?A&D"_ST0V7CL#F\n4QiD7G_?GLn
%B*.acARgl5UUrE!GUO\K0rGom]eP$UL<=MM$UmVN)6mKQGDJ[/JhidP`IPf<Y_fU5GD3TJE04RsOCaer*X(V),^D4jVF4DM[dGQ6
%pLH'H`,f2k"cGHqV%I3+,RgS)'_jJdA"I\\TbV3r0**H2UN1ViHd82(RpmNGLsl7^E7H$;Vh*t=Ih=bq>f/F.<]t.)3^be+C&81C
%[LqU&653=q3l\J2;ac6K90Sd@)&!NKf9t:u=B0;FKqrn2>2?.g!YUR`9Bn6;7J$b>]C4<KC*OM.Gj=$S$W'F.!&eughsF[KY_XT?
%FE!/O-?WS7C*!V<Ht%6&n=GA5W(>A<VpNUIB%`06Da]B>KNGm>R9<,0i$^`gaahQ:bXQU?g0on/^Umb(C=4>d?]B[,kJF;V0j%@c
%JZ?-Q-oh']Und/W\RiZgMFP`4XY(go>c?_L!X1oRb3U@i-HhKIn$MU*&/C$N7$j=MEq:UDqm2,%`k;'\c&X4'\mj*#`(]an![Z=E
%gFi6YknC*eN;ZSsMi%pQ6j/764b:)/R\AdRp-b$1&uBYV,oI9-[5VsGeck/f-'ut-FlB"dn6V*EUNa26PN1emq,abes12h#oB%TC
%a=1CABa.o%_R.cU?KG5g9EZ]]B!a1=F*U9Nd]l60&(2%LA9[=lkRsNA+r+JO-TeupZl@9jJ>kE4M;$>:2FDp>CSfZXI4rF3c=;S#
%4s]f5/5A*p_DNI*:@WJV@\3[P?=CL"%o=3B!J[et`"d,Sm%De/Kg=p\R52^HKMdYZ[$>G.23Q<K%UV4MlfMtAol:)DTWl1eN,o"N
%Yo^m4Jm<ioqUhZ*\=J-[>ruI1).++P.A;d#gS3&[luU-=FP%4/Ii+Qj,hh7FOJ?Bs*XWR.);<H]\N#LfgI40Y%"90b8V,LO%T'l@
%_N&gTjUoVr/jA_-$3tgmIlk>H1M<_adE1#u.BrX%LMgq+JBR9L:4R$DDGdB"b=Pn!3T;7^R?pXbI;<<c[`D>tCF_KX42,<U[L.qG
%jI5#BjL7^0[S[AhbdkG*B>2QnQV#duklk?JVIZS'a@'H<VZ4:?e-IEZ8a(=MKE4LTV'h97_cb2EQd6&>EEg2`hp3P,nA-:>KjHDC
%)RBAhG49n6Z(fV]S_%mO.#q<lU<G?$nnjYa8btfgZ>OtkR\['S<coO=*ER9-.USU_&N*-F34`[^[;Y8XNuNbj;P78eS.ucI?*>>(
%OsAWe^LSd%aBVmp1m&2NbN:HJP[e]YVOJqh?E)\R@_%:i/8n.=]NG\tEe2(Ni3S*KnKbEm'[FHN!nc`!PXu7U)dJ3O&o@aUXR-e.
%QD%"_KiH(Pg/?mqU!bN37KhZ^&S<u.AFEYXe>86N1J?8Tc9@"j9SH'PU:;p0og)]f(mp)qo?)(&dd=bBp`Z\HPuhuV$dP^E!%noL
%dLaAoq#SiooO@=]-F&,RjS_W@LYFX3e%M..`?`e6lK"jU>S6`L>#k-,!t8.T,Ckt\4qo.sX3.tU4%#$#3\-'+_@_:a]m2Zoo.:Vp
%(8=ZJY9'b6#(/@^#^Xg5=pR"bl."t`>0V.;McV!?&j#"q9d94']-&sF%QYTt4V,0So.I"+jSKs0^fcWkD=CFs2;qsh]3=:GCr!I/
%MqhWX_Ak$Zm5Cl>CZ=%LM]K1OW6eCDY[GN[.kZEjPq)&X:fBfg+643$iCiHhcF$FCr#/JQiJSlf?\=N?M"7)W^j`F93L%%2oI)f_
%m2)3"100:R8#jt$9QUH$6CJ=g@AY81,)"6E=@o6aq0E=:OF2?;>-g3fatFn3dTj7Jg"GTj[em(TG&I-e[t"GU,LatZ"ftZ:1pfOe
%IAW#KpDgu/b,gF)&loV*<)uU:?38*VB6fB@E'X_!M*I`'`+?b+JAb'YEYo"r5[5:O5aj9CLYoi2o%VJ`@^"4Q>03)o$krANQ&T4I
%E$d%Nf))uTng_nD[`"I9rH&b>-)kkfS2\j[hqhlH+Y(rBN4?D^!]\Cfb%nUsl=C-f`F;iFm6K/<2\h(IePU0<-\lu:W`0kq!le]*
%Ik>J31;Gl%9A479a%17aZpt4=$SqmWU;;TtSPXkSVT$(n\>i\*,ZYd"HkXJtc7[<tApSp(ZK6:^aIh@_RI/.h5@Ao0FQU0YV&5&:
%@ql+2j1'fE1.98M#t<NW9YjXE2\<[7kO?,HQS>mm(!&,=AWm9b'!$IHRuk0?'&?gN4+0pP%2hfQQrFV:fh9V\Z1*0DjR#o?Mab@'
%I&+H"Q/)I2[(H*Nf-B](2G@sDd[crppUk\9U_?qib09ek,s\:l-6rR>0s_Cq>['V5@gSV;-UJY-QMM.j!BY5MAinbTfe2o9JY7nK
%`"6"FeIcc$G4oO=RQ"&Zpf<:<"Bj$+%RPeC!Wbs"S-\9%@+`Akl\2`F6&MUKj'!=]XZk;B2)GYZP:S`:BX<K&@=`2L"P/>-,%l>,
%VbnT]a/Nf=pj%pAk3Tcte0qK+R'fFW,pAL]k%3bR2.pMG*VW_os!T%,hXLVW3b+.*)*4e/<AAr"YneNSjRBQ"HJPdkLB<h\!Hd>f
%W^*0gTOnJZc6t$W_,:&kLmN2a7:9[;@RYI!XCr>m#$X*_;9"DddKomia]B:@>ues:]UW4-Om1S$]K)-$XAL=B2$m^HN%G.f'DZ@3
%@@?\WZCVo<QFuK`Pu7iI@jKtH.1U@%A^U$C'Sf=NVG9XZB<2g_?0b^3cBBCc[gFQJ=YA@B+bq04CsUcuK3j_?%gcWc79B%ME_3i9
%*:ZWGXHDui'gLg:9@%J?=5^5Z$ngqkIHXj!'"hTjW%*F"BGY3<VK#YH8KYYk<KZOu"*rSBqdIq;$BIlQc($I:V:.i;hpbO#=OnM;
%0@&=AbTUuPPH#5`H'H'r^6Sbo*9/#X\3IP]dR\'n/mN3J9Q&nn*kmpEOUQ#Z<`8Vp,ieBKd#%*gQ!1"lJp;ok'.7-&*`5i:mDqRA
%a]B2-6P<]a=DEV1,#d^hI(>cnoDn*D.b\k?,!-0gW[R2KeWNL%Ctr':lh%*6^(BDd9J130&.r/+`QQ%+OJ%_2;"L*"F]Gu>h)P+=
%15_$7gTluQc@a8uBXC2CZQi,5LVbuS;CQl2>VHl*+mG`s_=L*T&;o`B+""_:LSc<P'<6;L4X'#7L`/i/dg)gHSY(L_'6XOCN93Cf
%.<<fq\r$*SbE'_6aSPB&[31udW\jjD=p2rq*AS(T/WP[63*&\8X9arqrfL3E@K[F%Ckfh]NgO?^$ke#4]kaW$YqSZ2-)r'XCW09)
%WA5=>KmgMboAF-a']/Q4Wp((ZVfdOi&kW(Y3raYlp7F6oq56IPruqOD5Q2`PIfCB%TMYFs-$5Aj&-tYej2XC^?f1jV]`,h=O5"#'
%qEP#N^HLK:s8E8,rBK3,D=l]b7]r2?+[T5Xnu>7U&19p^ec_='mK8Nb8FTm^(*XD2*:Fu!#oh8c0pnjYDZ8>fj5mRtJ)=h0_FP;A
%RP-m;<^3H1]Z]?)gfVsa6SZhD]0eCIXWG6!s7gEu+6@eV2XWJ,ee]fl6,_JEG4HW%6V%;/mRGV./,J3kOeWG[3f0GVr6kWBJANg:
%3(h8\,,Y;/hq?\&2]+oC5ugX_"e[+*Y'J6*W+hTMrSs7$5<PNZT[VkRGrQ6G+C%C8l"Lt:?]`R\P1IGIY5)iSFu7Rd.Bi=;V>%IH
%";=B?1&*i]WP8:S>uheE"_?)\5KIEg_<b!)5L6TuZ:oP9qr?_'r]`Q;gU]=<j&n./.XmO2b+&;I+_bT[<]@AAiB8As282q=;VL/t
%rng6<N!0KY6g!?o7rE)Mn3$"4h:=3cMgLf";Nrf>C:-(k?1/jV:IGi?Z-&aGp$48(Yt/j(?#1FniEfGEAShY>bA'8#Y[]4PrT2'Q
%rP+=>19m`ckt$Jte^(/Tprr=Q0"Cc4H_+0BDP6giS0Vtk/_eNEpRe%M]*3&-LLI(Z.ndh]c=1*TQB;'UaWa"_4%o*C6A*t@[TuPu
%HiMtNW,!"kFJ*=:[C-FI$A^3Zfg8A?-Y.[j[\dN(]RfgXo4n<^s+a)Yg&>`P`Q<Jp=.6aXcGo_O"h2DE%(38rL\C#5+2[1mm6A13
%)pdoqOjT*Mpt'947ADiKqf'0lgXL\B0C9N"F[kii9E1V*cXm"W`k[.IY*L&Ao=AR70gtYgI4[GlEjrU5&(aKh%sE9J]BT?D6m62j
%K]YXpiKr;o+LQD*C";*C^2\[I!T]VkQ(BCVKoGQ^QgR(#TY+;G+\C'sNaE(X<iW_2R#tYME"\JZ4(pPc?:tZ603t1nQA=8kj-Tc&
%"r+iq=)@tK6]U*JJ!Ya%I=9k\So5$KUUrfeIt5,1Wb0`N#*3-fs7@Yl_RcVEB1Z27D_^>YRX@N/.7*F>K`+V'ES4TpZ]RfP5Wn`0
%9E4IMBM7"cc_3hP=5%Lh!`8,b,#HZI"IDG:;A?1FX0BVa`4S;6^&LmKogf_MpLTPY`0]pUVeY.O-+J+k`;<8d]2UOkpSZi=*g/G&
%(VT)44fkj?X;d^ibJ(+op8oK2kfDUYcW"]Lq0jT^W[e<@KMK^5j/2k&?^+5gURhQc<V]+R,mV5(pD&=Q&&*uL</FkYTOA,a.2e5f
%0E$C8.(*>,l>H.j>a4TP8V5HXh6L;b4F#.FBO=V9<"=CZ%fc&lp]#1ts+;>6?Zb0lBl$;i3'kMJJhRA/-P*[*oaD0qch.d`"(=\J
%%,L("f=q!^n+,f=pc#ngEgqhLON;\?`!O5Nq"I$RW$^p6U3$\/K8N1B"U+`].0ZE9g(KHRqZ"07id^t=^;qHLGId/&1]s(0&80-p
%"-oYu6OCchU\5tT(U;j%D;OI!(\uqfgVb-hL(Ebomsq3E+?-pV?u;Q-TDi$cAEYN$W-p3"#,ll]3S+(Vn,K^u"X'P/#7gFh9f%D'
%&"D&;&:rg+&PFF^(^pqU:lf^-6Qrg\VZq$"IiV8Z=QuGd*T6PlRdK78p=7o+,tX@+R]gr%7b9i4f9bXohEO,eOF^7SimP*AO8C[Y
%,"'o62B'#kU&tk0,@c\m?UuB^h=T0'r^Z-i,7+LL?':)A3PO9$?Wq>:dhgn2)cQuj0]PEa?gZl_.32<UI/MFkLW?\(B0dga3pQ8D
%>ulZDmI<I>Be@k0ks$/U)p"-[+*\\srqN>i[fOI_T@Rj=Faqd0O5-D\?glV,D9d=a[dVd1k[/G;-Y%;Nq<-$VMLc1'^oRO[YC]AB
%<ErY7CQh8MpcNHeG#NNN[>,O>ITE'-Y5aQ!riDKC\l;h4oc/b`KPqL]LA6OZ1QDnG8-qE!)LDdTnC)Gc^X\Cjhrb+;_o7*p!K&Q1
%R=L"FYd]e`JpZG=M>>D3=eV)J5?X(,h1'[#5qK)'d2LtnndA<o=R$j4??7OIk\]cqs!90g]:j*&$^%(Ppne#"!U[V&l0g%jo]>7H
%o.L;HX1pFtbkV+YOPo_#OVi8PZHTfVIs+4gH$m\?62jBJgheXiF1bK$FcPQQVn%?hkd`;'2J`P6I(+NJ0'9>6f)^S1No>])I7ukQ
%fmb2DV_XfhgT<TYVlZ)P7F5?$<EPEVhCjBPro*)JeBdP>6rTC6he/.W1suBsF<1XPL9h^N"L:^Q!#3EU@YT=7`?ZM>o`%+DPc,Nr
%K?t_2bCA-@pq"f74'IscLnf<9:<(Im=lbp@<kY^!n%F3sEc*([$)^%]V8e^C;s(to3Wl$(^\>+8$oFn<D`Bh4#4>^/D@Cafs-T@S
%B*(LdfAbF_kLB*1Ia<F6a$:Uo,s(\)$Oh^OY8ch6s.>mVD(5*bKM[ra$lOQfHP\]]5MXst_M,]t8ie`Bh:(]t`,4[U]-mOEL5hBj
%<rI&cI;(nB=p;0\_?*O(9\m'4VpKY>qrcrPWeucK2JrQ>n]U=-g9VCu+"+>8>*H`Fg.;iJ]5dM^ZY\=[DYjB(I)61@(_.[bc/;n6
%U"N*A`=ddh*^1AC@q'=?Gs5!biLKe,0Z2qbp\+hL_aqdG\tK=1$pghY+ano(I$^6:.R(eqW4b]ETDBM@2;NETkm_DZPpR]fla^Ur
%O]`6.`Na#De#naTaIr9C,<IJ#74Fkq,<rg?5+J+L([816Nr#*_a5A=bhVDBn1=?4PCDU8B#`r3=7<naYqZebSLcVD)m#sf08.0l!
%C`J&?-Z3r)!)Ue;jtluUHN[aY2S&/O1Vl:Is'd1.A*[>m$$lO'^5FWCnE9[&Z,/mp[?l+HiU[&#4auYpD8SfdBe:VN=^Y!Qq<tE!
%"u%%'P3T5_Rc<pO11`;^Z=l:.KA7Pe])VC+)^P_D(%tSAMHmBVr<I>5_N;;e*Gn@QNU,`=gW>)?V]4=LQi=a,YdYd(FP*pZl[HO?
%3P.7=l)mM<BU?80g4tcJBI<uCESp^"(DnFmm(J>U!@JDm$na_50;9L*r)"]tdusc"WT#R6L+1!X/!27Zpne#:/2GpVBm6=R;\)*(
%;(k#+mTf^!AKi#S4tZF(E'HZm'7*$rdDmp=^J,'^rOX4a7;d7k.JS"7<AL'T[nDNM8>Ub+ieIVE9f"N,O'fKun1$euYM1MVnlK.8
%4!WX7FrG]jdOn9#oI<o-('61ZqeQ)<hVX(Z\Ka7E9E/=p!MQF[M`lb;fofb!(.4'VgoWPCKmoIT?WK:6g](p,'7'2e/8jNgWmh!p
%P`R)B%]<=1!23oG+g@R`Bmqa-[)kVli!@j&BD8UiM(J\ui6,7nMihQM:#7/+4R3cD[t5rMF`Nu$NptOf\b!!rESP^:\P8"IdWRd.
%Jf"d1?_15d#gmn]!oFj/h7QG4ES7C!CM:2Y0Y`!Z$0e>ahtO5Prb$5hs78I5cqhe^Mq`a(kE/U^nsm=29ALdTN73;)P1jlQWlCJ#
%4bdLo6Tr+(m^dlU.\WJ8B(Snk)U[U(3[#JHfDt4*LmA)kr*.?cb(Y=\8j#4bl2SXu3[u&rf-1l;oDV46R)kejVQJ!((_.<jK6Sp>
%'_CIB<FMLEa%b[c9E/oT=sCI$$=';BC:q\E$K?_/:aGt4<F)<goX]qm?"2jY?"riL0E$CshGYj!nD$m]<QF(#7m<NsBs1k`.R"b0
%W(=$=Sn@4e$sVB-pqCq#qi=BGKI[G:<QPi,Y'W!^V^,>W4'3IqgW2eu'&@/JCf_55VY:TC^4asnkmCt`4Ne(OV/aN-O:"B+`\ale
%p6B9*857j3_CrJb5(;brH\cG`%>Mm:6D>a5M.lnn(PeS["@b>K&[)ai:FQ<A+hbK0pYC=D4DF00nq%)'\'#X/UXRPSYX^VNaC2Yc
%jT9lehm;I-CZP6(haS7$=b6+,)5JWE]A:a4l(>^q?[[W__d(>WWF.r+SkY6sj0n[mO!D)I-);[=7XEIKYGQ;r4)#Sokl7l-"SLYc
%E5?_Uas<c?E#o1tFk?Th<VDZ8Y)-2Xn9k'#]TpiS4MN*eN8/kmR^&qG)f0dH#/,33qhKq?\h>C_JJSM"YqKHBVO&[3SG0qK/Ff3U
%o6j5%;scFX2V;MRDt<\"s7].oU1q5-mY[J+r:i+R5;F,LS9@?G74HNpf+@On:eZ=Eci;l%VahFJY0r_g7rh7>mXX;IQ8FiZgZCHM
%k7U]A[bXdW&8gotR.on_\EX$A7*jLiMk!#dqF-Gp0hs-k,tt)!@Bm8uIRP"H"frNcWL]sem/>DB5ctD>,DlsHL"\d;fS/[D:%99J
%p7@8'Y,mJZ,Mu2Fao/e.Idd=8*a"_6)J(sg_'OqAAHCq,eqo%'P^ac%@BpUjWfV`SE^3ijXEXVmp`>6nEcX>G>g)Q)(r0B:g8CGH
%3-%:;=Z[ZYm=j)CmA(@L#a:8PCAuobgI72r,9pF6KHBrUs"<RVa*HWYJGjgaOa54R,J7-]6EgE@$NBDk_rD'4]XcNC#a8E8V9Q.I
%o*+iJ/\ar_"I^:_/"tQsV#Z+BlHD]lVYdjmKQ$<AemjkKj^UD<PW<%QW>7lRT2WnF?E6)9!rU(_:AsPZ_ZPcj-MGDd<#90sNc'Iu
%fgM2a8YH@9QoRHZ#uD1gaRY#:@Xr^TrS)iD0iaCf4>IOVr]BGpEPb6/#<lP#ZoBs`Hh(@+L;lnlM7gJ"5<GP1=5Ou$5>Tb0pk!n>
%k$[YfdM9!X*9R`u[01bXW:hIa'f<CSX+tot^Q*!$/RK._<1q\"!TfJQmUi(:FU)6?GUY&!m,NDoZAE8tKAC8BcqX6VStMQ=;1IX2
%^/tg)b5'%?V;K@$S5oOL.2dXM)+nK:VI-L4s/uC2)%(^==1Fq_!Wg1ls'=9s!:LsdbSbX_W?sb>9l5<lf-^DPT"jQAGQ!#9L-c-<
%W<`daR!bZ\'Tj[ckf7?B$I)1SHIZAbBGC*m>QC?K)I5<#^WfS9dn(GZfZh;AUsnA&qsdm*PL;EkEXD.??3VEm?FpNs_!Z4"q1hHR
%.\<-le`hu9^CHJV2c\<;g&cNK@*3Pj'S'peP,ckgP$TlKBo-BgH@Hl,BO#@Sn<c'1e&0Ma#>u*ZgE^Vs9nGEC@$#ONH/N6_jS-1Q
%rmSnb=Uq??dL?jVk_>bK-PeJ#r&Jr#'hkRrOTQA-b$ha1OQk`aQi=al7r\fcdVoM65NN<iIpSMQnWo><_7#rALNl-r8l@KirI9&[
%G=iU-Z;OXL%6&RR+.7k]mG-<B'G"&3eX0>_6DEjATbEnfcs?\?q^8%idb\]%Bm2]]#aZ/N%=.d$G%f1Ln\Up:4ehb[L4j.[pYC>q
%I#m2GhRab&NT5C,]?p-\Q1D1R/bIN?im!o=C.AbFL=%d%Fmf7mrr$q'U)qQf5XkCid=N/s7@Y!(dL+[B%[c*E$0&@a5IpVVLud%K
%Y5_;DceTL#4'X(&41MfdU)i/_&*XU4X6k_l9s-uOaU%NqH.'0;14AWgI;U*gk5tg>ooUp-S\0!A(U]?$=9Is3a62d9/tHBb:<e2=
%V4ZRnGVF[f1F83a$/%Kc(g0;<U`!@1H%="ld,,8d_aFW06L'/eHsHTYS,V:LPkKrW]r[*l^AN2@-A*2R^1cQJA8AFlj[,8179Ab@
%81La#e6Vej*`*FFPgaGJ?oatBdVK"/2q&DR<\95;7)WaeQ[j82(4.@mm6?'as(t#pZ_YeZ9pJP6%7)^TR@n:"cLX0ujKpKTVi(e*
%0%JhGKeIN!rMO9VXHhmU9Fb:pS"SeYEhaYQ>Yk!U"5>,EkWUV`3G.KZi@g-Lf#N8`s#r^l0ZT$0a&$+@bC:=BBIN*-kA83t8Nh"Y
%=1j3qg-f"ofH?Ho*kugsiUMTlbTWK8[Q*1i;]ReO'&Eu3R(a9NBuIY>3R;JK#dgPp*(f5im/:c\-P`5R+%%oO0E9l#5!`?C,;j_d
%jE_4\+k>H2`^\;4`T4SqrkfUMm/1*Qp^4C:%+A"ll14Z,;j#a@ldCRCpZPSLrQt%4o5Fp#pTsb+r9#+]2`_qb8ufpM[\@>WFKO)'
%7]NR-foQ<gDJ<-4-.dPDVZ4u'k;28NS*\l(1SFGm`&a_19A\I,f&N#!L[im`_^0+l-1[r-n)I!k$L(END4C&PXar_"%."A^fd6KT
%S3lUWItmm5jXrilS_&+8n,L;c#oI<?!=fh`LGSS<APQCb6^Y7c.9.u>/\!G$Nf7'Tlf%r^c7s_,]Dg\W'`TfK53eD"kX*U&#'EIL
%-d(Q22mIJgfU>,8i!M6)i9Q+lES(/E#BW:i>T4tSn'gMIRZ6bsR))Lf.=NG$B'jj,:Rilb?sYmeB!U3o5C7l!cIq6!5jE+A]mGC;
%UXCQG.O$39F7b.+01[C\]Tpe`;J*E2[QjZhm!-Ca2[9cP/FncCH=LSen.lflY.oYRAR%k<\+]Slf)=%"\Ej0;6n+pWNqJp[(O5kK
%]t,AM>l2LNf^#d`P=cQS*o9'Tm<]oSZhsb+"+!R[)*pmEkNMeO(Ji-J/crs$@'Yf/l6cd41R0K1a7fa6]']L;GYWZq=C1^8YOO`0
%'cESj>dV@%T[k^3F*_fNq##1PjihS2S1Phto`*kN/MgED(q8(+3*=ct5e$LW&W\bXUoe&43kaTf"ktRS@$B`nIJ7[?M)qr$7u=F#
%]Z-<<XK1oFnX0usm,c1fUC!d!f@p7>9,fo*3+$p^rMPGB;F*_3\=%lm(KYFI9U@OJ@-\Za9TEF@K-?a^.7#;!VET%Ps4`(pGL0iW
%HI1\lngH-r/#..DkNr$s6_+(s0Fh&0qfP'9l2/AN8Xr5qWZooDhZieuG-`Eu56/l:=I#7+G72mLRBH0m*`md[Y5buI,hc#J*\LOq
%1r'7b3J<0[?[?m*b-oL=(lN!IRM2*+95S\_b3jQ(rMKn-YA+J2!P+j'(b907[MRQ#"IQ;l&*k$4M;Is<'LLqTg%2BH[fJX%jgTFp
%;B%rVO_CW"&N%8I2*tkf5fpqQO;=#8/^<qbHi2=jVjBIV.N1:f6:T'-V3ts5X`gN+C6idDb'Z1s]/*-f)_Ie,6,GNf_7T^(Q[;CL
%G(^?IKDkAuPs_u=9_F*U=fTuNq3](AD#&>=AX>a%?0<:Nc?"krrJ(`N>Abk)+-55Uku`:F-3DCcKKk42s.3^?ILab%?[R[AhVVrn
%,$VU%U0L]Zi4R=M<.CZsN!Y,JEN;>o>^C",X*ud,=#b]]s5+pEs8I63okWnS\/W@N2d2M@N'2pn)))-lMh97ZCIhNmCFUG?B)tW[
%WpF%U`pf].pT<upY\+I-&Q9Q-EN>sgpLYe(a"RD+,u6GH4S<@ADDDur/\XG`Jb)dTY(Ke9[*sdRO4j/8iH<br^Zk_>cK0P*/5$Et
%H#i"kT7\g:kN-6I^#[m$V40qj!e1dV;+[2[T0IZlpnmf+5K>;Of=o8r?iq?$pmZ<$Sk?>?*l?;;Tu?-WC%pD&Z/l?*^N+S9;7uS,
%56&=rf-s"4X2(+FF5q;JNPC\;0*1Ut0iDbAhbs&UW%XU[%!rj(o%6hLqUth^]"e3%!t)^b@o<>2Nd;*2C$+!!L=mb8^r#cop(&%"
%88>tL4jbFu`N71nrndnoAoT!tP-54cgR%pm-E)IApEN]5*gSDb>%:n-eY7.k0-.L5r]dm7$??/A(a:@6FgE^YA$empR(1^IbpsLk
%(Z+h17gWB'rRc/smC>XBpA^P'[eIPZm#NQhBms5G:dPt9(B.?=5Y<`/g+Ds2XhF)S9oW44BV!ZGGhdNC2CSVQ3:.eAYG+Vi%!X^$
%HFoEe$>Re+d55RFVq3Db"4hq#52Z&5fk#>ePq=.Ll`d8@8a2Qrh*.!-@Jco(*g"Ft%o/FE(!`O:'Bu\"f+C/S3[ld1_u^$f31iuW
%PZ1k[eaId<k30^TqfN9V2ptH1HWL/PpE/8$TOLuU$3PnW1_TU%pWK;n%u$mYlgs`k[sOWeZs?`^Dug_$Se6"b%)(p*D2Q1hE0TR&
%8$f$7TTXaM&cdil?_D$qFAo$8@3A`MF-A:,?FPl54oS[[+5F83Li.'$S2slo&t%KBWB:7LSV+pTbHR9!`Ks(OHWA1-co%*#mQ\$l
%6!<!kCBG^'S7Rd">8Eu<;N$51eV7VAb;=dqoMR)gb3ot-^?bcH8t>Shj)_BUV!P/5#2;[=-Kbf:K3H+uea_m8O?>/EKY-)*]u0oT
%hLc-uCK`ts`kG\2*Y]H_@HTX!Bp?1uZcXGN8;6>Bq6'Jdd0,qE@XO!YWXHZ<]6O&j2B:%f4p-P*=glZBa>DFu/<0u\h=^g,nYG@'
%Se;St*u-l3:uE70]c_(br)mWH[#<(actitiMpG=<jRGnCD^5,VpHpAEr#KjU?`STJJ&V"_mC"\.k;,L$q>FF_Xq][as4Iu1$n0YU
%Yk<?Z4UC,+c.u9]+PoU-(I/+i@1M]hS%PC#8dJDkVZ4+5idSm)%Y%!@d6O>5.\f4m*CBltJ+bP8kA)><nG*^Kkk]o1\EX%2,79)H
%a5OS!:6]$190hfC^>IUM5b%pWH@#%T95K^WcP\maL7r,$&gdP)qqGdN;uWS5%bMs>7htU5'O%l)X+h-@?$lS0.0Q?C*D$\TUVY@A
%ECm_*s3m_L[iiKnT(a##7cYMZgA?D!C?p0T%JnA6$94klO6oWm.B@(WCHR(1rbXoo]-n>/i.siE),N#EC>*=/7'qjZK'%)25O[1O
%CHsu!e]0?!IkZES-Noij&R4A&-)TfOs%Tk<9.p+pgj&>hii3,2cX*sZ:^UjWFo:J$,7t8f3W$7T8a3=lE\b;e7uoGSf@klELnfV.
%!>7'T&VM7s>m&GfSH*li^J9U)c*5BY'KGEg7K_VsQXT-TH2QGCGAW8?/M1*`=7HOb[OJiDG5p5!enDLf%1%;rNT`@/>_Q)/.(l8J
%K9NJ]^i3pmPsWpoG8<Oq5u3DJrj2@.iU"X>#Xeg<cCX"5p/eY\EO%tgJO!O59B%rJVuh5);o\sB_gNukrp9[&j#K4!0_cuV.G8=_
%+NFZVHX<r.KS/u]W8?1uF%[]>_W3Oi.Y3H3pA[%FYaUjI3d:<6oF).2jPnD.X$lt+U6e1IcrrRT-$U@Yh9A*'_1up>s6P9QKXMn$
%J?i*d&JOq9&<moB,mc$n\dCOH;Zd.d7r$g1`Z5Nl7Vn@X\pk_rR]5"^)+Fc;*)Jq'df<,;<sNRC5?/T:dVp>COa+!,/3SPEIC6]Q
%s2+pG>a0du.+)lXeSOYt$0R?Te?_1fAQ$qK,;T^=!peOSggTZ_IiD4_mMSFrk2_IXBA&V40Sl-<$1IN-F5\kH=ClBC!?H4lV$nE[
%o`*SFL$e9Yjj*q[lbcbf!sSGT@d%bQnKp;9TB\b#j%G0Z2/o$c_3E+A_a2FNs0!Z)rbTSF7E&ctq8Yh1ir1!q=nX5#3hFfq]n,nF
%dP[R!N0(a=s2.bL(uoIo]DOdMZ%k-nBhTOU@[RTE;FY[B(baMq3"I("IK?s(Cg.\2ci2haB\tHfX%aX[g2ik%YUni(r3d<M?``IR
%%Ld?UoDY^.3b6W-1eM]_s6q#IP-VbF,kt/f"<_S+]5q`2QM<;!)Qj/ZlTAaC5D*Zb),[#3oUa)VrP-V)EuB8P4>/<TpcBF5&N(6#
%N0O*^E3iH3Oi)Of,R9BkBA7:t+.f2h[oHd"G9XXZ6]_^XH&p3&#HM/"Acc.VDe1m,rnK)X%K+oXgB='7'fmYG0?aTo"8deH4k)6q
%G@!ObZ`,b?kNJflVi19-.b\2.T,pehH<WdfBsFaXF=]:)lB):"6X(hX$oZ;dW*N.@IqUoi<l:m)\pkgK>oY8D%P$BLHMhA-34`<6
%'Y;F/`\+XA)$0,!10f(Y\O;0j])V8O7mb/<jgHbW.qk)*Hj"H"Ub!jd-S6GdlU1ZIb*C<tFm'>4\F9B5[3Oum2%9TBbCKcsP:<\9
%g<huoU;W>tYKo1PWIk/$Y_cZX&6>p%hbEj;N^6GU*)q<eHU&k#,tOu-(cRUcF'>EASBI+U#U7qk$t=sc"F&>ngZ4%0SIgj7Wo])i
%i2*5+,&3W@MA;3@g(!TJ\jG=Bl6(E-CCe#@rmN%SF>ek2gNC0G['*"4UED3*#T0[SUiccYck8l>?m<qZ5mQ!WV8+2/IiltLGdu]u
%R'g74LfG:Im7`=B/rdI*@i!FqclrD'UsZRiYjQi;n7\PVW3#O\Jg[kaQQt[69(KJPjA\MV4LA^;D3kjSo4YT=_16:t=NID4h7jCH
%[*K4_2">dS,Rj\APWcuN8u-BN:=#>\cQ=sA=g7Q0.3RRZ2_mO7qYt[4\OlMTq*ZJ^J<3b*LB(HjV!fs+(dOQp8.X:"lfqA"(kg3;
%!SR)?TDcO^3M.Nt,_1nG0c#=V=*BDed<njhOliU]W>g[5ZJE7,GMRa4a^e&1q/ROLB#oW1Ra5X9\O6FUFWr/uA>%)L1Mh[PcWR^n
%`lQK_hfDJB8'^s/d_oK%"0lgT"O0LO-.,I8r:=A0f26fTrTo55^$5I46eV/mI#V98nk6*BCP_\*d;YJ@dfDX?CO_#Nf7;k&qn*>X
%n%*uf9G%,WNg:"&5j3P;2@Lond6>^Ypqen&e*"1j97q[OM-Aj5F"C+iTDa7a5]HsG/J,q.^X16LG\?n;_Y<=l@H4@3Ho_@hIPu$E
%THnBr!8mGK2PMlqQXJ^(Aog]lRf99)bP&C>A&hq.ht7E+Q]2/3(?W'ZQWLsspR`I&,e>GoW.jo'hcp4M5$aSrM)7]k,P=&34eNHr
%0'iB5WBf2W%#X+OO!*4Ps/uOIJ!VFs/@PHb6/T+"PK]2=4oV82!h(bu=AjrM^[9H]\EWq/_g*f*i5mr'rkZq@H5DTUdX?+'/r$X/
%5**WZ7$rud);Y)sU<`*.GQ#8ckAeAUC%l[^)%a=qdfn+U^'N!U)piI2/9PA#BWoiJ69bLBhtI*E8+aRr,67DOb2kjIU1]n!)Y@$D
%2<_V[IGrW+B2l\$-fbPn*f`5^#AF`G4^h]=mmlj81E#@`8_NSG&qC&!^8d5?r\%sBUo[,%m""lXhG8%_oYoZbI(nkF+&:tu5h?Pa
%&IedOphbpjH]9C7g/k*QT'W5M!-0V\o]NRpWYWjGWoQnCO+4;4q6)7Pn*s\\U[\r*'L^K,8ljtSoD$WE,>n>1Wrlg@>tabRBC+r%
%qL:R[!!fGs8.-,dr:DR[6f9N4HK*D#2[OorHDC0L;CJ4F@=eIBr*S:8r`*+jkMdqBLO_n-9Lb+[BWe*%.kM(%lI``&;+T"UP8c^9
%caabPDYno&9\b+#&E<0r+k=(@`47O&BgF)Bei%b)MBO0+:$HRt(@A!ncRgeph-0!=f)<1eTREC]E5D*..TDCsZS3QA9)NDDfCS/q
%r86u>s3(N`+IKP&#Gduq')T=6lq(IhbI=Ol^0^kJ7dN3XD@k?D5m7,Ps(tNXO'FP[e.9i0(k=_Jc4<"_V,5R=L?QZsf&j@KkJoKq
%4M#EVs6LXk)ITcFiF'^Z``6t>;NVs9aZ]QIhA$4a3f`"McQfr-I/YV*hXpi>+.0TPnN"iZ?iJk18/0LIb?XKr!RK0r)2hg_hQ)\C
%B0>?kpgQJbs6tgGqOl:ZYem[l5HseaLP<sl[Z"H%5U%K;-+=L^L$+Kg$m;BK"C$Ki,]C8D)pjR>:T#;@?iGZ<V=W#nV*iFhrDkpr
%<1[5q6;"UW[LKAn.JMY@s1*"4)3N(@%4*cU#WR1\60^H3'eU)87Jf@N#hJ$9dHdS:%C`N?nQkl2fsU&<,/>6f)\2(bCR$'rVADL0
%0H,URBaa283rR$Hm&7@LedQoE4^#"]rP)&6\@HFf8G'r\F6>QMaog0\a6HD5Pn)Ol;jQLBH)1+VXQJu"Is?YZ3%G:tW;$dn!OC>q
%.@`#N&fcImJYSM,@V7U]2@d4:0As;=\']jlKsbM*SE]jr\C6laW2$KXitA='_?M*em>c^?[^>MTo7-K6_)2GTgG,E.\hCu,H1jae
%HB4mFn@TBp9iW_oMp<hkq2EOn:l<c">CZAGR3dT>Q2OXd"A0+;V[BmX`^o>OO;en5<4mQQB8Y3;S`s=+rfjkVj-Tc&-3Y*9C\TIA
%.Xnq=(YK*>*tdKV`HcYfgsnc*hT&u$m:h%()9[r-hESZmTO+nH.0;B`n:0q.#,QokH'Wt05\CnkMYcKPUE$7M'0#f2l+QE_IE.e]
%DoHcG%iSFW(A:0>4n]\WN3-pdr`DpT`%CU&)>?Q<^?bgJOVZGm9U4F@F@(MNE68_si7VE\SRjB-_?/r>3(VDGK4ISN,<+Gn#?h;%
%m/FUpo7JgH0<;kd\G@^5DmbNLdG3#'m89[kmJ_`b(,VT*iqJUVo]<oo-9:;2>>&rLT,0<iUA[`6'3-Ge$2jV,Qeh<6RHk:0R-%BN
%ZlV(2\tU7g_"X2_!L`bpb?+o!QIrT2r++P_nVKTFO'ha5]?W6K39`HRd6IU]I['oTL?1oMX\Fg<<7t!W!h/!>O2586"\ATuqbIIS
%778'UdqL-[[AN,M3;."goF`/Q/hO1P<&>@cE5OR]*t!O%_mR,Bs#p4MEJD>O(."?hiN8",J%T#^[R4q`HHrqpT'oYh&Wo@ZXZ7G?
%qYtLI"rj^(!o.>t4*a^=9OKBXY@*8Hcb^oIk+9\T+>7*!B2j_lb?aj\',5S246h"47t8't0A:?kIT8E57)b)=EHt^SQD$cpl2nHn
%Is+)N5^LNA&)%P,M$qncoB$_\_pHeM/V@7?Vnu]d-m_7,=ZmFaea$N8DZ`U3%+RomfPXJ>.#mZ+S`8mRgI?)c1/i7(=e0CP`q>Yj
%'ZlE*hEO/lJ7Z>r?KHe<j`YKr5[UC%K`%=LT;2'jB18:kC[c<r7m-@Fo@L7Ck%N<+D2.P.\c&a(aE(62fKQ]!X,\>sc6,NC`N4Nl
%+e6O3Qi933S9kWqJ"fnP^'C+!PE3uc]N,u-J>Z0@q)gm.MCF@(ggeaVIZ[NH\pk[F]ttFVJ$pf9qf7%V!%:g+H9IjU&%,b22*9$D
%B%e&&p9+E+O!eW2;?MT+)2m)rCReh-!JPW#r^U08K#EW0dRBndTlUQ&>jB@RrP+?UGt@O5cZo_@Xq)`GR5=e-?$JLsVXgRu'SB/l
%''+J-mHS!WT,gc9U`;EM_4$`;NZXoH8l2?N!^D,^0]eg^J1u!j0gb&6Ce]q6+O-N5!r:OJl[Zk&UalG>CdE_9^sc2oa@IkXniCiU
%LO\/ldaGWkN;RLM2#XcT&!&'eIjNJFoGVWcr'"Mj'S5F4r/M1*5JIM!FH.lr?/UMjUc:S'\!PEjli1f]k9g&0s/pWro'['`%`'WU
%$k?6n,n%`=LW[T^a89m`Ge:Te5<PY_4r(3@kAF@B21`@M'9[k+6!L+1n2psb@E-88N#8n7I@iT-=mJ<LIiD7p\Sd;>O<6ZF#Un\N
%aagm-WCF2RMm,3<:-Dt@b:,ta"jWOVs6Ta6$bdmi"FTB@r*j@rq4#4S_fG*0iF%^Ee,h+/acSETKYr__caV3W=$'M[7ik!OVB0'q
%G0HMiY0DSY5!<EO@piHKAsoZEiPY)ps6sE^bA7VUUM-erF2GdrFQ<q,UB'I&KK#2sA1u>i/$MS6*(t26BCBcV=[4g*L_P4XlQ4:W
%`+<T"@p"5-\=F*uHH^F`51a"AW`Jql(j4[,s69',\>W*GVuRmPZ<ChuT_@"XZ$k5=,BYSQ[chAYAV5H+-kWeeS,V;7'M+8$dg__J
%^!'$QbbtuG^""n`2pF=Z1uTLT(1oE%GY#LeWd`RuLBeMIoI<p&fIlSpmK?@D\cI*"4\H0X,'u"WGgnTl.M*$+h<[#9E&ZUfO6?+r
%Op2BgV6PWeghp>hc:G9I.OU"=ctGWP+^hp,nEB"4GJ!,=F'19>E#hk+COj)b9L*rCp/HB^'Ri(']Oohb6NXc.aa'0,O\%J]3Jq_N
%s%&H7,#Z$UUJoi"#q-hA+TZ-8q8[bh8F;=lLNa7@$nqN@aOC]`O*FFUo`$g"!.=$S%r1Ygs75%fg@*Er=]#_.mS&r6J@K4,^_!l"
%cilD>mJkX48m*-$66$HGL=b?,$9_:E9@WhVTe;UNCgf&97[.AF$$1_l6g(?HpF)lV3g%"u>>.B"Aetph3QNum8j)"4"?^>5%e0;3
%`[PjPMD=^.s.:?0:e506<@GbZ3#4JoBab#>YqLN!guhYp4o<2$7!M^RUZL\%MYb']r\g3T:]>loFkX`a:RPFs][t$fbqqD/Ht7H<
%a$ias`I)]JGMRan0TgPD_Wq4r3@q!0[>D&5'2XmnRT&/".Tem"=s?u<4Kna!PnL;NY)iVLrpA918@?5d+M2aY+n0](PDffEPIVCP
%#$ulA6M@I?MmoEQ)r><\k14DDT2.i(+t4UaiO4$*/'f]p'Mbt/j8`Jr)2IjS3$n<"V?(5R9]tdH]DU@\HPQ[^FU<+#0"l9JcZONo
%iI+jWUL`0Nl(_hB!9-u-a+jo%pp9_05FDKLcQ\&Bkn!d>s'O-kaR/FGQ9\$$8g^QDCrs%Ob@"IkU.-gIm>60'b"_7tBjW=.XZbjM
%s4:VW-XEh:SAV6EA]sHm3+!cV?XIRdQ4YZ%mB"dg@rApYm&]XeSe1,f(oF.O9J--*K[ah)Rh?o3#BR\N/Mk0PLX4*g#*SCE:C[?$
%s0i"t9Od[Tfa.0Gnt-q&BAE2)M>=eE7cYGJM-D02lPV,S=NW>iESp_M`tL?%/n"lR$Ea\]&R?8l,n(uk<S0CWS>B_KRnRZlaDs;B
%hY$n,T(USKQ*@Dre4enI&T4-a3#YEdc@gblT,I*o,PJVSjgVpQGW`kY_g/l9+[kAD&QYJ5#EQqSi!i>cS*+$o>Pt)Kf!*)'KX5sQ
%s8.&l=QG%h\LknFQ<YIg=q^.Pd^gN\W_m'TY(>?=?rmT(ZLbXl])V8EG%aar>d"Ge_s]B`@uV_XnhBFj3BUc7Z$a8&O=^(kb<RJq
%o/GL?N@#3l]7a+S;*[]&'-KZZT(Mg/nrsnZ(lS#@VSub"'7cu6V=hIg5J>hY.`C^lgLNtm?MW_l6\(AR+jj:6%0F.&ULr)6^)-W_
%^>Rme\pp?B8>$:4B@$7Pp&1,9eXV+pW7Wkkg*q8j$Q*$U"nA(c&e.'Ps6sFA^'r"Yd#Bk%Zo"?ZNR2d/g05I7M"5\t7XN:iCd4^8
%NILT:dr,#3)c#==GPf&f&\k%H@bXbi'Lh'O%n,9<$UFUZd]E9V]3/q3VYa."./XdVEe^OSXo[@q>[Y](_%0/Ag'ak\Zc@3&OO\Nc
%RnG'cVYg,<4p?L[JoBu.Ch=Z9\1K@812)0YNenO$0<[5cKq!<nh/rYTd=`E'eaSN!ad<clT']LbS:UP>KdObWTO,Zs+&>l`K:qP_
%$Jb=S2Ol.;f@:r_ChIRA^o2AP)r(k;/`j$[^C"Y!0;IPheHHaPiFi1_hE?eP(f8fb+XHs:1H7UrE,s]kOVRALSqktM`kkNg"9.jm
%W!gB8U\hOjA<K2-%PU,`Z1[5P.U3eG)A[W3`CZj'OEO`QFEtUf*^bHs&9#2\n8P+D0<&?DWJJgIj_,!lAXMO"M'SI:%Mbl"2ne^R
%YYQ\t\Nl'.WO]Y?hZe2kIiYuNkgF>Cnt4H9<7M).384[1Benrp"S8]3hq?pP[,"i5TJt\VqJNZ5#u,[#rNrpfmRD=krW2IkQD)uO
%3E&UCIcPD=>\#<S4t"Mk-H8d[hsX%HLRV>d?60>WX]:?#$P)lX%''3jo1>J<$FU>V[1e$2]<WO7s24C)%lR3S1E)Lg_*I'`S(A@,
%([YEX<7/G'/9]C1/p$M-++Rip!Qj+QDu+t]]fc2,L%BqkCb`0jOJ@#q,6Er/H+\el$D/j/Vh&!Md<`b\+e7?h'p8i8giWR?^VbPU
%W7B$Xk'&P!.=n1=1$I,dg#BuBG:Gm;2CJtOR##jmJ`G(tQ7cL)?i#8CfG(sRKH.r7#g*R%rjLljR&LSS&/(bcgGuFX'a(un_u:"B
%rRq3`[u/1t?++)g.urEk:m?ml!jPu[+_[5!ia<WT@M8teC4[185p4tUs#-Um&_&TB*nE+>I$aff*^hHG`EWLuWKlsldENPe+@n"f
%c/3jIE&&1dJYF"eNdY0a"q2HX@fh*r\$S@7,dhJ<+8(m/m<s7_J_D1Trh$m=V./D6AZ$e]ae>$nj`[ADr_O)>=:'XVJ$+CE7)`Da
%,4ML]dh"8qO1$,0^&JTRBBnL&-c/VhGel*J/L2;*akhCq'NYdh2AD4<!_(en!5R*#95aX(qmQSp5hF:h6tuAdjhIQ/0%s\!FRf9M
%QUD5Z8!XJb!ki2r2!V3*0"C0GF%7,?[-dKR3NmbKE<.I2IMlNrQB0k1Xp5'ggL9-8h1nA`(Y/2]pQ$9q'cu;pa9fKIhD4RFc_4&5
%;B(1`nt=Q/6Be,gm2)>S`G>@ZqmSQdCk_PBJ?4Pu4T<X8&=`ba;\-sEh3c*#;0qa%TT"D*."Mc`FT:;WL?Qrl/nf^4X\7fQa!VO-
%kX[<3Z7TZTipaMp)8`nc<ZbX"kkr'lhZaeRS-S7(H%J7r-3;VA@6Q3IUN-OX@sW`,][elnc%%GApWq\\4.O4jg7O?7DC1IN=tH'6
%TNuo%ko`siZIRep(7ucDl&^:\Phu*43gbV!"mQVeRl(t>4]cjGb^45r-qT3apKYHL;O/Wq`D>7^X'#;%pC@c](u=d[C>lfVS'.ae
%^6&F[A$?=k9Bp(;7Br0Z":)^^:,MSK@GLPT5+'N@$Q7[+rSse<<QeeLGsP@_4O/O@0/70/XQN*?T`=Jlrq*jN`qm#52V70a0>HDQ
%bK@J'1AD%XR&sPYhA'\c4QW;m>/l9Ipt>]AR;(/hB6et7NWJ8#,Gr4oBF2#Vn/V::k,3%Ogtm5=c/&'ml,d'3dC$9!ef(>4m.1J;
%qEeRU#Y+(dSSD"Vfn,!qN4j15VOTktIilrWAQ3E8n'7>cZ'6!VIa.POX%fK68PE@9O(A:C*i\qHr]_3f!8-Ur6A*="%<N?Q*kJ:-
%";UmPgfh%o[;jT/M8_VWA-Ag-#FTkdrC:=\_RuZeK:i;*)Pfr2(,ucW+)t("8D&Z>iZn8#H-V(Xa=+\fbH_HOg&Kg.!5rUgA83#i
%X62i>:Ss[%oWYZqF!+-@4n6V0CGfg4[OJ6Gj-SUe]kJWG`IeGrSUC]6<^iq)n(D'6(gPj>q'_nn2pr2d+AlA=qaWjCVYg,8>^A5O
%bY"B5YbiToeR7"4#(:LUXgE@B7X2$j>i)M_XEW:rVdmE"I[EHels%56X\Cj^D(dQn:,)Y$1nOSiXY[n'QEA0i7g,,q\poe5Sm1q4
%pVS"tO"8Z680:lR:CtBTaY*,DlXGHhWA:f.>C(lc]DqA>@e8jInG#grMdH`'`*bZ3MjETEg]rVrJD0R2PT8Ru4WlF]qXs[QrP&di
%`CGUFgoWs[_+ifS+UF;\OlD'YRbE[-#=%)L&Z>+o.]IXjJ,7$s;c?Pt(YTPeD?kB3HgUn4flM_"*kXUtjrjk,0)VWkMb+\,,4D]3
%p\R-Z=G:mMr0pam8/%ajXpPa?Z`VMh5`JPmQ8CeO(fLs[#aIW#s570)BEW#tTn5+2meE;ck;X6WBe93RPh+nrMcrs*:uKsmR`@BG
%!X$(!r?K?3*_L9rK4XaFVY9HZn4?T\7AdNGf(1L4Dj<Q^7eX<0PV5UOp.+RiR7[$oCs.)?pWkMmQ#hh1HAX-;D&dgn[+.I2I]f>#
%mor3>DS#l7dV:2>MCqE&`#++/p06l_#LT9SL$ZQ!3@,n(33a>aJ:8\V$6EEo3-Y>9%4J`82ARSOI#EMdQ_oJk;kHI)GOp8D.5WMS
%aWH_sl0(asFT:;#L!@[uj#q`Q0:o<N$q=.K9EY'f?:LR@I(-i>#?a0&Wh//$g/BoBli(``q<tUWJh"rmVASjYfijlG^SAJ)?c]nC
%@</eVm!15G]cHEeQ[nhVr]dl#&c"%$59)P="p3\_14,&$I7qR%r`+"KEXF5agc.n9hC'E"FoM8mp##e0b4*0`i0g#:J#KJ=(Z>p4
%'&Lub3EG&CIl)T\+?+\aIC='VR;HJbosFbcs"1g997reVJXVG40aKBVH?7j&hXHJ:r[Lbkl=r`#$El<=5"L`nYhj9/s6sT.?PuuD
%i8'2^^3A+P6:u0!0nUo:Ku?*sL#=UL&P1.LHO9p'+8=U+%4?=CjX'D`.p96'X^-oRoQJD6/phc-V^s:&_Q9=c(si&;(3ATNl2K.U
%0@8](_`UV;%IqB`o\,eYV38&CmG*Qqp1W&h?"tRji[pjBgiWRFq&7o*,e@/4EtM_i<<K"!EP-+4q)Z"MkD[!^eg77QW3g.Sh"Ld4
%fG=$rB>Q"PZ5Agg\%%$nQ%FQHmqH;n%`$"t-t_/,Go!rI5CVkr/\$MSrKOnYS5T=`o%uStU;J_E3bV[?14Nig>?U><MMm.hLVA8i
%s/0eAc`,9MdI0%A,#CM^`2Ag"?6FVp1amLF2l)F7/ri9!@f5PgS,]hlpZjBg1idX?N&&\%XB[/pM(%gdp:PDJ<VhBroMqS=(]f[^
%G39%t])V8E_U>5p$+28%(Y+Rd4k0m+Z9?ahYp\4b.D0c+&=/#AKpkX9OLsr<`cIZuknM[JDjTGWF2<d]7It'IjZm#i/3)WD^$"!8
%-+E2AL+Ytcs(CdB%M,0nq(]!R^2)^_U=nopXc;U$PX-;<D-snH=>Ml>YokP3E21Epe,<Kq\2P/BXeO]s#?5)5([JqV(LeFa]T5e5
%!T/%G/SW4MP<\C@pM]p.oRK9.6AF>^=WR<)Ge/ijO"&t]N*DFH/='1UrgrN=Y<KZqUG<nb]tY*@Yul(f<)iMO5<G@3'k@rD#5M;r
%8#jT\/P?MY;eM@hiaAg)qZ$&(Q7_C(fF;JQq[HXhZBCRtS;^_A](-#SkY<fu`+^UN=9qt]@Vn?@J%lGe]UKn_FW#l0gSS*_hs;*G
%UPuA*.\<s05.j!qR[nMLEK'bIrF\Wa\A)=m@6d(f^Hg@&oH@CAQFlc[4-ug,:fD*nHL+G4XHs^>?2q+g8X3sN%\Q;H@T3V\U%taf
%7#%r?S7C<\V#'f%K)t[,Qi=;9]\Dj=4J9K/Qn_*._8oft_sC4tLNMYr3:lb5:rVJ'5@6PA5SOl@%A,k:[Cbc)D*WZ"E`rUl3NNG(
%^G@YV17='T"3QPo;>?Ymq1eY/Z@@Z&ed,CRVZ.0f-p7.7-&kh?DiNsW$=@k*oI.Esd@p8BGtAFd38Ff3j1:E2p&?qEJ.'I5&'nAp
%?BfkT$WpP,c\R2(4h%!r.Ja-k0BUZhV"XSbhfSnO!<k62`)%a"l"Yr+"E\_<?Y''DOb0Npr?lOi/U_2\f_]Y6"1)n#GQ#8d.-,8)
%),T8dQrtW_qGi3";gPE8!b&AlZ$/,W/EOS/b+qS7R509Hs+dL#llBnmE))sa,5tQi+OL$kc?n+r1_a6c6*qUi*QXh`^uHi&+kg5b
%DtA#O)lY:mG2$0E;]..s_ROp\6'a[;(a>mUfk&#6W;#'N1&N8rCCLa6VZ.0&:dc@&P\jG)JDsb9B(Fp?kApmqPRMlHO!^%a_d.*(
%Se,)`j8E36Dq"9ICHBd/rec([XLeAB^jFo6\np8Y%3Of+kN453[[KdhH2Q+hLPHJN'ko_EWdAVQ*)^Ek]**_[[/mqo0"X_p)c$"g
%!%C--dDmA1j*UK*mr-)M:kP=8J\$nGqma(#"qB6ZJ8LX\(S5Y`T)D"H$31,5?"Al]])VC_A19Va>=o2\)&KkO%dN^U$l<lW?*j\V
%Ia05"BN@srpg&_XHi2=jgG4O4hPnO\g:G73!ZjO\fTH4L/3XbY4AJ*FGGhZWJ9'(\('(0WqKLQkVg$BATu;JjfLVqBro5.=+"@PC
%2TU>5@\<PoF5"XWU;5<Bn36%Q/3X$&rng0Z"rHjgJnuV%.UUkb2]go(iI?SH0-ombUYB,rbE@P7Rbt/Nq3eko5J6!\&urH]8;DC&
%Amdi2ZmNQmEB_<lcehk-I>efNnj>a^)M#e;]^,Q6ag8&t,u1]4]=h885L2?l*s*=Z)H6?=03UJM&N9/_`7&GUR(RnGdf&@Toe(g>
%8XOJp&I(5iP+Y92I''p[73a7]ccbYa^rkgH65aXu:A1"\o"Fqp$/39!_II0jL%m`foh9>\QKl;Z[!eOP;Og(1DN[WK"IXN4df5(U
%msm&b0aFXF'M"Ci8C?T2c%)/"FsD]G5<84f&cI7cc<eGbR%WW]Mr:K4[h2'b?SFj9%Ti,Xpq&/qboG?sXN`n@3Quo\6kO[G;7.(Q
%jK1'5R@i;bG_SOr7q.,BYaLtOM`#AYo;EHfQ=S##.8o-=jf&?p:$8nsC>++#Hee8n2P<QsAc"TI<*MdX"c)!8gAUT`KHfCm]N.Ae
%3p$qcPW94Jl$dVumeZtU'J0rZGWrC#/cXqi<b76s]Q):Te=2Q"GV,8P=d).AI(%(Ln@@l`I=`N`g_L(]3$/0MGpka:EPIKu+=\7g
%7jT5*;R6U6HacF_]o#F+]mi(IpH85r?1[6lABUXu-cd=*g[_jfUbum*K$q9D7j6C;j^O1LBkg@dh7ofPC.U,t4"R^c?iIYeMn-qE
%nPYt9,n,Cgb_XI%]mTH[#CTo/j(7efrsoVg`#oH6;L6T+5o6)]bEW`#Y(]?=:8ZSqA8GJuU;rZ2G8?tH*kugs2P:W?<4R%D4J$(A
%p'/@?dG;qtiUM'[VE5r4;-&%oO/pm'nZ;cDqr^JUfR(3H2o+$>Ni#TG%*rDF@Lm3Z08S`EY2MK$XnLcY_KF?+pX*f*F?aB/MoIeE
%(4]oi5$`Q%#a>CF(XFZCB+Y[g_gHaih":X"!@<K"2(d`0h8*(.f#%FdCAYH*>E\'YG<u7ammW:MW60HNap/f#Nq!8\"NHhfW0(rp
%C!=fZ63#fL@RW[Seug(edBI=u]&UsSQ'IW$aB0$)cK2s+cr(L5iP;Tcc2f>"CM1n%`G@d(O!>!mhfXd\lL?B((^3b#=bf1L3O7hK
%K74m*U6TLZ]QG"q4c5()#7hpK^NW'Rao`<d7WN/oD%SuJk.o.ldUL*kAWVENdaiFt51or^U0BdAiMf<XlJmC1Yio2`J!EQn:]4GI
%1dj_@4/Ma<.Ke/=E/V+RZ9il@[C?3HH8rgCqDSq_"PA'1UYJ;*Z2p:.09IQX'Hg^tGju.dKL?Q/K>lfsI-"s'W8E=Cd:mn$A$!,@
%r2scA5<+u\3X*7liX,#.g`f0"U00"@ZupS=df8_9`DrGhp7RC^e_[8%/M?3OLlRj.AMo%raOn3=q:^gO?8>d#rIX`k4Kk))iZ,p9
%"D.V_hd-(LHf%pIg;[(5[Y:HjH(VGZ4%Sp`CY&>^qg1gh@hTiX==C*JA0f5$Eg+W"!F)KOfMR/+-^J:nbL8_4b9jJ55O,SPAE$\`
%gMinFP<VK<$i+nD=>P(7GY1?C[E0J!KZ7)/!-V%Y7E)uOGrW"Mh`NdBdpf03Um$lb`jW^ChC[F);go,&3*>&>SieI=`f;uNd>%C3
%0hO[oha[4Ka_6CPVEA1WqQkGsnIqu^>LW/&ZTc@$bp)h>R*^*FS?dp"HWL..d:C$KQP?=EWB7#^$8CEW3.nJ<'Nf=CU^M7d<ci3p
%#`TS_oN=uT\%rbBW+%i>!;qd;oeI,(]VANSGMV)]XUM8B=>"rAN1T\;a("Fcec5%<c'B[Yf;:>rQ`NJZOQ2d?"`6$3S=(\Yk/o#:
%jK5RDbbse0rMk;c:_\8T9Y!RLHa]ggZI\X3k@o::&.^Um=%fSqh**Wd4tR*,62d:.o9f6fY9BZ:SBELP'1^\F^$`i?G9Z?-TWXM_
%5*nAT:kS-c94!)E"o\=55IJkI'VmlClOM;*A0I'Rf_;UC?BuiMPu5TR`Y2/q)&C:9fiNRi:&UR%'4?m\JOlR:%3kt=-UGO$_YREA
%n_5;'NKI3`&9>r):sqWV=9).Z.sk1/%;4s:\+h-eV%Q&eWP:MBIttm_V@MMq8Ll*rZ6Xe@aj@dU_YRV?=SSrn5<k`hpTKFWpT^($
%4n-1@&H,:]4bimEmcE&2"9%\2K5S[S=j.j:&e(_!I,VH."/f*IEb!`RTPuoK9>%G0dj6fJPkf8_d"D2>$\`-K-N;@9Co(:&,a&*q
%>$Y)ZZ%QWhg/[hHWCkTu@8\QrMY15mW#c-l^Zth8-hG*%0XE#Yal$Q*3h-QeK-RfI%OEdTe\qb;qeSRrQ:5Hgk%pj^62U!#[MYoD
%rSN'0?J1CQ#V9+IU4lLek\jnP&V-t"5%&VlS:DA@FBX&#XDVUe^o_i`i8Kmn3%;ji5[JWsd)UsSk>Ql.Cd8:).](m@VXiF"0j_!l
%]dfi!_Bo5fBbg;d;#d:0g^anX[3%qa1'/L080num#G=_i#YFA?$O%>G/Sp6!o-9_E;8bob_2%QVIiHa`nq*b'bK8aO5Z5Sn^12kJ
%#W^8r)+?@CKu4uhod,(DnnXi(^Mf)4L!chQeDSe[m>sRL#+&aRT"8A69Hct1Lkb77Elei`-OaU0jRlOM>LjTq_+di?P+5_R+;:P@
%7B7,%Ef>D[Gqi>=HkP1Ui<e(uCPY4?(16U-50ep46XcsZi[p@lK:@sA322+s%N1;u_8oZ1CC0/9H^,$MDjS^VJV+Kehn-P(VUq^i
%Glu4B)[5=CSd5CCD[PN#,j6qF)(8@c)R(o(lONI,$[Q?;>G(P+_g1K.L'F)OT><9kY>a=.)aV4&1V.=oZkbqYHH<Mpq:=H8r\oo%
%Go8;-$*Y!TV^CO?]UgR=o3AXh^bRbsq6DX+KQ7B0p`PWA1Y:TLqJAL6SO=C^-<]YLPQ7\^bb+usCWtnlA"$ui!I1o+-g?qn29o]3
%G'h[;^)]l%a"/6]nISpo;rt,//&,u",>(HFgFE?b/:@r`jN?3Ye@<Ef8c=!p!gN_X!sgiFXDfJuek3H+Mh\*hI_dN@3:oYlPL#te
%+$6Q$IU3g%a,(kEDatZ8O_V/A1lFM]:Z(F)7Eo[6&eRC,GWmn,/PQdD"P.CO,Mbn1^F/tu2@<itQ;#@!ad<nacYIn:g/$2Ta(iAL
%[^&R<XO+@=H3*i#^!<\LI5hg08#AmT0I4>PiI;aJR?4/om3)c0,&JS6F/+LVV[>5ja+-Os/;4>rD][,sX<<1;Mano@dl88DPjBi2
%iuC,7!64e6)'l.!VhF3O.P*]]hhDfrrB*mSS_(r8r#h=hjO8-6K^,tkDXBU<Y^3[5C]cko&,P0FT\sZ[RBUPYE*!F8P;m=ZNJB4m
%,P($oS+O@r`,]h.>t,7_"&_[VGYl02$\eRS^-`Vg^'3jLAT5]-B<lgm8@5Et+6)H4qK1Po(c$*u3`[*b62>j4ZZT5V_bDBsaL3Kh
%H&/\1+hECJ6'SsW2rTmQ_3GL@Ch9M5SidN9Gm:+P"X?1oO/"-)b7af.m#LBiIINQY\g.aTGCbkhUeLo$n2\c(K75POm?/Q,5bI\`
%Gsi6)M+$.bM6I,g&R?Ua>=p]-4DU8:-*MXD]&\Vo1Wp`fJ\0)O58ccVm2,E`,:_8)T9DQ0VV,hhG:.hGJ.pb2%m.,g3GBL(d)0>,
%,53&LPQ(;Z.,l!EXi9ri$.%&$!mCb_-<0EL(6HFt#Pi?W[Rr5"H9+P*EXPNfdf1'rjdLGd4^C]"G"0k5#B9,]LZ?>42d1$^<0WIe
%a<MAGiE9K..Q?%i?dKmmL&@LEKfPAYr_qn`lZ.nIb8ll2PK*%efI2r3\m1%1XhVlSoUu5t$OsRWhFOiV&1IRcqLo](Oq'0+>GS0m
%O@s?a--r.q6hX[Y!pR;=/=N1YrS*,0ki$jQ3qdrK!K3_o`sb@ATF)SeY:BSih&9O1f^juW?a[Xm35KUf8`i$q->3RS0e$dBoY=!"
%Nlb0:;^KA:`eb(uY=Kkj7(CE;/G.pjHQ:4\OZF@pdZGqq5R[oY-UUUS%6sp;^8"Jh>Q+W@,7AeNKNlbnYFa7YG;M*.FW07qBr%dM
%fJ@f(E5$\,Nbd,Bc/b<[=jO5dF@M-o@mj=&C`O%tj&fmr`M>Qe+d2UNcQ:Q@.1s8HZgJf9W&W:EW[eT=%hoB1TG:FC;2am7s-oo5
%>S.BHQjAjEi"BI[U+?)YALf,YR![P\cd:aH`Y^Drc?gY's4pgf?I`tX'-7cTCVcS+[Eh^eKNX4hK:9+t%/]C%?Us[VZ)1(C4`AI#
%PI5A4-hZpKcW!&AEC_F8o!9T0koRKI[03O\M`61o6DG<2i+>\@nUeW.VQ@MH-hVIAThZgP7n`/hVHR%@'IK,@39WH64="ge!Y1F4
%c`3RheH!>^K)R^4G.?KDM3&<%De5IpLm:bIS"?R%W(X(%j6)$5mrab6'=MG[D_&X"8cQ6[Yr1"2.VTbl5:CuYE<.JXk(cS6Rgp60
%QRf[s\_Ii9_]c36No3M/S#7ZD%lLFVR*ZO\8L)nG'IBMD[OKp3hCJ`CX\))-!OAun2P\<?d_F%(AC`O[)UCF&ShhP"TZLdP8#ugQ
%8LTU3;*U\>[SNi)0aO/a)eF"S:\rs28!3f$RO&bBkpr/H#XD=L-fgS"OsR`^4N(S$9[n$$6gbc+-hZ4."kLo%?0#R]Wg%]F8K)XJ
%T\T*\7%QF#_4IO>Om!\6YIp$(TCfmD5d*O02%i/a4WC@l`dK]^A$?+cI*'2%:*r<fpasVtQZGNq3+Ds6KloPXhZgH$2%i)c=rH?O
%Ku';sq)%Yd4<JcdI?&T=00.+_aJFWQX/QlkPQ!KO-qFCWW=;qBYUR^6U%$f..btS:g>`"j)G<sTUd\IDVMnno?;YZE>uoO/rbY&C
%1!E#n#KXRMnK@SRZH*.<)R_*S<m6pago[,7.H>S)(B)dciA!hulJHD9*=`R1-nKKkB*#"d-"Ohtl0q6`@C:`f"AGgiT>`;EX?(hl
%BC)Dmc#/+piulNDSuVo(N*rb^7oE]bE3idF'mS0<PmBgfoJ>N*</2@a&*i%8T[a*cCQ0%qJEk3XN._ItO%*A(A(&`oC%9[ic_@cn
%ALu!l-hZ5=?L&_LF?i\QKhq['3&kjl/,33K3g@!R(euUj?7%(Q,)T2>RG%M<s31Y7(Em0IH1iq^nhg6>$Gf.<iI"Q6"o'5\AHS'k
%#-M#N@nM[#nudH]d6,\G`cG1.<Hb*E&BoFF@mM"V@s4kg8iC\qXrPpn811tG<WAQ_;!^T//?ahl"7br;]Q#qQbI.8\?>0VK"sH.*
%+dD#ob9%Qo)s%/LZ,pAGDgNm)?OQtKn/R9Gqc*AgKq_84Dfuuiodk;laGlf:1K3>@a"%JGU\ZorR:(DQg#TG`NLD3c,i"h7VCmKY
%^e.PAacp=Sb7Z9<#k$f+#^Q.W/!&sS-duX\>rHWQa*<03X!r+i@'Y.Th^Xq\(hZurjK4NpAW\hsb%,H\FNa0!dJe$M*S;kZ4,:Z[
%QAUKmCf7;$P2g:dR=!kP(YUI^POiRGF%j[7+NNS?Eu:M@DkdVe[&K/Q;QRfD3UA!KnIcW+lAf;6nQ:%+Fu'M",EHbHpZ4^>S&Z3?
%X:3r!)TBU/(r-47E2'5,:QI+2[1#Lj/Elq)eQhf]=1L,E4fI7-'A*fZ7gdBIfc<d8A5c&LGOd3(Q+mM(R`8VUH7JOA6uI@uPQ(<:
%-VCD:.^jC&E*%/UlH%[mQ0[i,ZjfTp57bkF^j<%>&WktAVRE+tLr5GU32610ffHAXPM3c<%)</"49/GbAgLn<9&UOB<q-XklC.P(
%CG*NG=@ll-^NhYiKj::)!n,TT(0M$Oo-AOW)HTQdW[9"Z(d-Bg&N/2ZC^(73^?XPZ;YF3!UOa.*Tp^9dk-=jJTW?6WI;LQAT7J$:
%jc]i0@^B3>iKNt"5EpZl(WB,KB_)/LZ;BeI\obq,L[#,cIYGFh\%t'WM6d7?C1TB`G7^oBid\XGIe&-fI1@>MP!j]GaYj`UdG(Wr
%?ek\N-3FW!S9XG!_g@YD!mknh3m6K_qL<K#rrpC$]2_?*DGZ)ETHkt;R@K@OYARYN"'p_?e;_P2JbG1Pk3%s-Dncd1r6]7!hujtj
%r?&-6-sm-+T2JudNF1G'-()AMd^5g$;iV.[`o%-T?eJ%_]]tQA6=PW`ZTtb,OiRfr1@#0>aX1"@&"YElguNQr="kIWYARKmB=5kX
%T`7M@[i_a#JpaS4i/GSsIHm4L_nrL(&)RP_EBb;oOe[n5%qD>$,`'!6*qaH,01)7#@s3<5$5oHH7WM6uUbriJ9G(kl(dE]%T,)<t
%)e2GZ3Uk*-7Fm\%pFWb0P'-05$H&K*T`Y#i@fTqa^P5_7@ngi-!78E.cN)EaP$j1=ZrH<\ol!uGorQA/".Gg;R[_-2PUBjd[MV$[
%+u:8-!%b<P7VBp'r.I>gLO!$po^CCcA:0nl:)R(;l2$s*k9E#1fmO4:<Fr_XF/j6OU0ke)`Jpi-S#m4thn.107KnbnKO]:uXs+0"
%7"DQ%4k3,EeN'2D9#Qeu&9QKs\T@:'WS]f@aELKp(6:0m=+2Ol]IZk)i'7X8Q=H-APY_C6k/o54Ub4m1J+ImdOD*Wa!h#1kJH-nG
%/#'8aAE-Rt5-pP>6u;FnFkEOVK9I%0<?1g+s#-O#504+qc5#7j<GP_`CaS)c?8OTD*W\iQ7eU^KS_B=``kLF@DX-,gCLpbR-HY"]
%!#]cu(*&U9iMC([3NO_42^MS6K3-eIJ'arFWN^8VLnE23A_4fYd%Cj/nMk/%-EWBIJ!"d!X6aO%$;3R;\p-UK]9A?C12L"%O9bIU
%)FG^2<i\Eo:XZ@+N;![?moD"BqD<F0;6^l:+l-$P*m]$dr^m-:(Kgt/4:/WC()\G=HWhl]Ngn@'BJ<%o'D1[&%M<]m:2F5h!P2=l
%LO)e2H/Mf0P(-QRYWTS_q8.o6A.I*p<s)pJW"h0`/r48ka*Ss"PQ!M%VSj0[,8ZXBYPAlFnoDV'!\3-?X:,5d4SThc.iEYdRdJi_
%khgfW&g-[1Z;@gp5>B?BYY2BL9bN5oE"A*Ol/@[h3S%qFOdk0W*n7rM4;TdlE_iPM$+LX!k9n,r-2:D"LtEV$r;coi,66?fg_<OO
%hNGV9KDKFEE>'>i43Y<KT5tJmq>bZ0IY#Pk_.:>9H-N!%ZoJ7a5r*7"SPT+>I&8+*/JFfr)J8MR)rErk5hqg"FUtrO@od@7C,0a=
%YV)B/>8bJ5Aa\9]mIP.i39!l,ZPgLk-?X@5:WjS?df"Hs-DoF=AtkqV,8iONr&^V8PQ#d\Hiqn>=ha)T92HkcZL2uW\E"e@&:*VG
%N#,JXh<>EZVB%4'#SKi>D0XKY2u4fuL;+BqoM_A<VH+-HX.#'En["5ogA<H?m@.+oBIer58cS[h'NiLYJ/-Ubr,`0'B!h^r\$Br'
%Sn&VXJ\K@W<KsXAa]@,^dT?=8rqB[#9&n/"f[EE`KhoD9C3^J#=O-hf)2/>r+bg.aV/#FFcp!?9U!+9E-9p_O/m%O%0U;si&MMY3
%rf/pT5[peBnoasl%QPq13:5+oX#i`/MO#lCeG\fn^qhm'CrNU5AY=#!6*GXEiq61n:0gu;#S(JSC%1V9@L[91)OUJrITp=A(FNWV
%eZ,F;HET=(c+jpoPWls[FWRHc/i\&]OW\.Z$6\cqA\2<W^Y9i05Vnf"CEHm^(qsINL';I394SWNKn3cgjcA6b,I`)YB.jJ:]W0lF
%6&hC.S5mO:8q<"6=Fkj"g4F[L&_fT\>oVY$ZQE,bff29ieA$2i;4Au]-j)WQBdGCJ>09Ht_WG8]%B).QR;?$%;WMPgO2RqClO#p%
%`k_;DIWJU,&0Wt2r?.RU8MLV91?[ViOlW64$Pf"KK]5M@*BAAY3D:Le^Ni'FEfB:g'8h3)C]agOAd_ZBX6Xo_*]ams'q8mR`@6cF
%:uh0C62`^5R+G>hHY>=c<:C/L6j?tH,BU`M'C"R$pWAPY?T6t^o@#r(KDP<P-di5G&Gg]^dSb&."%;u42f^l/7^mKWCV;)%]#)-=
%l"L-DWC^tp>[NuRge[4qGiJ0^OfLJ`1Ch*-p<1m"b_IM1:U9fsfD`km"\6tI>9;jjZjtICWS:5Fh`RQ3DJ^0g-.NsrN<&q.k/H/H
%ed'C<C:>'.2j"u[I#2%-:@nIXI2bsYdqYs``X\b]7f;\qb0i#X9F[.n#7Z$5:Kh"G(ZHN[.bLFjb25:JLn?mh9IJFl??77URDGb#
%lD@bq2l^01do5eIWt+;(Ag@t@nOa>^8+gjY6$mp`8d%dt-=_0!X3B(Sk*]6Pfe%u6Ba(k8877gSL@D<U!WGm[h`RLn+@.nPlqlE<
%=B1.*lYHl)R8n8nHP1da<GC6PW9#-aZ.e'5kF_Bb".B]]Y2sk-.IQ;A)W4WuU5e_>8i80e`u4_BJ.d$=1De`.r\oldQkB#BJ9V6U
%#FG@0*?d^./H&k!LNrV#+YB?Y<&WqIB1'#J4:g_d!C]'Je;"_?(%A7q#;%QkcL$;m9;,=YS+u3tfsD;G][g+Gj@/s8#8;Ae-UV=)
%n=UR2/2tFPW5@JD[O<r-UcF5eFm_s`=g'bqo>A]9*gH,/r@flE*`=PAHq;=R[?@e$1(!Z,hC`#gns.p!ghH%U[1Ak9^Nh@V#IKZ!
%"^]&@6YX?T`N'3[JW'fo$Z`dI=!eg;5fPp@Le#na,Oe1>7_enRrbXcQ1FM-A?><9G2+SMo\ORN)I[Nf"T<ktD$#pbo7@0B@A*SBe
%s5jp\8cm7B(L`6se.G;?F(pY'.=9=aCW@-aYQadF(N=GZ3!;Mi(('W/I326!QdcEdE2r2BU?&j_b2VC!$N2+b/a4r6O4js+_0MPA
%4Gp%`SY0'Wn"-/%_=4sMV]86Q[+VD`#jQhA0nI_0m[W:SJup.[=nMt7dp,7i=8js4on+En=bA\EVU<X8!AKgX0nAL#^Hapb-Sk!#
%'Wju&96bq_rn`2/Vc[DRQnE2_kA[T/;4;&UV5Ao_W7@VRp/%`b2.J\:c=@>[fFmkLeAoBN'A>;.X>uGAEriaD>&#[:;C085BPH=%
%f)T:$217u^]^2GD;ZGnLKV(5>*c#4-/=F$oItN$MnC)0n&_K<=-3^lPH0rD_26@;8Z''F*e8O@R<3R!HK\O7W;%P2H_eQk-GUaI?
%"5)7`!FYGbqf>APT#Q51%FQZW*q[5%6p__DiQSr2`$'j[=gbQ$J#1OiX??/@j^9U-/]N^s]h>$);'`iTh^tX!OH<_sEjn!%9r[0.
%h^-%Yb't3?/sTqsn3sPO3/rT?)CYNZrlr=enin^[LMH%=odiMt>jk%[%%g#;=TN]e`.=cEVC:*eX-RsC/,8R)s#-Nq>$.pik>W6<
%I`HQ8+jAK^>^CutcQ@3f7HrA#e1)*QZe->L^Ni)*U`j<d>a(>5TqXSE;(@a7aH9=M=2$nNLY<qf"<=OsBF&?FDV7/9hZaeFO\"DP
%4[t%k54rR*jpV!(cLh[cLAMFO;@WSi$GIEe!ZD9$8q54eAd8S]fMb,j&?mk<6$LSKCUuA0JP/=1Z[<=\Ec_k;@A.[s2(_bg?p:pF
%[]et?#KTKG)1FK#Rs:m4,Qc*JSJ)!sWrk3EI#LMJI-Cbh(n'!DA,Yd2o`+aWr4?;T1]=?nro[YCnG)btr9NhOoTrDRaC"##^].sE
%hnQr*l[N9I5CK'Ba+*mZDu]e2pkPKE5Q7"A&D)ek;9A*G?ac'-n"Ul,/I!!-:0thaD)=[.#Ct$6?B[De3<!L8IfG7eZ*i$oJN=;J
%?E481]!DgS#k>MR-*-:[TnZ;O.+M-r^)k[(E5:j-5sL9A+K7-%UX&]*<Or_UX'D1'#>,_A.pcPYC1G/P,\\QFJV']4($3Ah$87mI
%WobVB2N_UsFVKM!X@dl]WGR@&i"b5,1H#bQdnVp_*p0RT8-'^>4t!nFe<^uLr-Wd0fOc\@&-acpI@-elpe@ooNIsU052^Qm*9T'N
%:Q:ep;et71H'(D]R`dUG)XI[j@BJe&$$C,`6]be7@7tHP#HYC[l[t3"21Rp0`j-;c^e6Ks1LSRL(eZ/1F]ou6G$_LBL3JK:l.QSe
%6.jh`eAL4h0Sh's&NjeWGYLd[S!YZ$@%G$/XjmXm=!p1.R3sMQK7n$1qCN%f9-c\)V-YFjE>-28T?^^E10hWqr`/.!-F`dunMh41
%n<N#YA$[J]/;<p3Yq$LeZ3,CeIb09-(m29dm`]F>&11%T1+"geS;R'\,;aSOSS@YA*tUsq"D>!E&>7fc%30gCN.MJ`9klX%0&'&0
%$NhB&r[F.bmB`M?CM-b3Iq"Wp0!(#Gk/&R[X?"RqYPM]Thr^=@5gAK8]F8hM`fs+F*8B7.j$@+HM8m7d[OjZoU[:1J27K+r[Q:%@
%RI>/%+%5A!*#A-p$uPQoOqk8UT_`!_\m[=>!CL,R'gsI<SDSIkG2B7'h,IWLXjEfbP,-#TWM;XU'RnY.H4lX+NB8VOV41L?b1fQ*
%P.ZooDI)K+2^*u:A9LEOi5%OepS!pc"$OU1a."*\Mfn92\ICpU&B>3;B]P5&F:fM<NV)mBn5IG`PpNl4M$(_;BjdNp^7h57Q#C1c
%XD.a9!Xb'3X:%@f_lcnBI2aB_(aF\D%2b_l?3)3CFBe!e]uA"$gUFJ(/`opeStBhV`3'<<^QeZ1ST+e2+Zp/3YWP+X?57:TZei,P
%,ar<!XOd9'`aN8@g6[k.T*MXTAC7VWDlHd&=OrofE7j;Mp'Cm183qrHmXUOK[^o8b..g(O28g40So4*oXOVo#4(m6tgEf7p8_k0:
%GC>7<qn7!T.2LI:6.gL&+u[@"\n<!l\"nFrM8EqK7(Ft:W7I<clZ`-l(QL_,%tMJL\"Xt)=[C,N265]Cnm#%@9sE(jAPp(;+1h%S
%&?$k@T*L?(A1k]15s_.//k.'c.[f(&#U5j$;kdMPIA*;9D4*9_PP>c[Pk$q8'T.X*i_DN$NJDHiUg7gO`]cfd@+gH4/UVP)4V7Ku
%6M;T&L2eQ6km;gEWBsL#aGVnsC*9Rq`Epi&e,Z?p.]-SDd$l?%hH`!-84&-"mOjeOW%K_HmLRc)^a:oU+InDOQCTL4Vt4!gDMM+P
%R9VR)^l(?9Ok-OVBIr"`4N_<bl4pNS0[PD(S88V:<Kqk1,1&b2/:<$O;FXEKaV]udKOGqr'iZDRoM_eeIZN+k>+Y<^9>>.*Sem55
%d0%sRgk=VY/%^BHAN*iB0&W5bco9T.W1lJcd9uE:;G"I;L8)@n14+R=P-NY?\Goe]bh`'no(XgZ6H(PMM?=5b?f.Mj&rDQ*0bTuk
%=k(Qk)+e3."=omf@0qfa,KdQ+Y?p@*k.X\PdmoR-V$Eu"@*rF(,=lW'P?qjDJZjBc.&7$o@D/#@0lC9CnB%r#DaG/$WMaG9Ea]n%
%.gF+6/FOd*TB5!Xf[%9$EtQSU1O@6qro[RYE5K`ND#i@-;aPfe^@k:B[I78"Z156KO#h2oK.u^X;;S[Aoqkb>5b5AJW/qoaLKEO*
%C.ms[32eRYOdnlW!%+&1#%3238e^E)8u[gsP*dPo_TI#UamPrCFGZSs.cAO;We;I`#WKn9rS7.1VR$9KRR@b+5>sV8Ik]BP8]AD\
%JPsAB@d;:Q*Gi>tmcq[$DiYYHZ1HPm+S>DR*BZ-`ipqU#V\PnpnE1iMb%53eZkMc08j)5_N6<HgiOqEc2(l:Go"meRI5'W(4mkre
%0AUB%FZ]53E4&QQ/^Y^8%L9E#eR$;T8$/:7i23f#Jp%K'eo2^Dfo?KZLX!Y0bmtWO"]l>4KQ@E%cXh(`q2n[r1STYu*GuGN4DjB+
%3JIE4@eG'$jOcg3%R#U(9>X7NVG[@0`5RA/&P5Cf90SS>YK'gb8N1Ks2Dhs(_qI8t2Lq>Nh$`4U@N\VrnPiJO`58Q@aEUl.&abo7
%+YJ&LFD@B715eV!Xb[cVqQ2KP3)AG2`7EXq@:S*RB#R3HDXYP.7,q,#XtYfQ2&=E8hUG#'lpI#<0oI0Jd:h0jd>PmJ_Sk.eC*D?I
%@gCHR3EXd.Y2>(F'J>hdnk&2,\5T]a'Z2qe&D(2)<b.Hl$!S]1mbEh3$!Nh%kB<-Gb*r%DR"3*CVHj8Xj(*i[GL-j9`GS?,;tS(H
%2b<Q4@XQQqO]?Rbr$4L_J1_4#(,*u82jJKQgI4Tu.d:/>rb@0b0;o(IhFoio+4mk[2qtL,@!,3>D?s:"QYcE90UIfr(,IOY@F5QR
%Gm,f[2d)os9\ZHc0KR55;D<HNWCPmJh!Gn1VURO\--E[8\AVuRCc]i/fK'S&P_paF1Y9;p(+@j?K%_X.ema_fGGEmb?E]!Sa72(R
%_f:Y.f[K4IQ=\N_a71M3(1**W\J`ro#oiaQO(7OlXl#.K/B>YVp8U!k@Ln'8olfR.n+A^I2Eig%-<"^)M#5]th9WVLHrqKriU^V!
%Jj6L3P*Q1JrmqdP`6d:Ug14f&D$kkLL8T.uNk++L&LEs-(@8ZC5aNXMmSB!8XG4ek@R\;5:Yrgu5!+r8A*[eBg)E0`h[fU)IZR_D
%A7K-m)BDZu`S>^iY=0iYAYJ^pe]O1#!%^j8@Tr\(R%4`)6C5>/S(*r=$VWg9NTT@n.<8RhV7Y[Zcm0P?nl"s_i@5iQj*]e8Q?s+]
%Fca[U+?Bs:^Y]bi8Y).*OXD@I_'m7$RS)BnS07)Yc!?77.C)+Ppd\mAn\C//::G3ebH`TQ<(gq&B\64Z_e!cA[!2S(ip%2NS,t1h
%_1[%g&nc"7aT8qf<H.6SKgCTZXYI[DkT17Q#)o]*YJVJq-c;n6Qj)Feh4S3R'G=Kg%YsKWpTc?<pk?P-_0QnU*PUfCQon%`LI_*,
%[_t'Y.<aK(b[Lfj_fT6nXtP_QTKKf;mL^\0BM`-qM*`JW_Q.tbPQqh^X'BUqg?[CSE58Rd@"`[(E?X6QPU]OK!@q71gjjN^3".'Q
%'HV[iA"FVrO20EYR^NLiq`"`*^IC62>RMMg;We;)7Yib6TM+gQ(lf_G#ks.Y5Aag9W5<O$V*#*C6ctu>#GkB1A3%c6H'"NlD[HtJ
%\kth%:s,Tt2Wh\Bf_T,(jS%`#c^-T*G*&ST/_BIqi>UpQH2B&k0$^!]:P`asEchX04)WemAcVWXh4m\)NGpK5j@!2cDA.cX)<F&I
%UKX;^:IiH[Z7^A6;<=XDgMERON%-IfE@UA_@9%j+5uJM>p)9SBg+MGDBO1D/GN"9P@RTie/LYWJ*!Z?ggXbkWUVPm*"i%E:4cHX5
%U_"kH*(,SogN8N%h:"k^?7B]5K5#N=$e%Nd\jFA/Lg#@-]B\WR366uW+P\?L^p9Z8!$nV:7=tbq2dlbPX<*(m!/+OR78jq#TB!bG
%0Z::1U[5XW%#I0?gR0DmK"?Y'+K/$G#&eh4_TE_MTMq4OkPb39D&O4iG;[IY40@Dp!;M\U%g*bV+\]Lo"faRZphlufQ=?:(2dn?Y
%g9+ij>$o$qK<-3!ct*g@&Am7Dc22;^Z"V`uYeD_TZ$3'^Z$b1%n[e)D)oFHnk=ofKWEW[E&`VNM*a(\WJoFH,TOF>+#KEgu)6;6b
%&GUXa:_lM;LKsu`eqRni-$O$fUht)UiO4oEgfAjM]!dBL:[rV$eKKkP[t#cg7kmJp!H8O9d);,5U#e1T+e?B&`5K*Ef>-rm6JrTO
%*LM6Y_t/!UJmA:l#EB@6hA6)\P@0S')ML0I,&oaH[mHI+Q:/7`EZkrYUQP[&-IQ_kc]4TV%+8;Ofdk4"d/5A[gu\$LRDB&ahSlo1
%nknL^)]krK]"s5JdmLXe2rS=PUpB$;a:K3Hq;Cib]`a*pQ;UKZk>YmC+@4PNLucEK7tFSa)>6Rr'n*Tpg>aEpZH-@NE/kM-Eu<Nj
%#1kBlM_2?$Or`abR.s+QQng8qLJ[mPoGP*N3%G)/%@Nm`2e3jPT<"j_"XJI$n&H#tU69(%"kf>@(cf5=;3J$IJ:tK&((Cfn07\Np
%/[Ue4Y_-Q'i]a(V"W6@R$#2anJ81'J+&(mC*lAd\it^bhe4*m56]a6+1khJ<67iBjqc0S7)0iOjT?c&\[Q'9jXrps(6&p;[Z,84g
%<A&G^iePDmQ%]'XLMCZjM[!\,_.8k'!CTo6%9'j6.4`c]3='?qKiMtF>La)U`O:d87]d.FH5C`=&kaF*X#A,GlV;H,%E68o<qD`l
%#7>`cB=i'Nkp(eT'V=>p*sBu!OTl:8`lA8AlIY>URQ1sm*QlGN.l6N/Yfe9H3tT>pa%[<s?'%"egY/??=ZTRF5[8[d]KtM]Z(p&N
%m1Si8#]fD&dMcHYFVJ0P<\Z[qK/!A$/rpS/&DdVcV+\>\pb#$i1>,l`<ZL1#,/W?-Xhl%4)B(7325lMOd"NTKh$mQ*MnP.f?\5`O
%&P5d&K,X&4%IhD!Fb;2f4/)h]&fND/`m=U6f!pPJ:n56\7M*UZTOiEP^h=T7!F;E[o6#h_QAlPSX3F1=&D&RmiJnbQM\S@lG<[AP
%4htmWJd[V7c.ZCs?#8glhm+CaiL2`'N4ll`NsIW&/3)^F)dl5t+M)/=7!Umk!po.VONA4^e^J8'?Iu_'KlJcujE=u:5^/d$!U\PM
%iW'_6`XXI'[8@e<&EI^h7($oB`'-SA,XCLcnH.=mb"3ZeM-#mSgl_KYKSjgI;OhPE'd0,kI)P4LI/PK*5a\U^?!j4=a)3h'0LRY^
%neLi%)4D^@i^L!n(!DID_&(;ONCuJSa!%Bk=jeJkA(fXWpPK1O6<0@,+(]'W^[?P4c>%U&c^<%J=:_WdP-+n'S$VD\Mf<9A]R\>)
%29N@=ZfHSl7]h+pDc8P6j0?@mZ+no=qDnb_+R=1T#;gNC<<5$aLKYC0qcFEa@2ZKLZ+B=ui=$3@BP?bJC![c/T`[q+qRTX\[sB'H
%*Fe\1?q,/:,aUM1JBMO!`e--PaT2m2N?'qeC)=t&=ig],?0:>t1rFIb&?OXe$87TfTuY?"%T)D%BEqWs4=poR?Om87B!<$#d]a73
%JG\B\>qM9<<GnV-El1Et(Q)o=11.c5dV7>u+e(qZ,5KPAFc+ZbPT,A#75;;0RrWlVDQ-Z;@'u?N&PZu#qX8Il$QQ0\BO@jiR/9bi
%-GH1hNg`$*+uaQ!-6?)_P2HMZ<%0605+V",Kj]0eH]=IK&\s0j19"VUWOOuQ<%)UGR3r_m;uulS/>C/+$sqM;DCb7V+;@,QE1'=/
%2$/=G`i<:UAn=,N(Oju&855"RYJsJJCu!OC@G(Hr/I1CF3=WKOn/<[7HI=:nnqC1^(9]Vm[Z<40.`eD6k6r2pYT-;0/M#b($F<HU
%Q%LfhP5[ns>7KPidlC[SI_qpUidTRmHM/c/UQMJ]2T*X-.l!!#18$^>RPG&RgI8h*Af)@5@rsKDP:hVOBI.oOj#o"t]*UPKCoXU]
%QOCGP_GkrC*)Aoo6f6r62pRmnmR0"eH+nG%oqjD`j*LgreVh]kKT(kb;WH]b.&Y>N!t=@N3-F8J#f?8f9S$Q[oG_/N.+guKA,o8Y
%$H('g2?$1BE1:Pks)sm"TI-X=:,pJY]A0938_75WB5_#t@!>2t+kLH1/^)X[o!n<W$7"09\4@"+GM9d(<Q<q"`P7kE?"3%,>KYNJ
%[Jc=grQK8R66,'3gXGLOYR]:iG^Z>bAH*!@AIuSI1gbk9MP3"g((A#g8imGm76.MI5tZO5./m@1+,_NbYm'/)R?2hj//,BL5/!"C
%/IG^C*rB=amn"lV[]Cf65cN\alKjngdG0B\Gb1oYb-+rkG5Y=A(0;YQeZB?)%QfE[7F&U4+]a8X%cbo>:,cSua\B[\4f"lZBMug7
%1*$RD&_Mfh:LU[QXtfkp]$=(2(R9p*EE$5-m@[g\rJ"/q;2.uE>^KGC5*U.p8a$5lR\V)68l?GZm3(gu9+So)4/;7gYqb1_U`*Jg
%U+bTM*4gY>-%#pHi8%+`Efh@u]N5ZI6(ig@Cat"J5-<;d]T/krqNXdRS_[Tr1mU)'+1k\oRTgm#6g-Id1T8+:?-K0M;uVqUmT++?
%'\FKPh_lDgEWW@C(E0LM\[8LGA3F$N:j[_^G-)j+>/CqOpRf?r9W(,3-@82n<r1HL`KI@thgW:?>6]gaDsJ.>`LRrU&;%JU[?j;j
%Wc8'<UY:=R"WrdIi6AcJ!CL@`\AT`UL6TTdJ:0K?9eM,(Y1ir1\:E/"n@JU*McDufP_6.I[L?:;YKf^E.EZMM`=0V9Hqo4%:`)so
%!'opF>pcab4l*8VD*H%=L-5nNj`0Js8;q&@)S9]q)@a#,YSPb7JFS+hZd.Y$pD[N_lB[J^l_mgW(OQgIGV"h1fV?SW;R)3h^7auE
%d4BZjLtB+,SXe08lDpK$c@(h/HUA(e%n>S+>a/j.+#DpiCk]CJI+N8,Hk9DT%^AA3e:nbi-OM/7UYHSlgll@D^u"EeKH@X;=7&9g
%s)aK"f&<jjWu*B.X_H6WVhKUZJNU=Bg["IKYDuJ_8J7Bfn@8$dmELlT>m=L7*^N'KLJoUCN&qb-3QS>.eY#;f(a^]@?H)#T(Ls\M
%&rsgom@%L>@PI%gF1U&k@le35p-XYCUQMYK#,XsTT2(t1\4u4*/NgD0n@Ka>>3dt$L4--"[#c]`@5-WMVhP8>H1sTGHjQ._lp[S)
%K_EMi3,LIoG)S/2/e52&(;uc@AATZm`,SF)U"o^h3SWC-75Y3.iS)nC3!eQ1''*j.$#8'eortQ8?HWH$#FM!5_\L.R5';UEe8=WO
%,%"1s:G\3UKsJjd/r1G<W'WWd-*KRrURA[fC&=HW"3eV:]EuLHM=QV<,qP.V'mD+CB4;[1-c\oTcsI?/#gG\`ZQR1?[/$^&4MTtK
%"fkCa$jm?*^;YBioAag5h;erb(QN^Wc*2mn*o3!['um!ZUk8`:Cr3]0U)Y4U8N^3lYlI]=n*oUp$ge.J(+)P)`lMg)3%h3?_Q=>7
%^,kUqj/]kRK3;H!WFSC4=`$mOKSrLVjZJ]k^nd_hU0(8i(mdjV?ZskN)eN%'"A##kV4p:k!65p4G#i*(2HFZ)C4gJ4Y!Kc_][V[;
%HQ@k`7VRJfeC;:i5mPjt.@8e4el>fcq^-Z^aPcm;Y?PR,QI(b\K8K,S2u3AG*[LM4n6%/kHR*LH"bh?XD0Iq4cYkrR<o\.2J=IK6
%_jcbLU0eFu.M]Z1*A2X,5#A(b<TRL:'m:!BmUn=/N$!L$^E&1[S9"":l;_&$X7116Z0EH,68GU\Ph*AsYZm5oQQP^Y9t=R5@mGWT
%;`MPAGb@1R"5VBjW7ECp?HXUVYTAWMM_\]/Q?sCc@'reRH=9ne$JLKHG77\2UA2LhS#NMI1-CDkCt3-^7@>*6Rt>&8TaOTg=USY'
%pqN?3bB3C.\'m_39T7qlkbqmOb$[jJIP>-jb7r3)NH-1-1-B\^a&jADcm"-?^/#G>laQF75P79Moup0Q#Hkq[`X"K*k(^58Kq^q_
%^0D(?:(p(a&Y^/rN^IN0p!P#LE?q?+o^1A\&HaPdr?s24G9,d15^WNe2l)JHDTOMeH]SPP[SLSLbaG+^$=b0P*#:f=S*^lu[b#p]
%g-3?gn<s<%Q_PBO5lP/9?o$l,gLb\<4WIB,qL[Z,b2o(*+h6JCKl/eFK;EB8)ZtM%D:Xb]N<%(%'AkC._8>';I+QiM/[pP()Z/X5
%m3R@=m>VJjg!>_-D!GSMp[Rc5O:Sc19'+P-gW/BE3HNI.Ibnq6D.aB"'OGK4gIKPDFL-C#GdDg-j(6L=[7e%(+im`?QeLqDYN,+e
%qoJ,B<\eb7.5$\D9LjOg9T36oQV*JeH*_td=oh*#KA3u1_OKd')D>l<BoTF(K3^*:h$mQ>MnP.fS"X%G9bLs?%Cl5HMnt<H;C/jg
%cjpHj5ER+K1`LTuZ.cpMK$$^A?\j5tWc@Ma'3&(#$1!!74bDFrL]]n[P112!]3;*BdSdp=I'?C#?Aq3C$<4!K<TQ]R>n>KeM7?u4
%Lud^gEgLE:/MBp5_PrWY_j=FLA388t*O*iG"I%sWa+2Qt@-2k+b&.c*DrQ05;(*?ue^k(,Xi;"FU@hr"D(erBD!qI.obr`f4$]ma
%*D*+4N^JJjd>)lb##Z)/``l]6d!6;-EA6T\^;sT_Cs!U=d8'DgE-2F",9%C"0AhSn3$#+;bpX:LdLmLVJ'C3rc'sp3Vf!47X*p:=
%J\L8slG(NE1V&,b7QY,9cBr#"2?u"S0JmG-<Nb"!@/uFj.haoQFV(_E@[b3$2)k3lS-J;#Q\="s][)R8^kc^2CJCVjIPD@.K/Mbp
%@\f')I[]c<^4f;Dd!/:^V)F:Meq^K&9%H'j>^FJY&2Q&D;Zrn&#G'.k[B<7'mCj)6P]ke?DK=KAi9ZR&>1edqogn4.gU3+tWU)fg
%J%Inm.K,)b@1]SYF&T;dfIS#b]']?#/2[k)]CmXuqX:1aR(4>4^'GY66Y/E`N3Dr%DqcPpnpWnrIau?@&ZnZQr-@oDI["?=_;Wp]
%XV5F8-oKco-sT*C5+aLt,NRnCpMmRHKC%@n9Z':X@/s.`\KS,F>/Os]4p2uEMo/StUV:u2_D4+Z+-%iuK#njbb+-)r(`)2;K?;k=
%`]c5)-,Y]K\PbDmNW[,NVf/80=8W_F]Fd0sW=.F+;R#m9ZCk9k;4S5OGkN^TKcHgE)QRip\"ttkZM!2UTb17S$@pm?.r`X&c<1^Q
%Le?9tKU_n\g]a$J<7I']EU3e%M31J>DdbF8EGDoH37o2\_DRLGL@@W.m,sVB#i?+#P/;D4oI]Dc*Q"5-F\bU8R%]YnXO=^Gj!Z(f
%PW5d$[tI;Pe"Tg=JQC@pGUDRreoHpf</<0:AKks%%2H1aq7^@W``=:-;gSsNAmWpN"!$J>=W9GmUlN-)>3j^jE/hc<!?pbsRb-R0
%=K"7I*BS3EQLVQTKuX,7;6:AS_makH.Z:RAr^'u#,#=giGlXk?>:5!%LhfGiiF!kMQ+JMaY(:1%SQX(AlL5^F7m.;=&1C:CO7KmC
%C>C"[Td_='3$3f$1DglO(kiS$f]7cDW`hbt#YE%M7Jmd:f5fOVd%84ncSm"B%MG7J)R@R__f1F@b(aqu_p"6GeZb#82;l&;@S_c+
%@@1TNXp#6/A,+.=NA,'lRp#:^3_KKG)Clar*T`#iHP5kBPo1#2Qg5.1b8_st,DB^q*EE->hdbr;)UW_5r23S[:se(;=c6QF^lO(<
%PJpX*.)7/<W'QY0a9Ul/KDP_kf+GMg=%EJi`*efR>?g,\f3-Fhg*#2I&ESX=7^\7``]cep;d>nF1E7>Ye*&J/1"9N`:,./"^t"b'
%8Pes_d,IEl1\rHE31'FA%K46U4O5$4rdm@q]S"85WLcFPYr.9ha&kc_W]+(r`.EAFi37Ql`WJ2(rj9M\TY<%t\G+X-cb%to<!`p`
%VhIVHj=4ps&c[aXCmQm^2h2_AAF2=+[nHP`HnGkCE$m/N&7A<A)/%rZWG6[oBB/"lMN&Va_Y"\VL@rOr#KO)hi:q"/h%\)J;2.f7
%qk(LQ&\d,)4-9#=3u5=X^Ao6_QIhn@>@Za1jdXsHgp_eV2rHBiFl74CILA-j3kQAd(NupaKA\(Y=="!^`mP^J.r^;Gb1IcJ76)3t
%$0*LlEeBdHeqHVL*c0cB'Fd65)C$u!#&V^*K\Jg&EprHp)rBpi'RgmeNVeG*O[!c)LG\$DjPX\;7RTj[J(%6_eJQoKF+[h2dpu<$
%LMH:ICkQbM;\gAX"b5"3IBm>CJrRZS^JL:O1F!5?:Qa"KSMpr3fn<r20"ThGUSu`EVV$Z[7YT;J2YM2NW/\[HLF?6rN(:W&23+uA
%Q/E_W@FfY,.O'PTIA]f"ip_gp)a5YX8Q1*Y8X-i@c*`(7#6S[m,GRB<R_f!W@*g;\f[RQ/C>:D"24/q&N=@f+#2KIcF5adJ'O>*c
%YZj'I3#K16Ae*sB'Y<\ECKQ>b6Fqe@^+f(O)"@,kDHM7q(+`9Gg`_%b_VJ\4g^K]q6!<.Ii@;1n#f=9qK+>W`pRrG!&<)`'U`mnT
%.FXALp_"JG9;e>el?m,i`O>MD,f\;f\2i$T_N!2M37\ju[#VAE2+?3,FY'da=IVq#]!gc,?n@haZ*BqP95Bc/qaQZoB;8LWX+qk&
%PBg;C%N^,fG1ApJK3]4GDHCZTG-J"_g)WkcKo9ld3;oW-JDs;*6-<CR!ra0$lsOs`[3])OjfW#0UQ1ZGX*"I/:BUE#rBpWI=?d;d
%7YA_>i(Y&mj!],E3G<P'H9:["Hl^Ird!-Eb60f/$?&3OiDc"(&lsUTWV=jG\9AG!n2j`H@ra#IEJ,<%AnEm^br:BBlI(9B0rL\Q9
%O$EZrhuED"rL]^3s3k?Riu`aIs*jtBm6CQun,E+:5Q:S1Y<RI5j6qKs_]OC&qk$+Pn3;Es-V3_Os1r(Bp##bhJ,@]%rI7%Vf'3~>
%AI9_PrivateDataEnd
